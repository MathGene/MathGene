/*
    MathGene Test Suite - Version 1.30
    Copyright (C) 2018  George J. Paulos

    MathGene is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    any later version.

    MathGene is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

var testNum = 0;
var htmlResults = "";
var tPass = 0;
var tFail = 0;
var vTime = new Date();
var startTime = 0;
var testTime = 0;
var totalTime = 0;
var index = 0;
var increment = 2;
var nodejs = false;
var consoleTime = 0;
var consolePass = 0;
var consoleFail = 0;

// tests are loaded in following arrays
var numerical =
[

"2+2","4",
"2.234+2.766","5",
"(2+2Cv[46])+Cv[46]","2+3Cv[46]",
"2-2","0",
"(2-2Cv[46])+Cv[46]","2-Cv[46]",
"(2-2Cv[46])-Cv[46]","2-3Cv[46]",
"2*10^3+2*10^2","2200",
"2*10^3-2*10^2","1800",
"4*10^-13-2*10^-13","2*10^-13",
"-5-3","-8",
"2*4","8",
"2(4)","8",
"2.5*2.5","6.25",
"2.5(2.5)","6.25",
"(2+2Cv[46])Cv[46]","-2+2Cv[46]",
"(2+2Cv[46])(2+2Cv[46])","8Cv[46]",
"(2)4","8",
"10/2","5",
"2^2","4",
"-2^2","-4",
"(-2)^2","4",
"2^2^3","256",
"(5*6)^3","27000",
"5Cv[45]","120",
"1+1Cv[46]","1+Cv[46]",
"1-1Cv[46]","1-Cv[46]",
"1Cv[46]","Cv[46]",
"-1Cv[46]","-Cv[46]",
"-11Cv[46]","-11Cv[46]",
"(8+8Cv[46])/(2+Cv[46])","4.8+1.6Cv[46]",
"(8+8Cv[46])/(2-Cv[46])","1.6+4.8Cv[46]",
"(8-8Cv[46])/(2+Cv[46])","1.6-4.8Cv[46]",
"(8+8Cv[46])/(2+2Cv[46])","4",
"(8+8Cv[46])/(2-2Cv[46])","4Cv[46]",
"(2+2Cv[46])*(2+2Cv[46])","8Cv[46]",
"(2+2Cv[46])*(2-2Cv[46])","8",
"(2+2Cv[46])*(-2+2Cv[46])","-8",
"(2+2Cv[46])*(-2-2Cv[46])","-8Cv[46]",
"Cv[46]^2","-1",
"Cv[46]^3","-Cv[46]",
"Cv[46]^4","1",
"(-1)^.5","Cv[46]",
"8^(1/3)","2",
"cbt(8)","2",
"cbt(1331)","11",
"cbt(-16+16Cv[46])","2+2Cv[46]",
"Cv[8]^(Cv[46]Cv[29])","-1",
"Cv[46]^Cv[46]","0.207879576",
"(3^2+4^2)^.5","5",
"sqt(3^2+4^2)","5",
"Cv[46]Cv[45]","0.49801567-0.15494983Cv[46]",
"sqt(-1)","Cv[46]",
"(-1)^0.5","Cv[46]",
"(-1)^.5","Cv[46]",
"sqt(Cv[46])","0.70710678+0.70710678Cv[46]",
"sqt(8Cv[46])","2+2Cv[46]",
"(2+2Cv[46])^2","8Cv[46]",
"2~Cv[29]","-2",
"2~(Cv[29]/2)","2Cv[46]",
"1~(Cv[29]2)","1",
"sin(Cv[29]/2)","1",
"cos(Cv[29]/2)","0",
"tan(Cv[29]/4)","1",
"sec(Cv[29]/3)","2",
"csc(Cv[29]/6)","2",
"cot(Cv[29]/4)","1",
"exp(lne(1+2Cv[46]))","1+2Cv[46]",
"exp(lne(1-2Cv[46]))","1-2Cv[46]",
"exp(lne(1-11Cv[46]))","1-11Cv[46]",
"exp(lne(1-Cv[46]))","1-Cv[46]",
"asn(sin(1+1Cv[46]))","1+Cv[46]",
"acs(cos(1+2Cv[46]))","1+2Cv[46]",
"asc(sec(1+2Cv[46]))","1+2Cv[46]",
"acc(csc(1+Cv[46]))","1+Cv[46]",
"atn(tan(1+2Cv[46]))","1+1.9999991Cv[46]",
"asn(sin(1/2))","0.5",
"acs(cos(1))","1",
"atn(tan(1))","1",
"asc(sec(1))","1",
"acc(csc(1))","1",
"act(cot(1/2))","0.5",
"ash(snh(1))","1",
"ach(csh(1))","1",
"ath(tnh(1/2))","0.5",
"axh(sch(1/2))","0.5",
"ayh(cch(1/2))","0.5",
"azh(cth(1/2))","0.5",
"ash(snh(Cv[46]+1))","1+Cv[46]",
"ach(csh(Cv[46]+1))","1+Cv[46]",
"ath(tnh(Cv[46]+1))","1+Cv[46]",
"act(cot(Cv[46]+1))","1+Cv[46]",
"axh(sch(Cv[46]+1/2))","0.49999991+Cv[46]",
"ayh(cch(Cv[46]+1/2))","0.5+Cv[46]",
"azh(cth(Cv[46]+1/2))","0.5+0.99999991Cv[46]",
"lne(-1)","3.1415927Cv[46]",
"log(-1)","3.1415927Cv[46]",
"lne(-Cv[8])","1+3.1415927Cv[46]",
"erf(.5)","0.520500078",
"efc(.5)","0.476936063",
"erf(1/2)","0.520500078",
"efc(1/2)","0.476936063",
"efc(erf(.1))","0.1",
"9Cv[45]","362880",
"(3*3)Cv[45]","362880",
"gam(8)","5040",
"gam(2+2Cv[46])","0.11229424+0.32361289Cv[46]",
"7!","5040",
"(2+2Cv[46])!","-0.42263729+0.87181426Cv[46]",
"pdf(.5)","0.352065337",
"cdf(.5)","0.691489121",
"pdf(1/2)","0.352065337",
"cdf(1/2)","0.691489121",
"lcf(1/2)","0.163479226",
"lpf(1/2)","0.627496096",
"int(1.5)","1",
"int(-1.5)","-2",
"int(1.5Cv[46])","Cv[46]",
"int(2.5Cv[46])","2Cv[46]",
"int(3.5+2.5Cv[46])","3+2Cv[46]",
"int(3.5-2.5Cv[46])","3-3Cv[46]",
"cei(1.5)","2",
"cei(-1.5)","-1",
"cei(1.5Cv[46])","2Cv[46]",
"cei(2.5Cv[46])","3Cv[46]",
"cei(3.5+2.5Cv[46])","4+3Cv[46]",
"cei(3.5-2.5Cv[46])","4-2Cv[46]",
"rou(1.6Cv[46])","2Cv[46]",
"rou(1.2Cv[46])","Cv[46]",
"rou(6.6-2.2Cv[46])","7-2Cv[46]",
"rou(-6.6-2.2Cv[46])","-7-2Cv[46]",
"rex(-4.5-2.5Cv[46])","-4.5",
"imx(-4.5-2.5Cv[46])","-2.5Cv[46]",
"con(-4.5-2.5Cv[46])","-4.5+2.5Cv[46]",
"abs(-3.5*10^-8)","3.5*10^-8",
"abs(3+4Cv[46])","5",
"10*10^100","1*10^101", 
"(2*10^-18)/(2*10^-4)","1*10^-14",
"(2.5*10^-18)/(2*10^-4)","1.25*10^-14",
"rnd(0)","0",
"mat(mat(1,2,3),mat(4,5,6))","mat(mat(1,2,3),mat(4,5,6))",
"mat(mat(3,4,2))*mat(mat(13,9,7,15),mat(8,7,4,6),mat(6,4,0,3))","mat(mat(83,63,37,75))",
"mat(mat(1,2),mat(3,4),mat(5,6))*mat(mat(1,2,3),mat(4,5,6))","mat(mat(9,12,15),mat(19,26,33),mat(29,40,51))",
"mat(mat(1,2,3),mat(4,5,6))*mat(mat(7,8),mat(9,10),mat(11,12))","mat(mat(58,64),mat(139,154))",
"mat(mat(1,2,3),mat(4,5,6))mat(mat(7,8),mat(9,10),mat(11,12))","mat(mat(58,64),mat(139,154))",
"mat(mat(1,2),mat(3,4))^2","mat(mat(7,10),mat(15,22))",
"mat(mat(1,2),mat(3,4))^2+mat(mat(1,2),mat(3,4))","mat(mat(8,12),mat(18,26))",
"mat(mat(1,2,3),mat(4,5,6),mat(7,8,9))^0","mat(mat(1,0,0),mat(0,1,0),mat(0,0,1))",
"mat(mat(1,2,3,4),mat(11,12,13,14))+mat(mat(5,6,7,8),mat(15,16,17,18))","mat(mat(6,8,10,12),mat(26,28,30,32))",
"mat(mat(1,2,3,4),mat(11,12,13,14))-mat(mat(5,6,7,8),mat(15,16,17,18))","mat(mat(-4,-4,-4,-4),mat(-4,-4,-4,-4))",
"mat(mat(1,2Cv[46]),mat(11Cv[46],12))+mat(mat(5,6),mat(15,16))","mat(mat(6,6+2Cv[46]),mat(15+11Cv[46],28))",
"2mat(mat(1,2Cv[46]),mat(11Cv[46],12))","mat(mat(2,4Cv[46]),mat(22Cv[46],24))",
"-mat(mat(1,2Cv[46]),mat(11Cv[46],12))","mat(mat(-1,-2Cv[46]),mat(-11Cv[46],-12))",
"mat(mat(1,2Cv[46]),mat(11Cv[46],12))^2","mat(mat(-21,26Cv[46]),mat(143Cv[46],122))",
"(mat(mat(1,2,3),mat(4,5,6),mat(11,12,13))*3)^2","mat(mat(378,432,486),mat(810,945,1080),mat(1818,2142,2466))",
"det(mat(mat(1,2),mat(3,4)))","-2",
"det(mat(mat(3,2,1),mat(2,1,-3),mat(4,0,1)))","-29",
"det(mat(mat(1,2,3,4),mat(5,6,7,8),mat(2,6,4,8),mat(3,1,1,2)))","72",
"trc(mat(mat(1,2),mat(3,4)))","5",
"trc(mat(mat(3,2,1),mat(2,1,-3),mat(4,0,1)))","5",
"trc(mat(mat(1,2,3,4),mat(5,6,7,8),mat(2,6,4,8),mat(3,1,1,2)))","13",
"mat(mat(1,2),mat(3,4))^-1","mat(mat(-2,1),mat(1.5,-0.5))",
"mat(mat(1,2),mat(3,4))^-1mat(mat(1,2),mat(3,4))","mat(mat(1,0),mat(0,1))",
"mat(mat(1,3,3),mat(1,4,3),mat(1,3,4))^-1","mat(mat(7,-3,-3),mat(-1,1,0),mat(-1,0,1))",
"mat(mat(4,0,0,0),mat(0,0,2,0),mat(0,1,2,0),mat(1,0,0,1))^-1","mat(mat(0.25,0,0,0),mat(0,-1,1,0),mat(0,0.5,0,0),mat(-0.25,0,0,1))",
"mat(mat(4,0,0,0),mat(0,0,2,0),mat(0,1,2,0),mat(1,0,0,1))^-1mat(mat(4,0,0,0),mat(0,0,2,0),mat(0,1,2,0),mat(1,0,0,1))","mat(mat(1,0,0,0),mat(0,1,0,0),mat(0,0,1,0),mat(0,0,0,1))",
"mat(mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))),mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))))^-1","mat(mat(mat(mat(-1.2,0.2),mat(1.1,-0.1)),mat(mat(-1.5,0.5),mat(1.375,-0.375))),mat(mat(mat(-1.2,0.2),mat(1.1,-0.1)),mat(mat(-1.5,0.5),mat(1.375,-0.375))))",
"mat(mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))),mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))))^0","mat(mat(mat(mat(1,0),mat(0,1)),mat(mat(0,0),mat(0,0))),mat(mat(mat(0,0),mat(0,0)),mat(mat(1,0),mat(0,1))))",
"mat(mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))),mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))))^2","mat(mat(mat(mat(70,80),mat(286,332)),mat(mat(78,88),mat(330,376))),mat(mat(mat(70,80),mat(286,332)),mat(mat(78,88),mat(330,376))))",
"mat(mat(mat(mat(1)),mat(mat(3))),mat(mat(mat(5)),mat(mat(7))))^-1*mat(mat(mat(mat(1)),mat(mat(3))),mat(mat(mat(5)),mat(mat(7))))","mat(mat(1,0),mat(0,1))",

];

var range =
[
"lne(Cv[10120])","Cv[10120]Cv[8800]0",
"tan(Cv[10120])","Cv[10120]Cv[8800]Cv[29]/2",
"cot(Cv[10120])","Cv[10120]Cv[8800]0",
"sec(Cv[10120])","Cv[10120]Cv[8800]Cv[29]/2",
"csc(Cv[10120])","Cv[10120]Cv[8800]0",
"asn(Cv[10120])","-(Cv[29]/2)Cv[8804]Cv[10120]Cv[8804]Cv[29]/2",
"acs(Cv[10120])","0Cv[8804]Cv[10120]Cv[8804]Cv[29]",
"atn(Cv[10120])","-(Cv[29]/2)Cv[8804]Cv[10120]Cv[8804]Cv[29]/2",
"act(Cv[10120])","0Cv[8804]Cv[10120]Cv[8804]Cv[29]",
"asc(Cv[10120])","0Cv[8804]Cv[10120]Cv[8804]Cv[29]",
"acc(Cv[10120])","-(Cv[29]/2)Cv[8804]Cv[10120]Cv[8804]Cv[29]/2",
"snh(Cv[10120])","",
"csh(Cv[10120])","",
"tnh(Cv[10120])","",
"cth(Cv[10120])","",
"sch(Cv[10120])","",
"cch(Cv[10120])","",
"ach(Cv[10120])","Cv[10120]Cv[8805]1",
"ath(Cv[10120])","Cv[10120]Cv[8805]1",
"axh(Cv[10120])","0Cv[8804]Cv[10120]Cv[8804]1",
"azh(Cv[10120])","-1Cv[8804]Cv[10120]Cv[8804]1",
"Cv[10120]^(1/(Cv[10110]+Cv[10109]))","Cv[10109]Cv[8800]-Cv[10110]Cv[10044]Cv[10110]Cv[8800]-Cv[10109]",
"Cv[10099]sqt(1-Cv[10108]^2/Cv[10076]^2)","Cv[10076]Cv[8800]0",
"Cv[10120](Cv[10121]+1)/(Cv[10121]+1)","Cv[10121]Cv[8800]-1",
"2cos(Cv[10120]Cv[10121])/Cv[10121]^3+2Cv[10120]sin(Cv[10120]Cv[10121])/Cv[10121]^2-Cv[10120]^2cos(Cv[10120]Cv[10121])/Cv[10121]+Cv[11100]","Cv[10121]Cv[8800]0",
"tan(Cv[10120]Cv[10121])+tan(Cv[10120]/Cv[10121])","Cv[10120]Cv[8800]Cv[29]/2Cv[10121]Cv[10044]Cv[10121]Cv[8800]Cv[29]/2Cv[10120]Cv[10044]Cv[10121]Cv[8800]0Cv[10044]Cv[10120]Cv[8800]Cv[10121]Cv[29]/2Cv[10044]Cv[10121]Cv[8800]2Cv[10120]/Cv[29]",
"atn(Cv[10120])Cv[10120]^2-2Cv[10120](Cv[10120]atn(Cv[10120])-lne(Cv[10120]^2+1)/2)+Cv[11100]","-(Cv[29]/2)Cv[8804]Cv[10120]Cv[8804]Cv[29]/2Cv[10044]Cv[10120]Cv[8800]sqt(-1)",
"Cv[10120]lne(Cv[10120]^2+1)-atn(Cv[10120])Cv[10120]^2+Cv[11100]","Cv[10120]Cv[8800]sqt(-1)Cv[10044]-Cv[29]/2Cv[8804]Cv[10120]Cv[8804]Cv[29]/2",
"(Cv[8]^Cv[10120]sin(Cv[10120]))/2+Cv[8]^Cv[10120]cos(Cv[10120])-(Cv[8]^Cv[10120]sin(Cv[10120]))/2","",
"Cv[10109]-lne(Cv[10120])/lne(Cv[10121])","Cv[10120]Cv[8800]0Cv[10044]Cv[10121]Cv[8800]0Cv[10044]Cv[10121]Cv[8800]1",
"(Cv[10120]^2+2Cv[10120]^2Cv[10121]-2Cv[10120]Cv[10121]+2Cv[10120]Cv[10121]^2-3Cv[10121]^2)/(2Cv[10120]-3Cv[10121]^2)","Cv[10120]Cv[8800]3Cv[10121]^2/2Cv[10044]Cv[10121]Cv[8800]sqt(2Cv[10120])/sqt(3)",
"sqt(-2Cv[963]^2lne(Cv[10112]Cv[963]sqt(2)sqt(Cv[29])))+Cv[10109]","Cv[10112]Cv[8800]0Cv[10044]Cv[963]Cv[8800]0",
"Cv[10121]/Cv[8]^Cv[10120]^2","",
"asn(Cv[8]^Cv[10120])/Cv[10121]","-(Cv[29]/2)Cv[8804]Cv[8]^Cv[10120]Cv[8804]Cv[29]/2Cv[10044]Cv[10121]Cv[8800]0",
"sum(10,Cv[10120]Cv[61]1)Cv[10120]","",
"prd(10,Cv[10120]Cv[61]1)Cv[10120]","",
"idr(Cv[10120])Cv[10120]^2","",
"tdr(Cv[10120])1/Cv[10120]^2","Cv[10120]Cv[8800]0",
"lim(Cv[10120],Cv[8734])(2Cv[10120]^3+4Cv[10120]^2)/(3Cv[10120]^3+1)","Cv[10120]Cv[8800]cbt(-(1/3))",

"-lne(cos(Cv[10120]Cv[10121]))/Cv[10121]-Cv[10121]lne(cos(Cv[10120]/Cv[10121]))+Cv[11100]","Cv[10120]Cv[8800]Cv[29]/2Cv[10121]Cv[10044]Cv[10121]Cv[8800]Cv[29]/2Cv[10120]Cv[10044]Cv[10121]Cv[8800]0Cv[10044]Cv[10120]Cv[8800]Cv[10121]Cv[29]/2Cv[10044]Cv[10121]Cv[8800]2Cv[10120]/Cv[29]",
"2Cv[10120]cos(Cv[10121]^2)/Cv[10121]cos(Cv[10120]^2)","Cv[10120]Cv[8800]sqt(Cv[29])/sqt(2)Cv[10044]Cv[10121]Cv[8800]0",

];

var domain =
[
"lim(Cv[10120],Cv[8734])(2Cv[10120]^3+4Cv[10120]^2)/(3Cv[10120]^3+1)","Cv[10120]Cv[8712]Cv[8477]",
"itg(Cv[10097],0)Cv[10120]^2Cv[8748]Cv[10120]","Cv[10120]Cv[8712]Cv[8450]Cv[59]Cv[10097]Cv[8712]Cv[8477]",
"itg(Cv[10097],Cv[10098])Cv[10120]^2Cv[8748]Cv[10120]","Cv[10120]Cv[8712]Cv[8450]Cv[59]Cv[10097]Cv[10044]Cv[10098]Cv[8712]Cv[8477]",
"sum(Cv[8734],Cv[10120]Cv[61]1)(1/Cv[10120]^2)","Cv[10120]Cv[8712]Cv[8484]",
"sum(Cv[8734],Cv[10120]Cv[61]1)(Cv[10121]/Cv[10120]^2)","Cv[10121]Cv[8712]Cv[8450]Cv[59]Cv[10120]Cv[8712]Cv[8484]",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])-Cv[10120]","Cv[10097]Cv[10044]Cv[10098]Cv[10044]Cv[10120]Cv[8712]Cv[8484]",
"mat(mat(Cv[10120],Cv[10121]))*mat(mat(Cv[10120]),mat(Cv[10121]))","Cv[10120]Cv[10044]Cv[10121]Cv[8712]Cv[8450]",
];

var matrix =
[
"mat(mat(1,2,3),mat(4,5,6))","mat(mat(1,2,3),mat(4,5,6))",
"mat(mat(3,4,2))*mat(mat(13,9,7,15),mat(8,7,4,6),mat(6,4,0,3))","mat(mat(83,63,37,75))",
"mat(mat(1,2),mat(3,4),mat(5,6))*mat(mat(1,2,3),mat(4,5,6))","mat(mat(9,12,15),mat(19,26,33),mat(29,40,51))",
"mat(mat(1,2,3),mat(4,5,6))*mat(mat(7,8),mat(9,10),mat(11,12))","mat(mat(58,64),mat(139,154))",
"mat(mat(1,2,3),mat(4,5,6))mat(mat(7,8),mat(9,10),mat(11,12))","mat(mat(58,64),mat(139,154))",
"mat(mat(1,2),mat(3,4))^2","mat(mat(7,10),mat(15,22))",
"mat(mat(1,2),mat(3,4))^2+mat(mat(1,2),mat(3,4))","mat(mat(8,12),mat(18,26))",
"mat(mat(1,2,3),mat(4,5,6),mat(7,8,9))^0","mat(mat(1,0,0),mat(0,1,0),mat(0,0,1))",
"mat(mat(1,2,3,4),mat(11,12,13,14))+mat(mat(5,6,7,8),mat(15,16,17,18))","mat(mat(6,8,10,12),mat(26,28,30,32))",
"mat(mat(1,2,3,4),mat(11,12,13,14))-mat(mat(5,6,7,8),mat(15,16,17,18))","mat(mat(-4,-4,-4,-4),mat(-4,-4,-4,-4))",
"mat(mat(1,2Cv[46]),mat(11Cv[46],12))+mat(mat(5,6),mat(15,16))","mat(mat(6,2Cv[46]+6),mat(11Cv[46]+15,28))",
"2mat(mat(1,2Cv[46]),mat(11Cv[46],12))","mat(mat(2,4Cv[46]),mat(22Cv[46],24))",
"-mat(mat(1,2Cv[46]),mat(11Cv[46],12))","mat(mat(-1,-2Cv[46]),mat(-11Cv[46],-12))",
"mat(mat(1,2Cv[46]),mat(11Cv[46],12))^2","mat(mat(-21,26Cv[46]),mat(143Cv[46],122))",
"(mat(mat(1,2,3),mat(4,5,6),mat(11,12,13))*3)^2","mat(mat(378,432,486),mat(810,945,1080),mat(1818,2142,2466))",
"mat(mat(Cv[10097],Cv[10098]),mat(Cv[10099],Cv[10100]))*mat(mat(1,2),mat(3,4))","mat(mat(3Cv[10098]+Cv[10097],4Cv[10098]+2Cv[10097]),mat(3Cv[10100]+Cv[10099],4Cv[10100]+2Cv[10099]))",
"Cv[10120]mat(mat(Cv[10097],Cv[10098]),mat(Cv[10102],Cv[10103]))","mat(mat(Cv[10097]Cv[10120],Cv[10098]Cv[10120]),mat(Cv[10102]Cv[10120],Cv[10103]Cv[10120]))",
"mat(mat(1,2,3,4))*mat(mat(1),mat(2),mat(3),mat(4))","mat(mat(30))",
"mat(mat(Cv[10120],Cv[10121]))*mat(mat(Cv[10120]),mat(Cv[10121]))","mat(mat(Cv[10121]^2+Cv[10120]^2))",
"det(mat(mat(1,2),mat(3,4)))","-2",
"det(mat(mat(Cv[10097],Cv[10098]),mat(Cv[10102],Cv[10103])))","Cv[10097]Cv[10103]-Cv[10098]Cv[10102]",
"trc(mat(mat(1,2),mat(3,4)))","5",
"trc(mat(mat(Cv[10100],Cv[10101]),mat(Cv[10102],Cv[10103])))","Cv[10103]+Cv[10100]",
"mat(mat(1,2),mat(3,4))^Cv[84]","mat(mat(1,3),mat(2,4))",
"mat(mat(Cv[10097],Cv[10098]),mat(Cv[10102],Cv[10103]))^Cv[84]","mat(mat(Cv[10097],Cv[10102]),mat(Cv[10098],Cv[10103]))",
"mat(mat(1,2),mat(3,4),mat(5,6))^Cv[84]","mat(mat(1,3,5),mat(2,4,6))",
"mat(mat(1,2),mat(3,4))^-1mat(mat(1,2),mat(3,4))","mat(mat(1,0),mat(0,1))",
"mat(mat(1,2),mat(3,4))^-1","mat(mat(-2,1),mat(3/2,-(1/2)))",
"mat(mat(1,3,3),mat(1,4,3),mat(1,3,4))^-1","mat(mat(7,-3,-3),mat(-1,1,0),mat(-1,0,1))",
"mat(mat(4,0,0,0),mat(0,0,2,0),mat(0,1,2,0),mat(1,0,0,1))^-1","mat(mat(1/4,0,0,0),mat(0,-1,1,0),mat(0,1/2,0,0),mat(-(1/4),0,0,1))",
"mat(mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))),mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))))^0","mat(mat(mat(mat(1,0),mat(0,1)),mat(mat(0,0),mat(0,0))),mat(mat(mat(0,0),mat(0,0)),mat(mat(1,0),mat(0,1))))",
"mat(mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))),mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))))^2","mat(mat(mat(mat(70,80),mat(286,332)),mat(mat(78,88),mat(330,376))),mat(mat(mat(70,80),mat(286,332)),mat(mat(78,88),mat(330,376))))",
"mat(mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))),mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))))^-1","mat(mat(mat(mat(-(6/5),1/5),mat(11/10,-(1/10))),mat(mat(-(3/2),1/2),mat(11/8,-(3/8)))),mat(mat(mat(-(6/5),1/5),mat(11/10,-(1/10))),mat(mat(-(3/2),1/2),mat(11/8,-(3/8)))))",
"mat(mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))),mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))))^Cv[10084]","mat(mat(mat(mat(1,11),mat(2,12)),mat(mat(1,11),mat(2,12))),mat(mat(mat(3,11),mat(4,12)),mat(mat(3,11),mat(4,12))))",
"mat(mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))),mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))))Cv[10120]","mat(mat(mat(mat(Cv[10120],2Cv[10120]),mat(11Cv[10120],12Cv[10120])),mat(mat(3Cv[10120],4Cv[10120]),mat(11Cv[10120],12Cv[10120]))),mat(mat(mat(Cv[10120],2Cv[10120]),mat(11Cv[10120],12Cv[10120])),mat(mat(3Cv[10120],4Cv[10120]),mat(11Cv[10120],12Cv[10120]))))",
"mat(mat(mat(mat(Cv[10120],2Cv[10120]),mat(11Cv[10120],12Cv[10120])),mat(mat(3Cv[10120],4Cv[10120]),mat(11Cv[10120],12Cv[10120]))),mat(mat(mat(Cv[10120],2Cv[10120]),mat(11Cv[10120],12Cv[10120])),mat(mat(3Cv[10120],4Cv[10120]),mat(11Cv[10120],12Cv[10120]))))*mat(mat(mat(mat(1,0),mat(0,1)),mat(mat(0,0),mat(0,0))),mat(mat(mat(0,0),mat(0,0)),mat(mat(1,0),mat(0,1))))","mat(mat(mat(mat(Cv[10120],2Cv[10120]),mat(11Cv[10120],12Cv[10120])),mat(mat(3Cv[10120],4Cv[10120]),mat(11Cv[10120],12Cv[10120]))),mat(mat(mat(Cv[10120],2Cv[10120]),mat(11Cv[10120],12Cv[10120])),mat(mat(3Cv[10120],4Cv[10120]),mat(11Cv[10120],12Cv[10120]))))",
//"mat(mat(a_1),mat(a_2),mat(a_3))Cv[8226]mat(mat(b_1,b_2,b_3))","mat(mat(Cv[10098]sbt(1)Cv[10097]sbt(1),Cv[10098]sbt(2)Cv[10097]sbt(1),Cv[10098]sbt(3)Cv[10097]sbt(1)),mat(Cv[10097]sbt(2)Cv[10098]sbt(1),Cv[10097]sbt(2)Cv[10098]sbt(2),Cv[10097]sbt(2)Cv[10098]sbt(3)),mat(Cv[10098]sbt(1)Cv[10097]sbt(3),Cv[10098]sbt(2)Cv[10097]sbt(3),Cv[10097]sbt(3)Cv[10098]sbt(3)))",
];

var reduce =
[

"1/2+1/5","7/10",
"1+1/5","6/5",
"12/220","3/55",
"11/75+18/7-2/3","359/175",
"65/68-11/7","-(293/476)",
"1/2*3/5","3/10",
"2^2^3","256",
"(2^2)^3","64",
"1/4-1","-(3/4)",
"1-1/4","3/4",
"4!-2!","22",
"4!*2!","48",
"(Cv[10120]^2+1)/Cv[10121]^3-(Cv[10120]^2+Cv[10122])/Cv[10121]^3","(1-Cv[10122])/Cv[10121]^3",
"cbt(Cv[10120]^2)","Cv[10120]^(2/3)",
"-Cv[10120]Cv[10121]/Cv[10121]","-Cv[10120]",
"Cv[10122]/Cv[10120]^-Cv[10121]","Cv[10122]Cv[10120]^Cv[10121]",
"Cv[10120]+2Cv[10120]","3Cv[10120]",

"Cv[10120]-2Cv[10120]","-Cv[10120]",
"-(Cv[10120]-2Cv[10120])","Cv[10120]",
"-(Cv[10120]-2Cv[10121])","2Cv[10121]-Cv[10120]",
"-Cv[10120]-2Cv[10121]","-2Cv[10121]-Cv[10120]",
"Cv[10120]Cv[10120]","Cv[10120]^2",
"Cv[10120]^3Cv[10120]^2","Cv[10120]^5",
"Cv[10120]^3.1Cv[10120]^2.3","Cv[10120]^5.4",
"Cv[10120]^Cv[10121]Cv[10120]^Cv[10122]","Cv[10120]^(Cv[10122]+Cv[10121])",
"Cv[10120]^2/Cv[10120]^4","1/Cv[10120]^2",
"Cv[10120]^Cv[10121]/Cv[10120]^Cv[10122]","Cv[10120]^(Cv[10121]-Cv[10122])",
"Cv[10120]Cv[10120]Cv[10120]","Cv[10120]^3",
"Cv[10120]^2Cv[10121]Cv[10122]^Cv[10113]/Cv[10120]Cv[10122]","Cv[10120]Cv[10121]Cv[10122]^(Cv[10113]-1)",
"(7+Cv[10120]+Cv[10121]-2Cv[10120])7","7Cv[10121]-7Cv[10120]+49",
"(2Cv[10120]+5Cv[10121])-(Cv[10120]-3Cv[10121])","8Cv[10121]+Cv[10120]",
"nrt(4,Cv[10120])","Cv[10120]^(1/4)",
"nrt(4,16)","2",
"sin(Cv[10120]+1)/cos(Cv[10120]+1)","tan(Cv[10120]+1)",
"cos(Cv[10120]+1)/sin(Cv[10120]+1)","cot(Cv[10120]+1)",
"sin(Cv[10120]+1)/tan(Cv[10120]+1)","cos(Cv[10120]+1)",
"tan(Cv[10120]+1)/sin(Cv[10120]+1)","sec(Cv[10120]+1)",
"sec(Cv[10120]+1)/tan(Cv[10120]+1)","csc(Cv[10120]+1)",
"tan(Cv[10120]+1)/sec(Cv[10120]+1)","sin(Cv[10120]+1)",
"sin(asn(Cv[10120]))","Cv[10120]",
"cos(acs(Cv[10120]))","Cv[10120]",
"tan(atn(Cv[10120]))","Cv[10120]",
"sec(asc(Cv[10120]))","Cv[10120]",
"csc(acc(Cv[10120]))","Cv[10120]",
"cot(act(Cv[10120]))","Cv[10120]",
"snh(ash(Cv[10120]))","Cv[10120]",
"csh(ach(Cv[10120]))","Cv[10120]",
"tnh(ath(Cv[10120]))","Cv[10120]",
"sin(3Cv[29])","0",
"sin(Cv[29])","0",
"sin(Cv[29]/2)","1",
"sin(3Cv[29]/2)","-1",
"sin(Cv[29]/3)","sqt(3)/2",
"sin(Cv[29]/4)","1/sqt(2)",
"sin(Cv[29]/6)","1/2",
"sin(Cv[29]/10)","(sqt(5)-1)/4",
"sin(3Cv[29]/10)","(sqt(5)+1)/4",
"sin(7Cv[29]/10)","(sqt(5)+1)/4",
"sin(9Cv[29]/10)","(sqt(5)-1)/4",
"sin(11Cv[29]/10)","(1-sqt(5))/4",
"sin(13Cv[29]/10)","-((1+sqt(5))/4)",
"sin(17Cv[29]/10)","-((1+sqt(5))/4)",
"sin(19Cv[29]/10)","(1-sqt(5))/4",
"sin(Cv[29]/12)","(sqt(6)-sqt(2))/4",
"sin(5Cv[29]/12)","(sqt(6)+sqt(2))/4",
"sin(7Cv[29]/12)","(sqt(6)+sqt(2))/4",
"sin(11Cv[29]/12)","(sqt(6)-sqt(2))/4",
"sin(13Cv[29]/12)","(sqt(2)-sqt(6))/4",
"sin(17Cv[29]/12)","-((sqt(2)+sqt(6))/4)",
"sin(19Cv[29]/12)","-((sqt(2)+sqt(6))/4)",
"sin(Cv[29]23/12)","(sqt(2)-sqt(6))/4",
"sin(Cv[29]47/12)","(sqt(2)-sqt(6))/4",
"sin(Cv[29]9/10)","(sqt(5)-1)/4",
"sin(Cv[29]11/10)","(1-sqt(5))/4",
"sin(Cv[29]19/10)","(1-sqt(5))/4",
"sin(Cv[29]11/6)","-(1/2)",
"sin(Cv[29]7/6)","-(1/2)",
"sin(Cv[29]5/6)","1/2",
"sin(Cv[29]3/4)","1/sqt(2)",
"sin(Cv[29]5/4)","-(1/sqt(2))",
"sin(Cv[29]7/4)","-(1/sqt(2))",
"sin(Cv[29]2/3)","sqt(3)/2",
"sin(Cv[29]5/3)","-(sqt(3)/2)",
"sin(Cv[29]7/3)","sqt(3)/2",
"sin(Cv[8734])","undefined",
"asn(sin(Cv[29]/3))","Cv[29]/3",
"asn(sin(Cv[29]/10))","Cv[29]/10",
"cos(5Cv[29])","-1",
"cos(3Cv[29])","-1",
"cos(Cv[29])","-1",
"cos(Cv[29]/2)","0",
"cos(3Cv[29]/2)","0",
"cos(Cv[29]/3)","1/2",
"cos(2Cv[29]/3)","-(1/2)",
"cos(4Cv[29]/3)","-(1/2)",
"cos(5Cv[29]/3)","1/2",
"cos(Cv[29]/4)","1/sqt(2)",
"cos(3Cv[29]/4)","-(1/sqt(2))",
"cos(5Cv[29]/4)","-(1/sqt(2))",
"cos(7Cv[29]/4)","1/sqt(2)",
"cos(Cv[29]/6)","sqt(3)/2",
"cos(5Cv[29]/6)","-(sqt(3)/2)",
"cos(7Cv[29]/6)","-(sqt(3)/2)",
"cos(11Cv[29]/6)","sqt(3)/2",
"cos(Cv[29]/10)","sqt(2sqt(5)+10)/4",
"cos(3Cv[29]/10)","sqt(10-2sqt(5))/4",
"cos(7Cv[29]/10)","-(sqt(10-2sqt(5))/4)",
"cos(9Cv[29]/10)","-(sqt(2sqt(5)+10)/4)",
"cos(11Cv[29]/10)","-(sqt(2sqt(5)+10)/4)",
"cos(13Cv[29]/10)","-(sqt(10-2sqt(5))/4)",
"cos(17Cv[29]/10)","sqt(10-2sqt(5))/4",
"cos(19Cv[29]/10)","sqt(2sqt(5)+10)/4",
"cos(Cv[29]/12)","(sqt(6)+sqt(2))/4",
"cos(11Cv[29]/12)","-((sqt(2)+sqt(6))/4)",
"cos(13Cv[29]/12)","-((sqt(2)+sqt(6))/4)",
"cos(23Cv[29]/12)","(sqt(6)+sqt(2))/4",
"cos(9Cv[29]/10)","-(sqt(2sqt(5)+10)/4)",
"cos(11Cv[29]/10)","-(sqt(2sqt(5)+10)/4)",
"cos(19Cv[29]/10)","sqt(2sqt(5)+10)/4",
"cos(5Cv[29]/6)","-(sqt(3)/2)",
"cos(7Cv[29]/6)","-(sqt(3)/2)",
"cos(11Cv[29]/6)","sqt(3)/2",
"cos(2Cv[29]/3)","-(1/2)",
"cos(5Cv[29]/3)","1/2",
"cos(7Cv[29]/3)","1/2",
"cos(Cv[8734])","undefined",
"acs(cos(Cv[29]/3))","Cv[29]/3",
"acs(cos(3Cv[29]/10))","3Cv[29]/10",
"tan(Cv[29]/2)","undefined",
"tan(3Cv[29]/2)","undefined",
"tan(Cv[29]/3)","sqt(3)",
"tan(2Cv[29]/3)","-sqt(3)",
"tan(4Cv[29]/3)","sqt(3)",
"tan(5Cv[29]/3)","-sqt(3)",
"tan(Cv[29]/4)","1",
"tan(3Cv[29]/4)","-1",
"tan(5Cv[29]/4)","1",
"tan(7Cv[29]/4)","-1",
"tan(Cv[29]/6)","1/sqt(3)",
"tan(5Cv[29]/6)","-(1/sqt(3))",
"tan(7Cv[29]/6)","1/sqt(3)",
"tan(11Cv[29]/6)","-(1/sqt(3))",
"tan(Cv[29]/12)","2-sqt(3)",
"tan(5Cv[29]/12)","sqt(3)+2",
"tan(7Cv[29]/12)","-sqt(3)-2",
"tan(11Cv[29]/12)","sqt(3)-2",
"tan(13Cv[29]/12)","2-sqt(3)",
"tan(17Cv[29]/12)","sqt(3)+2",
"tan(19Cv[29]/12)","-sqt(3)-2",
"tan(23Cv[29]/12)","sqt(3)-2",
"tan(Cv[29]5/6)","-(1/sqt(3))",
"tan(Cv[29]7/6)","1/sqt(3)",
"tan(Cv[29]11/6)","-(1/sqt(3))",
"tan(Cv[8734])","undefined",
"atn(tan(Cv[29]/3))","Cv[29]/3",
"atn(tan(Cv[29]/10))","Cv[29]/10",
"sec(Cv[29])","-1",
"sec(0)","1",
"sec(Cv[29]/2)","undefined",
"sec(3Cv[29]/2)","undefined",
"sec(Cv[29]/3)","2",
"sec(2Cv[29]/3)","-2",
"sec(4Cv[29]/3)","-2",
"sec(5Cv[29]/3)","2",
"sec(Cv[29]/4)","sqt(2)",
"sec(Cv[29]/6)","2/sqt(3)",
"sec(Cv[29]/12)","sqt(6)-sqt(2)",
"sec(Cv[8734])","undefined",
"asc(sec(Cv[29]/3))","Cv[29]/3",
"asc(sec(3Cv[29]/10))","3Cv[29]/10",
"csc(0)","undefined",
"csc(Cv[29]/2)","1",
"csc(Cv[29]/3)","2/sqt(3)",
"csc(Cv[29]/4)","sqt(2)",
"csc(Cv[29]/6)","2",
"csc(Cv[29]/12)","sqt(6)+sqt(2)",
"csc(Cv[8734])","undefined",
"acc(csc(Cv[29]/3))","Cv[29]/3",
"cot(Cv[29]/2)","0",
"cot(Cv[29]/3)","1/sqt(3)",
"cot(Cv[29]/4)","1",
"cot(Cv[29]/6)","sqt(3)",
"cot(Cv[29]/12)","sqt(3)+2",
"cot(0)","undefined",
"cot(Cv[8734])","undefined",
"act(cot(Cv[29]/10))","Cv[29]/10",
"act(cot(Cv[29]/12))","Cv[29]/12",
"asn(1)","Cv[29]/2",
"asn(-1)","-(Cv[29]/2)",
"acs(-1)","Cv[29]",
"atn(1)","Cv[29]/4",
"acc(1)","Cv[29]/2",
"act(0)","Cv[29]/2",
"act(1)","Cv[29]/4",
"1/sin(Cv[10120])^2","csc(Cv[10120])^2",
"5Cv[10121]/cos(Cv[10120])^2","5Cv[10121]sec(Cv[10120])^2",
"1/tan(Cv[10120])^2","cot(Cv[10120])^2",
"Cv[10121]/sec(Cv[10120])^2","Cv[10121]cos(Cv[10120])^2",
"1/csc(Cv[10120])^4","sin(Cv[10120])^4",
"1/snh(Cv[10120])^3","cch(Cv[10120])^3",
"1/csh(Cv[10120])^2","sch(Cv[10120])^2",
"1/tnh(Cv[10120])^2","cth(Cv[10120])^2",
"1/sch(Cv[10120])^2","csh(Cv[10120])^2",
"1/cch(Cv[10120])^2","snh(Cv[10120])^2",
"1/cth(Cv[10120])^2","tnh(Cv[10120])^2",
"1/cot(Cv[10120])^2","tan(Cv[10120])^2",
"1/csc(Cv[10120])","sin(Cv[10120])",
"1/cot(Cv[10120])","tan(Cv[10120])",
"1/sch(Cv[10120])","csh(Cv[10120])",
"1/cch(Cv[10120])","snh(Cv[10120])",
"1/tnh(Cv[10120])","cth(Cv[10120])",
"1/cth(Cv[10120])","tnh(Cv[10120])",
"1/csc(Cv[10120])^Cv[10121]","1/csc(Cv[10120])^Cv[10121]",
"snh(-Cv[10120])","-snh(Cv[10120])",
"csh(-Cv[10120])","csh(Cv[10120])",
"tnh(-Cv[10120])","-tnh(Cv[10120])",
"tnh(0)","0",
"sch(-Cv[10120])","sch(Cv[10120])",
"sch(0)","1",
"cch(-Cv[10120])","-cch(Cv[10120])",
"cch(0)","undefined",
"cth(-Cv[10120])","-cth(Cv[10120])",
"cth(0)","undefined",

"asn(sin(Cv[10120]))","Cv[10120]",
"acs(cos(Cv[10120]))","Cv[10120]",
"atn(tan(Cv[10120]))","Cv[10120]",
"asc(sec(Cv[10120]))","Cv[10120]",
"acc(csc(Cv[10120]))","Cv[10120]",
"act(cot(Cv[10120]))","Cv[10120]",
"sch(axh(Cv[10120]))","Cv[10120]",
"cch(ayh(Cv[10120]))","Cv[10120]",
"cth(azh(Cv[10120]))","Cv[10120]",
"ash(snh(Cv[10120]))","Cv[10120]",
"ach(csh(Cv[10120]))","Cv[10120]",
"ath(tnh(Cv[10120]))","Cv[10120]",
"axh(sch(Cv[10120]))","Cv[10120]",
"ayh(cch(Cv[10120]))","Cv[10120]",
"azh(cth(Cv[10120]))","Cv[10120]",
"azh(cth(ath(tnh(atn(tan(Cv[10120]))))))","Cv[10120]",

"(Cv[10120]!)(Cv[10121]!)","(Cv[10120]!)(Cv[10121]!)",
"Cv[10120]!Cv[10121]","Cv[10121](Cv[10120]!)",
"Cv[10121]Cv[10120]!","(Cv[10120]Cv[10121])!",

"exp(lne(Cv[10120]))","Cv[10120]",
"efc(1)","7",
"erf(0)","0",
"erf(efc(Cv[10120]))","Cv[10120]",
"efc(erf(Cv[10120]))","Cv[10120]",
"lne(Cv[8]^Cv[10120])","Cv[10120]",
"lne(-1)","Cv[46]Cv[29]",
"lne(-Cv[8])","Cv[46]Cv[29]+1",
"Cv[8]^lne(2Cv[10120]/3)","2Cv[10120]/3",
"log(10^Cv[10120])","Cv[10120]lne(10)",
"lgn(2,4)","2",
"Cv[10121]^(Cv[10122](Cv[10120]+1))","Cv[10121]^(Cv[10122](Cv[10120]+1))",
"sqt(2)/2","1/sqt(2)",
"sqt(3)/2","sqt(3)/2",

"(Cv[8]^Cv[10120]sin(Cv[10120]))/2+Cv[8]^Cv[10120]cos(Cv[10120])-(Cv[8]^Cv[10120]sin(Cv[10120]))/2","Cv[8]^Cv[10120]cos(Cv[10120])",
"-4Cv[10120](Cv[8]^(Cv[10120]^2))sqt(Cv[29])Cv[8]^(Cv[10120]^2)sqt(Cv[29])^(-2)","-(4Cv[10120]Cv[8]^(2Cv[10120]^2)/sqt(Cv[29]))",
"-4Cv[10120]Cv[8]^Cv[10120]^2sqt(Cv[29])Cv[8]^Cv[10120]^2sqt(Cv[29])^-2","-(4Cv[10120]Cv[8]^(2Cv[10120]^2)/sqt(Cv[29]))",
"2(Cv[10120]+1)","2Cv[10120]+2",

"Cv[10121]^(2(Cv[10120]+1))","Cv[10121]^(2Cv[10120]+2)",
"Cv[10121]^(2(Cv[10120]+1))","Cv[10121]^(2Cv[10120]+2)",
"Cv[8]^(Cv[46]Cv[29])","-1",
"Cv[46]^2","-1",
"Cv[46]^3","-Cv[46]",
"Cv[46]^4","1",
"sqt(3/100)","sqt(3)/10",
"sqt(3/110)","sqt(3)/sqt(110)",
"sqt(4/100)","1/5",
"sqt(4/110)","sqt(2)/sqt(55)",
"(3Cv[10120]Cv[10121])^2","9Cv[10120]^2Cv[10121]^2",
"Cv[10120](Cv[10121]+1)/(Cv[10121]+1)","Cv[10120]",
"Cv[10121]^(2(Cv[10120]+1))/Cv[8]","Cv[10121]^(2Cv[10120]+2)/Cv[8]",
"Cv[10121]^(2(Cv[10120]-1))/Cv[8]","Cv[10121]^(2Cv[10120]-2)/Cv[8]",
"(3Cv[10120]/Cv[10121])^2","9Cv[10120]^2/Cv[10121]^2",
"2Cv[10120]^3/3Cv[10120]^5","2/3Cv[10120]^2",
"Cv[10120]^2+Cv[10120]^2/2","3Cv[10120]^2/2",
"Cv[10120]^2-Cv[10120]^2/2","Cv[10120]^2/2",
"2Cv[10120]cos(Cv[10120]^2)/sin(Cv[10120]^2)","2Cv[10120]cot(Cv[10120]^2)",

"2sqt(2)/sqt(sqt(5)+5)","2sqt(2)/sqt(sqt(5)+5)",
"-Cv[8](1/Cv[10120])","-(Cv[8]/Cv[10120])",
"sqt(Cv[10121])(Cv[10120]sqt(Cv[10121]))^-2","1/Cv[10120]^2sqt(Cv[10121])",
"(3Cv[10120]Cv[10121]Cv[10122]-2Cv[10120]Cv[10121])/Cv[10121]","3Cv[10120]Cv[10122]-2Cv[10120]",
"(3Cv[10120]Cv[10121]^2Cv[10122]-2Cv[10120]Cv[10121])/Cv[10121]","3Cv[10120]Cv[10121]Cv[10122]-2Cv[10120]",
"Cv[10122]/(1-Cv[10121])/(2-Cv[10110])","Cv[10122]/((1-Cv[10121])(2-Cv[10110]))",

"2Cv[10120]^(3/4)/4Cv[10120]^(7/2)","1/2Cv[10120]^(11/4)",
"Cv[10120]^(3/4)Cv[10120]^(7/2)","Cv[10120]^(17/4)",
"2Cv[10120]^(3/4)Cv[10120]^(7/2)","2Cv[10120]^(17/4)",
"Cv[10120]^(3/4)Cv[10120]^(7/2)2","2Cv[10120]^(17/4)",
"1/Cv[10120]Cv[10120]^2","1/Cv[10120]^3",
"1/Cv[10120]^3Cv[10120]^2Cv[10120]^2","1/Cv[10120]^7",
"Cv[10120]/Cv[10120]^2","1/Cv[10120]",
"Cv[10120]/3Cv[10120]2Cv[10120]^2","1/6Cv[10120]^2",
"3/Cv[10120]+4/3Cv[10120]","13/3Cv[10120]",
"1/Cv[10120]+1/2Cv[10120]","3/2Cv[10120]",
"5Cv[10120]^2-3Cv[10120]^2/2","7Cv[10120]^2/2",
"5Cv[10120]^2+3Cv[10120]^2/2","13Cv[10120]^2/2",
"5Cv[10120]^2/4-3Cv[10120]^2/2","-(Cv[10120]^2/4)",
"2Cv[10120]^(2/3)Cv[10120]^(-5Cv[10121])","2Cv[10120]^(2/3-5Cv[10121])",
"2Cv[10120]^2/2Cv[10120]^5sqt(Cv[8]/Cv[10120])","1/Cv[10120]^(5/2)sqt(Cv[8])",
"sqt(4Cv[10120]/9Cv[10121])","2sqt(Cv[10120])/3sqt(Cv[10121])",
"Cv[10114]^(-5/2)Cv[8]^(Cv[10110]/2)+4Cv[8]^(Cv[10110]/2)/Cv[10114]^(5/2)","5Cv[8]^(Cv[10110]/2)/Cv[10114]^(5/2)",
"(2Cv[10120]+2)/2","Cv[10120]+1",

"-cos(2Cv[10120]+Cv[10121])/2","-(cos(2Cv[10120]+Cv[10121])/2)",
"sin(Cv[10120])^2+cos(Cv[10120])^2","1",
"cos(Cv[10120])^2+sin(Cv[10120])^2","1",
"sin(Cv[10120])^2-cos(Cv[10120])^2","-cos(2Cv[10120])",
"cos(Cv[10120])^2-sin(Cv[10120])^2","cos(2Cv[10120])",
"(cos(2Cv[10120])+1)/2","cos(Cv[10120])^2",
"(1-sin(2Cv[10120]))/2","sin(Cv[10120])^2",
"sqt(1-cos(Cv[10120])^2)","sin(Cv[10120])",
"sqt(1-sin(Cv[10120])^2)","cos(Cv[10120])",
"sqt(sec(Cv[10120])^2-1)","tan(Cv[10120])",
"sqt(csc(Cv[10120])^2-1)","cot(Cv[10120])",
"sqt(1+tan(Cv[10120])^2)","sec(Cv[10120])",
"sqt(1+cot(Cv[10120])^2)","csc(Cv[10120])",
"(3(lne(Cv[10097]Cv[10120])/3-1/9)Cv[10120]^2+Cv[10120]^2/3)Cv[10097]^3","Cv[10097]^3Cv[10120]^2lne(Cv[10097]Cv[10120])",
"Cv[10120]^(Cv[10121]+1)2^(Cv[10121]+1)","(2Cv[10120])^(Cv[10121]+1)",
"Cv[10120]^3Cv[10121]^3","Cv[10120]^3Cv[10121]^3",
"Cv[10120]^Cv[10099]/Cv[10121]^Cv[10099]","(Cv[10121]/Cv[10120])^Cv[10099]",
"Cv[10120]^Cv[10099]Cv[10122]^Cv[10099]","(Cv[10120]Cv[10122])^Cv[10099]",
"8Cv[8]^(Cv[46]Cv[29])","-8",

"sin(Cv[10120])cos(Cv[10121])+sin(Cv[10121])cos(Cv[10120])","sin(Cv[10121]+Cv[10120])",
"sin(Cv[10117])cos(Cv[10118])-sin(Cv[10118])cos(Cv[10117])","sin(Cv[10117]-Cv[10118])",
"cos(Cv[10120])cos(Cv[10121])+sin(Cv[10120])sin(Cv[10121])","cos(Cv[10121]+Cv[10120])",
"cos(Cv[10120])cos(Cv[10121])-sin(Cv[10120])sin(Cv[10121])","cos(Cv[10120]-Cv[10121])",
"snh(Cv[10120])csh(Cv[10121])-csh(Cv[10120])snh(Cv[10121])","snh(Cv[10120]-Cv[10121])",
"csh(Cv[10120])csh(Cv[10121])-snh(Cv[10120])snh(Cv[10121])","csh(Cv[10120]-Cv[10121])",

"(Cv[10120]+Cv[10120]^2)Cv[10120]","Cv[10120]^3+Cv[10120]^2",
"2Cv[10120](Cv[10120]^2/3-3Cv[10120]Cv[10121])","2Cv[10120]^3/3-6Cv[10121]Cv[10120]^2",

"atn(Cv[10120])Cv[10120]^2-2Cv[10120](Cv[10120]atn(Cv[10120])-lne(Cv[10120]^2+1)/2)+Cv[11100]","Cv[10120]lne(Cv[10120]^2+1)-Cv[10120]^2atn(Cv[10120])+Cv[11100]",

"(Cv[10097]sbt(1)+2Cv[10097]sbt(1)-Cv[10098])/(Cv[10097]sbt(1))","3-Cv[10098]/cnt(Cv[10097]sbt(1))",
"Cv[10121]sbt(2)(vec(Cv[10120]sbt(1))hat(Cv[10121]sbt(2))con(Cv[29]sbt(3))und(Cv[10122]sbt(4)))/Cv[10121]sbt(2)","con(Cv[29]sbt(3))hat(Cv[10121]sbt(2))und(Cv[10122]sbt(4))vec(Cv[10120]sbt(1))",
"udt(Cv[10120])+tld(Cv[10120])","udt(Cv[10120])+tld(Cv[10120])",
"cbr(Cv[10120]+Cv[10121])Cv[10122]","Cv[10122](Cv[10121]+Cv[10120])",
"sbr(Cv[10120]+Cv[10121])Cv[10122]","Cv[10122](Cv[10121]+Cv[10120])",

"Cv[10120]^2/(Cv[10120]^2+1)","1-1/(Cv[10120]^2+1)",
"(Cv[10120]^2+9Cv[10120]+14)/(Cv[10120]+7)","Cv[10120]+2",
"(6Cv[10120]^2-5Cv[10120]-1)/(3Cv[10120]-3)","2Cv[10120]+1/3",
"(6Cv[10120]^3-5Cv[10120]-1)/(3Cv[10120]-3)","2Cv[10120]^2+2Cv[10120]+1/3",
"(Cv[10120]^4+4)/(Cv[10120]^2-5)","Cv[10120]^2+29/(Cv[10120]^2-5)+5",
"(Cv[10120]^2+9Cv[10120]+14)/(Cv[10120]+7)","Cv[10120]+2",
"(Cv[10120]^3-1)/(Cv[10120]-1)","Cv[10120]^2+Cv[10120]+1",
"(3Cv[10120]+Cv[10120]^3-5Cv[10120]^2-15)/(Cv[10120]-5)","Cv[10120]^2+3",

"(Cv[10120]Cv[10121]+Cv[10120]^3-Cv[10121]^2-Cv[10121]Cv[10120]^2)/(Cv[10120]-Cv[10121])","Cv[10120]^2+Cv[10121]",
"(Cv[10120]Cv[10121]^2+Cv[10120]Cv[10121]+Cv[10121]^3+Cv[10120]^2)/(Cv[10121]+Cv[10120])","Cv[10121]^2+Cv[10120]",
"(Cv[10120]^2+2Cv[10120]^2Cv[10121]-2Cv[10120]Cv[10121]+2Cv[10120]Cv[10121]^2-3Cv[10121]^2)/(Cv[10120]+Cv[10121])","2Cv[10120]Cv[10121]+Cv[10120]-3Cv[10121]",

"(Cv[10120]Cv[10121]+6Cv[10120]Cv[10121]^2+3Cv[10121]^3+2Cv[10120]^2)/(3Cv[10121]^2+Cv[10120])","2Cv[10120]+Cv[10121]",
"(Cv[10120]Cv[10121]+6Cv[10120]Cv[10121]^2+3Cv[10121]^3+2Cv[10120]^2)/(Cv[10121]+2Cv[10120])","3Cv[10121]^2+Cv[10120]",
"(Cv[10120]Cv[10121]^2+Cv[10120]Cv[10121]+Cv[10121]^3+Cv[10120]^2)/(Cv[10120]+Cv[10121]^2)","Cv[10121]+Cv[10120]",
"(Cv[10120]Cv[10121]^2+Cv[10120]Cv[10121]+Cv[10121]^3+Cv[10120]^2)/(Cv[10120]+Cv[10121])","Cv[10121]^2+Cv[10120]",
"(Cv[10120]Cv[10121]^2+Cv[10120]Cv[10121]+Cv[10121]^3+Cv[10120]^2)/(Cv[10121]+Cv[10120])","Cv[10121]^2+Cv[10120]",
"-Cv[10120]Cv[10121]^2/Cv[10121]^3","-(Cv[10120]/Cv[10121])",
"(Cv[10120]Cv[10121]+Cv[10120]^3-Cv[10121]^2-Cv[10121]Cv[10120]^2)/(Cv[10120]^2+Cv[10121])","Cv[10120]-Cv[10121]",
"(2Cv[10120]+2)/(2Cv[10121]+2)","(Cv[10120]+1)/(Cv[10121]+1)",
"(4Cv[10120]+4)/(2Cv[10121]+2)","(2Cv[10120]+2)/(Cv[10121]+1)",
"(9Cv[10120]+6)/(3Cv[10121]+3)","(3Cv[10120]+2)/(Cv[10121]+1)",
"(Cv[10120]^3-3Cv[10120]^2+5Cv[10120]-3)/(Cv[10120]-1)","Cv[10120]^2-2Cv[10120]+3",
"(Cv[10120]^2-Cv[10121])+(Cv[10120]^2+2Cv[10121])","2Cv[10120]^2+Cv[10121]",

"4/(16Cv[10120]+4)","1/(4Cv[10120]+1)",
"(8Cv[10120]+4)/(4Cv[10120]^2+8Cv[10120]+4)","(2Cv[10120]+1)/(Cv[10120]^2+2Cv[10120]+1)",
"12/(6Cv[10120]+15)+4/(2Cv[10120]+5)","8/(2Cv[10120]+5)",
"125/(16Cv[10120]+40)-4/(2Cv[10120]+5)","93/(16Cv[10120]+40)",
"125/(16Cv[10120]+40)+4/(2Cv[10120]+5)","157/(16Cv[10120]+40)",
"(8Cv[10120])/((2Cv[10120]+6)(2Cv[10120]-6))+12/((2Cv[10120]+6)(2Cv[10120]-6))","(2Cv[10120]+3)/(Cv[10120]^2-9)",
"(8Cv[10120]+12)/(2Cv[10120]+6)(2Cv[10120]-6)","(2Cv[10120]+3)/(Cv[10120]^2-9)",

"1/sqt(1-Cv[10120])/(Cv[10120]^2/sqt(1-Cv[10120])^2+1)","1/((Cv[10120]/(1-Cv[10120])-Cv[10120]+1)sqt(1-Cv[10120]))",
"sqt(Cv[10120]/Cv[10121])+sqt(Cv[10097]/Cv[10098])","sqt(Cv[10120]/Cv[10121])+sqt(Cv[10097]/Cv[10098])",
"sqt(Cv[10120]/Cv[10121])-sqt(Cv[10097]/Cv[10098])","sqt(Cv[10120]/Cv[10121])-sqt(Cv[10097]/Cv[10098])",
"sqt(2/sqt(Cv[29]))","sqt(2)/Cv[29]^(1/4)",
"sqt(2/sqt(Cv[29]))=Cv[10120]","sqt(2)/Cv[29]^(1/4)=Cv[10120]",
"sqt(2/sqt(Cv[29]))=Cv[10120]^2/Cv[10120]","sqt(2)/Cv[29]^(1/4)=Cv[10120]",
"sqt(2/sqt(Cv[29]))Cv[60]Cv[10120]","sqt(2)/Cv[29]^(1/4)Cv[60]Cv[10120]",
"sqt(2/sqt(Cv[29]))Cv[62]Cv[10120]","sqt(2)/Cv[29]^(1/4)Cv[62]Cv[10120]",
"sqt(2/sqt(Cv[29]))Cv[8800]Cv[10120]^2/Cv[10120]","sqt(2)/Cv[29]^(1/4)Cv[8800]Cv[10120]",
"(Cv[10120]+Cv[10121])Cv[10122]/2(Cv[10120]+Cv[10121])","Cv[10122]/2",
"abs(Cv[10101]/Cv[10102])abs(Cv[10120]Cv[10121])","abs(Cv[10120]Cv[10121]Cv[10101]/Cv[10102])",
"Cv[8734]/Cv[10120]","Cv[8734]",
"-Cv[8734]/Cv[10120]","-Cv[8734]",
"snh(Cv[10120])/csh(Cv[10120])","tnh(Cv[10120])",
"snh(Cv[10120])/tnh(Cv[10120])","csh(Cv[10120])",
"abs(Cv[10101]/Cv[10102])/abs(Cv[10120]Cv[10121])","abs(Cv[10101]/Cv[10102]Cv[10120]Cv[10121])",

"sin(-Cv[10120])","-sin(Cv[10120])",
"sin(0)","0",
"sin(Cv[29])","0",
"cos(-Cv[10120])","cos(Cv[10120])",
"cos(0)","1",
"tan(-Cv[10120])","-tan(Cv[10120])",
"tan(0)","0",
"tan(Cv[29])","0",
"sec(-Cv[10120])","sec(Cv[10120])",
"csc(-Cv[10120])","-csc(Cv[10120])",
"cot(-Cv[10120])","-cot(Cv[10120])",
"snh(Cv[10120])csh(Cv[10121])+snh(Cv[10121])csh(Cv[10120])","snh(Cv[10121]+Cv[10120])",
"snh(Cv[10117])csh(Cv[10118])-snh(Cv[10118])csh(Cv[10117])","snh(Cv[10117]-Cv[10118])",
"csh(Cv[10120])csh(Cv[10121])+snh(Cv[10120])snh(Cv[10121])","csh(Cv[10121]+Cv[10120])",
"csh(Cv[10120])csh(Cv[10121])-snh(Cv[10120])snh(Cv[10121])","csh(Cv[10120]-Cv[10121])",
"csh(Cv[10120])+snh(Cv[10120])","Cv[8]^Cv[10120]",
"csh(Cv[10120])-snh(Cv[10120])","1/Cv[8]^Cv[10120]",
"snh(Cv[10120])+csh(Cv[10120])","Cv[8]^Cv[10120]",
"snh(Cv[10120])^2+csh(Cv[10120])^2","2csh(Cv[10120])^2",
"csh(Cv[10120])^2+snh(Cv[10120])^2","2csh(Cv[10120])^2",
"tan(Cv[10120]/2)+cot(Cv[10120]/2)","2csc(Cv[10120])",
"cot(Cv[10120]/2)+tan(Cv[10120]/2)","2csc(Cv[10120])",
"(csh(2Cv[10120])+1)/2","csh(Cv[10120])^2",
"1+Cv[8230]","1+Cv[8230]",
"Cv[8230]+1","1+Cv[8230]",
"sqt(81)","9",
"cbt(8)","2",
"gam(Cv[10120])","gam(Cv[10120])",
"gam(1)","1",
"abs(-2)","2",
"abs(abs(Cv[10120]))","abs(Cv[10120])",
"abs(-Cv[10120])","abs(Cv[10120])",
"cdf(pdf(lcf(lpf(rou(rnd(rex(frc(cei(Cv[10118])))))))))","cdf(pdf(lcf(lpf(rou(rnd(rex(frc(cei(Cv[10118])))))))))",

// SV dups
"(3Cv[10120]+Cv[10120]^3-5Cv[10120]^2-15)/(Cv[10120]^2+3)","Cv[10120]-5",
"(Cv[10120]^6+2Cv[10120]^4+6Cv[10120]-9)/(Cv[10120]^3+3)","Cv[10120]^3+2Cv[10120]-3",
"(Cv[10120]^3-3Cv[10120]^2+5Cv[10120]-3)/(Cv[10120]^2-2Cv[10120]+3)","Cv[10120]-1",
"(2(Cv[10097]Cv[10120]+Cv[10098])^(3/2)+3Cv[10097]Cv[10120]sqt(Cv[10097]Cv[10120]+Cv[10098])-2(Cv[10097]Cv[10120]+Cv[10098])^(3/2))/(3Cv[10097])","Cv[10120]sqt(Cv[10097]Cv[10120]+Cv[10098])",
"(2(Cv[10097]Cv[10120]+Cv[10098])^(3/2)+3Cv[10097]Cv[10120]sqt(Cv[10097]Cv[10120]+Cv[10098])-2(Cv[10097]Cv[10120]+Cv[10098])^(3/2))/Cv[10097]","3Cv[10120]sqt(Cv[10097]Cv[10120]+Cv[10098])",
"(Cv[8]^(Cv[10120]+2)(cos(Cv[10120]+2)-sin(Cv[10120]+2))+(sin(Cv[10120]+2)+cos(Cv[10120]+2))Cv[8]^(Cv[10120]+2))/2","Cv[8]^(Cv[10120]+2)cos(Cv[10120]+2)",
"(Cv[10120]^2+Cv[10121])/(Cv[10120]+1)","(Cv[10121]+1)/(Cv[10120]+1)+Cv[10120]-1",
"Cv[10121]/(Cv[8]-1)-Cv[10120]/(Cv[8]-1)+Cv[10122]","(Cv[10121]-Cv[10120])/(Cv[8]-1)+Cv[10122]",
"(Cv[10120]^2+2Cv[10120]^2Cv[10121]-2Cv[10120]Cv[10121]+2Cv[10120]Cv[10121]^2-3Cv[10121]^2)/(2Cv[10120]Cv[10121]+Cv[10120]-3Cv[10121])","Cv[10121]+Cv[10120]", 
//PV dups
"(1-2/(Cv[10120]^2+3))/Cv[10120]","1/Cv[10120]-2/((Cv[10120]^2+3)Cv[10120])",
"Cv[10120](2Cv[29]+1)/(2Cv[29]+1)","Cv[10120]",
"Cv[10121]cos(Cv[10120]Cv[10121])sin(Cv[10120]Cv[10121])/Cv[10121]cos(Cv[10120]Cv[10121])^2","tan(Cv[10120]Cv[10121])",
"(2Cv[29]+1)/Cv[10120](2Cv[29]+1)","1/Cv[10120]",

"Cv[10120]Cv[8226]Cv[10121]","Cv[10120]Cv[10121]",

//bugs
//"2Cv[10120]cos(Cv[10120]^2)/Cv[10121]sin(Cv[10120]^2)","2Cv[10120]cot(Cv[10120]^2)/Cv[10121]",
//"Cv[8747]cos(5Cv[10120])/Cv[8]^sin(5Cv[10120])Cv[8748]Cv[10120]","-(1/(5Cv[8]^sin(5Cv[10120]))+Cv[11100])",
//"tdr(Cv[10120])3Cv[10120]^2+4Cv[10120]+7Cv[10120]Cv[10121]+Cv[10121]^2","(7Cv[10120]+2Cv[10121])Cv[8748]Cv[10121]+(6Cv[10120]+4)Cv[8748]Cv[10120]",
//"idr(Cv[10120])atn(Cv[10120]/sqt(1-Cv[10120]^2))","1/sqt(1-Cv[10120]^2)",
//"(Cv[10120]/(Cv[10120]-1))sqt((1-Cv[10120])/(1+Cv[10120]))","(Cv[10120]/(Cv[10120]-1))sqt((1-Cv[10120])/(1+Cv[10120]))",

];

var expand =
[

"8Cv[10120]/(2Cv[10120]+6)(2Cv[10120]-6)","(2Cv[10120])/(Cv[10120]^2-9)",
"(8Cv[10120]+12)/(2Cv[10120]+6)(2Cv[10120]-6)","(2Cv[10120]+3)/(Cv[10120]^2-9)",
"(Cv[10120]+Cv[10121])/Cv[10122]","Cv[10121]/Cv[10122]+Cv[10120]/Cv[10122]",
"(Cv[10120]-Cv[10121])/Cv[10122]","Cv[10120]/Cv[10122]-Cv[10121]/Cv[10122]",
"Cv[10120]^(Cv[10121]+Cv[10122])","Cv[10120]^Cv[10121]Cv[10120]^Cv[10122]",
"Cv[10120]^(Cv[10121]-Cv[10122])","Cv[10120]^Cv[10121]/Cv[10120]^Cv[10122]",
"(Cv[10120]Cv[10121])^Cv[10122]","Cv[10120]^Cv[10122]Cv[10121]^Cv[10122]",
"(Cv[10120]/Cv[10121])^Cv[10122]","Cv[10120]^Cv[10122]/Cv[10121]^Cv[10122]",
"Cv[10120]/Cv[10121]+Cv[10097]/Cv[10098]","(Cv[10098]Cv[10120]+Cv[10097]Cv[10121])/Cv[10098]Cv[10121]",
"Cv[10120]/Cv[10121]-Cv[10097]/Cv[10098]","(Cv[10098]Cv[10120]-Cv[10097]Cv[10121])/Cv[10098]Cv[10121]",
"lne(sqt(Cv[10120]))","lne(Cv[10120])/2",
"lne(cbt(Cv[10120]))","lne(Cv[10120])/3",
"sqt(Cv[10120]/Cv[10121])","sqt(Cv[10120])/sqt(Cv[10121])",
"sqt(Cv[10120]Cv[10121])","sqt(Cv[10120])sqt(Cv[10121])",
"sqt(Cv[10120]/Cv[10121])+sqt(Cv[10097]/Cv[10098])","(sqt(Cv[10098])sqt(Cv[10120])+sqt(Cv[10097])sqt(Cv[10121]))/sqt(Cv[10098])sqt(Cv[10121])",
"sqt(Cv[10120]/Cv[10121])-sqt(Cv[10097]/Cv[10098])","(sqt(Cv[10098])sqt(Cv[10120])-sqt(Cv[10097])sqt(Cv[10121]))/sqt(Cv[10098])sqt(Cv[10121])",
"(3Cv[10120]Cv[10121]^2Cv[10122]-2Cv[10120]Cv[10121])/Cv[10121]Cv[10120]","3Cv[10121]Cv[10122]-2",
];

var factor =
[
"-Cv[10120]^2-Cv[10120]","Cv[10120](-Cv[10120]-1)",
"Cv[10120]^2+2Cv[10120]+1","(Cv[10120]+1)^2",
"2Cv[10120]^2+4Cv[10120]+2","2(Cv[10120]+1)^2",
"Cv[10120]^2+5Cv[10120]-14","(Cv[10120]+7)(Cv[10120]-2)",
"Cv[10120]^2-Cv[10120]-56","(Cv[10120]+7)(Cv[10120]-8)",
"6Cv[10121]^2-48Cv[10121]-120","6(Cv[10121]+2)(Cv[10121]-10)",
"3Cv[10120]^2-48","3(Cv[10120]+4)(Cv[10120]-4)",
"4Cv[10121]^2+25Cv[10121]-21","(Cv[10121]+7)(4Cv[10121]-3)",

"5Cv[10120]-Cv[10120]^2+24","(Cv[10120]-8)(-Cv[10120]-3)",
"-Cv[10120]^2-5Cv[10120]+24","(Cv[10120]-3)(-Cv[10120]-8)",
"Cv[10120]^2-11Cv[10120]+24","(Cv[10120]-3)(Cv[10120]-8)",
"6Cv[10120]^2-7Cv[10120]+1","(Cv[10120]-1)(6Cv[10120]-1)",
"2Cv[10120]^2-4Cv[10120]-16","2(Cv[10120]+2)(Cv[10120]-4)",
"2Cv[10120]^2+Cv[10120]-6","(Cv[10120]+2)(2Cv[10120]-3)",
"-6Cv[10120]^2+15Cv[10120]+36","3(Cv[10120]-4)(-2Cv[10120]-3)",
"20Cv[10120]^2+17Cv[10120]-63","(4Cv[10120]+9)(5Cv[10120]-7)",
"2Cv[10120]^2-4Cv[10120]-16","2(Cv[10120]+2)(Cv[10120]-4)",
"15Cv[10120]^2-30Cv[10120]+18","3(5Cv[10120]^2-10Cv[10120]+6)",
"sqt(2)4Cv[10121]^2+sqt(2)25Cv[10121]-sqt(2)21","(Cv[10121]+7)(4Cv[10121]-3)sqt(2)",
"9Cv[10120]^2-49","(3Cv[10120]+7)(3Cv[10120]-7)",
"36Cv[10120]^4-100","4(3Cv[10120]^2+5)(3Cv[10120]^2-5)",
"36Cv[10120]^4+Cv[10120]-100","36Cv[10120]^4+Cv[10120]-100",

"9Cv[10120]^2+24Cv[10120]Cv[10121]+16Cv[10121]^2","(4Cv[10121]+3Cv[10120])^2",
"81Cv[10120]^2-36Cv[10120]Cv[10121]+4Cv[10121]^2","(9Cv[10120]-2Cv[10121])^2",
"6Cv[10120]^2+Cv[10120]Cv[10121]-12Cv[10121]^2","(3Cv[10121]+2Cv[10120])(3Cv[10120]-4Cv[10121])",
"Cv[10120]^2+4Cv[10120]Cv[10121]-5Cv[10121]^2","(5Cv[10121]+Cv[10120])(Cv[10120]-Cv[10121])",
"25Cv[10120]^2-30Cv[10120]+9","(5Cv[10120]-3)^2",
"4Cv[10120]^4-25","(2Cv[10120]^2+5)(2Cv[10120]^2-5)",
"Cv[10120]^4+2Cv[10120]^2-8","(Cv[10120]^2+4)(Cv[10120]^2-2)",
"25Cv[10120]^4-30Cv[10120]^2+9","(5Cv[10120]^2-3)^2",
"Cv[10120]^6+6Cv[10120]^3+5","(Cv[10120]^3+1)(Cv[10120]^3+5)",

"15Cv[10120]^3-30Cv[10120]^2+18Cv[10120]","3Cv[10120](5Cv[10120]^2-10Cv[10120]+6)",
"15Cv[10120]^4-30Cv[10120]^3+18Cv[10120]^2","3Cv[10120]^2(5Cv[10120]^2-10Cv[10120]+6)",
"15Cv[10121]Cv[10120]^4-30Cv[10121]Cv[10120]^3+18Cv[10121]Cv[10120]^2","3Cv[10121]Cv[10120]^2(5Cv[10120]^2-10Cv[10120]+6)",
"Cv[10120]^6+Cv[10120]^4","Cv[10120]^4(Cv[10120]^2+1)",
"Cv[10121]Cv[10120]^10-Cv[10120]^6+Cv[10120]^4","Cv[10120]^4(Cv[10121]Cv[10120]^6-Cv[10120]^2+1)",
"Cv[10120]^2+Cv[10120]","Cv[10120](Cv[10120]+1)",

"Cv[10121]Cv[10120]^3+Cv[10121]2Cv[10120]^2+Cv[10120]Cv[10121]","Cv[10121]Cv[10120](Cv[10120]+1)^2",
"(5Cv[10120]-4)/(Cv[10120]^2-Cv[10120]-2)","3/(Cv[10120]+1)+2/(Cv[10120]-2)",
"Cv[10120]/(2Cv[10120]^2+5Cv[10120]-3)","Cv[10120]/((Cv[10120]+3)(2Cv[10120]-1))",
"4Cv[10122]^4-64","4(Cv[10122]^2+4)(Cv[10122]+2)(Cv[10122]-2)",
"2Cv[10120]Cv[10121]^2-8Cv[10120]Cv[10121]-24Cv[10120]","2Cv[10120](Cv[10121]+2)(Cv[10121]-6)",

"(Cv[10120]^6+6Cv[10120]^3+5)Cv[8]","Cv[8](Cv[10120]^3+1)(Cv[10120]^3+5)",
"(Cv[10120]^6+6Cv[10120]^3+5)/Cv[8]","(Cv[10120]^3+1)(Cv[10120]^3+5)/Cv[8]",

"(3Cv[10120]+2)/(Cv[10120]^2+Cv[10120])","2/Cv[10120]+1/(Cv[10120]+1)",
"(Cv[10120]-2)/(Cv[10120]^2+Cv[10120])","3/(Cv[10120]+1)-2/Cv[10120]",

"Cv[10120]Cv[10121]+Cv[10120]Cv[10122]","Cv[10120](Cv[10122]+Cv[10121])",
"Cv[10120]Cv[10121]+Cv[10120]Cv[10122]-Cv[10120]Cv[10097]","Cv[10120](Cv[10122]+Cv[10121]-Cv[10097])",
"Cv[29]cos(Cv[10120]Cv[10121])+Cv[29]tan(Cv[10120]Cv[10122])","Cv[29](tan(Cv[10120]Cv[10122])+cos(Cv[10120]Cv[10121]))",
"2Cv[10121]+2Cv[10122]","2(Cv[10122]+Cv[10121])",
"2Cv[10121]+4Cv[10122]","2(2Cv[10122]+Cv[10121])",
"3Cv[10121]+4Cv[10122]","4Cv[10122]+3Cv[10121]",
"2Cv[10120]Cv[10121]+4Cv[10120]Cv[10122]","2Cv[10120](2Cv[10122]+Cv[10121])",
"(2Cv[10120]+5)(16Cv[10120]+40)","8(2Cv[10120]+5)^2",


//bugs
//"Cv[10120]^8-Cv[10121]^4","(Cv[10120]^4-Cv[10121]^2)(Cv[10120]^2+Cv[10121])(Cv[10120]^2-Cv[10121])",
//"Cv[10120]^(2Cv[10097])-3Cv[10120]^Cv[10097]-4","(Cv[10120]^Cv[10097]+1)(Cv[10120]^Cv[10097]-4)",
//"Cv[10120]^(2Cv[10109])-36Cv[10121]^2","(Cv[10120]^Cv[10109]+6Cv[10121])(Cv[10120]^Cv[10109]-6Cv[10121])",
//"2Cv[10120]+Cv[10121]Cv[10120]+Cv[10122]","Cv[10120](Cv[10121]+2)+Cv[10122]",
];

var solve =
[
"Cv[10120]=-Cv[10121]","Cv[10121]","Cv[10121]=-Cv[10120]",
"Cv[10122]=Cv[10120]^Cv[10121]","Cv[10121]","Cv[10121]=lne(Cv[10122])/lne(Cv[10120])",
"Cv[10122]=Cv[10120]/Cv[10121]","Cv[10121]","Cv[10121]=Cv[10120]/Cv[10122]",
"Cv[10122]=Cv[10121]/Cv[10120]","Cv[10121]","Cv[10121]=Cv[10120]Cv[10122]",
"Cv[10122]=Cv[10120]Cv[10121]","Cv[10121]","Cv[10121]=Cv[10122]/Cv[10120]",
"Cv[10122]=Cv[10120]-Cv[10121]","Cv[10121]","Cv[10121]=Cv[10120]-Cv[10122]",
"Cv[10122]=Cv[10121]-Cv[10120]","Cv[10121]","Cv[10121]=Cv[10122]+Cv[10120]",
"Cv[10122]=Cv[10120]+Cv[10121]","Cv[10121]","Cv[10121]=Cv[10122]-Cv[10120]",
"Cv[10122]=sqt(Cv[10120])","Cv[10120]","Cv[10120]=Cv[10122]^2",
"Cv[10122]=cbt(Cv[10120])","Cv[10120]","Cv[10120]=Cv[10122]^3",
"Cv[10122]=lne(Cv[10120])","Cv[10120]","Cv[10120]=Cv[8]^Cv[10122]",
"Cv[10122]=log(Cv[10120])","Cv[10120]","Cv[10120]=Cv[8]^Cv[10122]",
"Cv[10122]=exp(Cv[10120])","Cv[10120]","Cv[10120]=lne(Cv[10122])",
"Cv[10122]=cos(Cv[10120])","Cv[10120]","Cv[10120]=acs(Cv[10122])",
"Cv[10122]=sin(Cv[10120])","Cv[10120]","Cv[10120]=asn(Cv[10122])",
"Cv[10122]=tan(Cv[10120])","Cv[10120]","Cv[10120]=atn(Cv[10122])",
"Cv[10122]=sec(Cv[10120])","Cv[10120]","Cv[10120]=asc(Cv[10122])",
"Cv[10122]=csc(Cv[10120])","Cv[10120]","Cv[10120]=acc(Cv[10122])",
"Cv[10122]=cot(Cv[10120])","Cv[10120]","Cv[10120]=act(Cv[10122])",
"Cv[10122]=erf(Cv[10120])","Cv[10120]","Cv[10120]=efc(Cv[10122])",
"Cv[10122]=lgn(Cv[10120],Cv[10121])","Cv[10120]","Cv[10120]=Cv[8]^(lne(Cv[10121])/Cv[10122])",
"Cv[10122]=lgn(Cv[10121],Cv[10120])","Cv[10120]","Cv[10120]=Cv[8]^(Cv[10122]lne(Cv[10121]))",
"Cv[10122]=nrt(Cv[10120],Cv[10121])","Cv[10120]","Cv[10120]=lne(Cv[10121])/lne(Cv[10122])",
"Cv[10122]=nrt(Cv[10121],Cv[10120])","Cv[10120]","Cv[10120]=Cv[10122]^Cv[10121]",
"Cv[10120]=Cv[10122]^2","Cv[10122]","Cv[10122]=sqt(Cv[10120])",
"Cv[10120]=Cv[10122]^3","Cv[10122]","Cv[10122]=cbt(Cv[10120])",
"Cv[10120]=Cv[8]^Cv[10122]","Cv[10122]","Cv[10122]=lne(Cv[10120])",
"Cv[10120]=10^Cv[10122]","Cv[10122]","Cv[10122]=lne(Cv[10120])/lne(10)",
"Cv[10120]=lne(Cv[10122])","Cv[10122]","Cv[10122]=Cv[8]^Cv[10120]",
"Cv[10120]=acs(Cv[10122])","Cv[10122]","Cv[10122]=cos(Cv[10120])",
"Cv[10120]=asn(Cv[10122])","Cv[10122]","Cv[10122]=sin(Cv[10120])",
"Cv[10120]=atn(Cv[10122])","Cv[10122]","Cv[10122]=tan(Cv[10120])",
"Cv[10120]=asc(Cv[10122])","Cv[10122]","Cv[10122]=sec(Cv[10120])",
"Cv[10120]=acc(Cv[10122])","Cv[10122]","Cv[10122]=csc(Cv[10120])",
"Cv[10120]=act(Cv[10122])","Cv[10122]","Cv[10122]=cot(Cv[10120])",
"Cv[10120]=snh(Cv[10122])","Cv[10122]","Cv[10122]=ash(Cv[10120])",
"Cv[10120]=csh(Cv[10122])","Cv[10122]","Cv[10122]=ach(Cv[10120])",
"Cv[10120]=tnh(Cv[10122])","Cv[10122]","Cv[10122]=ath(Cv[10120])",
"Cv[10120]=sch(Cv[10122])","Cv[10122]","Cv[10122]=axh(Cv[10120])",
"Cv[10120]=cch(Cv[10122])","Cv[10122]","Cv[10122]=ayh(Cv[10120])",
"Cv[10120]=cth(Cv[10122])","Cv[10122]","Cv[10122]=azh(Cv[10120])",
"Cv[10120]=ash(Cv[10122])","Cv[10122]","Cv[10122]=snh(Cv[10120])",
"Cv[10120]=ach(Cv[10122])","Cv[10122]","Cv[10122]=csh(Cv[10120])",
"Cv[10120]=ath(Cv[10122])","Cv[10122]","Cv[10122]=tnh(Cv[10120])",
"Cv[10120]=axh(Cv[10122])","Cv[10122]","Cv[10122]=sch(Cv[10120])",
"Cv[10120]=ayh(Cv[10122])","Cv[10122]","Cv[10122]=cch(Cv[10120])",
"Cv[10120]=azh(Cv[10122])","Cv[10122]","Cv[10122]=cth(Cv[10120])",
"Cv[10120]=efc(Cv[10122])","Cv[10122]","Cv[10122]=erf(Cv[10120])",
"Cv[10120]=Cv[10121]^(Cv[10109]/Cv[10110])","Cv[10121]","Cv[10121]=Cv[10120]^(Cv[10110]/Cv[10109])",
"Cv[10120]=Cv[10121]^(Cv[10109]/Cv[10110])","Cv[10109]","Cv[10109]=Cv[10110]lne(Cv[10120])/lne(Cv[10121])",
"Cv[10120]=Cv[10121]^(Cv[10109]/Cv[10110])","Cv[10110]","Cv[10110]=Cv[10109]lne(Cv[10121])/lne(Cv[10120])",
"Cv[10120]=Cv[10121]^(Cv[10109]-Cv[10110])","Cv[10121]","Cv[10121]=Cv[10120]^(1/(Cv[10109]-Cv[10110]))",
"Cv[10120]=Cv[10121]^(Cv[10109]-Cv[10110])","Cv[10109]","Cv[10109]=lne(Cv[10120])/lne(Cv[10121])+Cv[10110]",
"Cv[10120]=Cv[10121]^(Cv[10109]-Cv[10110])","Cv[10110]","Cv[10110]=Cv[10109]-lne(Cv[10120])/lne(Cv[10121])",
"Cv[10120]=Cv[10121]^(Cv[10109]+Cv[10110])","Cv[10121]","Cv[10121]=Cv[10120]^(1/(Cv[10110]+Cv[10109]))",
"Cv[10120]=Cv[10121]^(Cv[10109]+Cv[10110])","Cv[10109]","Cv[10109]=lne(Cv[10120])/lne(Cv[10121])-Cv[10110]",
"Cv[10120]=Cv[10121]^(Cv[10109]+Cv[10110])","Cv[10110]","Cv[10110]=lne(Cv[10120])/lne(Cv[10121])-Cv[10109]",
"Cv[10120]=Cv[10121]^(Cv[10109]Cv[10110])","Cv[10121]","Cv[10121]=Cv[10120]^(1/Cv[10109]Cv[10110])",
"Cv[10120]=Cv[10121]^(Cv[10109]Cv[10110])","Cv[10109]","Cv[10109]=lne(Cv[10120])/Cv[10110]lne(Cv[10121])",
"Cv[10120]=Cv[10121]^(Cv[10109]Cv[10110])","Cv[10110]","Cv[10110]=lne(Cv[10120])/Cv[10109]lne(Cv[10121])",
"Cv[10108]=Cv[10076]sqt(1-Cv[10118]^2/Cv[10099]^2)","Cv[10099]","Cv[10099]=Cv[10118]/sqt(1-Cv[10108]^2/Cv[10076]^2)",
"Cv[10108]=Cv[10076]sqt(1-Cv[10118]^2/Cv[10099]^2)","Cv[10076]","Cv[10076]=Cv[10108]/sqt(1-Cv[10118]^2/Cv[10099]^2)",
"Cv[10108]=Cv[10076]sqt(1-Cv[10118]^2/Cv[10099]^2)","Cv[10118]","Cv[10118]=Cv[10099]sqt(1-Cv[10108]^2/Cv[10076]^2)",
"(1/Cv[963]sqt(2Cv[29]))Cv[8]^(-(Cv[10120]-Cv[10109])^2/2Cv[963]^2)=Cv[10112]","Cv[10109]","Cv[10109]=Cv[10120]-sqt(-2Cv[963]^2lne(Cv[10112]Cv[963]sqt(2Cv[29])))",
"(1/Cv[963]sqt(2Cv[29]))Cv[8]^(-(Cv[10120]-Cv[10109])^2/2Cv[963]^2)=Cv[10112]","Cv[10120]","Cv[10120]=sqt(-2Cv[963]^2lne(Cv[10112]Cv[963]sqt(2Cv[29])))+Cv[10109]",
"sqt(1-Cv[10118]^2/Cv[10099]^2)=lne(Cv[10120])","Cv[10118]","Cv[10118]=Cv[10099]sqt(1-lne(Cv[10120])^2)",
"Cv[46]=2sqt(Cv[10120])","Cv[10120]","Cv[10120]=-(1/4)",
"Cv[10097]=Cv[10098]/sqt(Cv[10120]Cv[10121]Cv[10122])","Cv[10098]","Cv[10098]=Cv[10097]sqt(Cv[10120]Cv[10121]Cv[10122])",
"Cv[10121]=Cv[8747]2Cv[10120]Cv[8748]Cv[10120]","Cv[10121]","Cv[10121]=Cv[10120]^2+Cv[11100]",
"Cv[10121]/Cv[8]^Cv[10120]^2=Cv[10122]","Cv[10120]","Cv[10120]=sqt(lne(Cv[10121]/Cv[10122]))",

"Cv[8748]Cv[10120]/Cv[8748]Cv[10121]=Cv[10121]^2+3sin(Cv[10121])","Cv[10120]","Cv[10120]=Cv[10121]^3/3-3cos(Cv[10121])",
"tdr(Cv[10121])Cv[10120]=Cv[10121]^2+3sin(Cv[10121])","Cv[10120]","Cv[10120]=Cv[10121]^3/3-3cos(Cv[10121])",
"idr(Cv[10121])Cv[10120]=Cv[10121]^2+3sin(Cv[10121])","Cv[10120]","Cv[10120]=Cv[10121]^3/3-3cos(Cv[10121])",
"idr(Cv[10120])idr(Cv[10120])Cv[10121]=Cv[10120]^3","Cv[10121]","Cv[10121]=Cv[10120]^5/20",
"Cv[10120]^3=idr(Cv[10120])idr(Cv[10120])Cv[10121]","Cv[10121]","Cv[10121]=Cv[10120]^5/20",
"idr(Cv[10120],2)Cv[10121]=Cv[10120]^3","Cv[10121]","Cv[10121]=Cv[10120]^5/20",
"tdr(Cv[10120],2)Cv[10121]=Cv[10120]^3","Cv[10121]","Cv[10121]=Cv[10120]^5/20",

"sdr(Cv[10121],Cv[10120])=Cv[10120]^3","Cv[10121]","Cv[10121]=Cv[10120]^4/4",
"Cv[10120]^3=sdr(Cv[10121],Cv[10120])","Cv[10121]","Cv[10121]=Cv[10120]^4/4",
"psd(Cv[10121],Cv[10120])=Cv[10120]^3","Cv[10121]","Cv[10121]=Cv[10120]^4/4",
"sdr(Cv[10121],Cv[10120],2)=Cv[10120]^3","Cv[10121]","Cv[10121]=Cv[10120]^5/20",
"psd(Cv[10121],Cv[10120],2)=Cv[10120]^3","Cv[10121]","Cv[10121]=Cv[10120]^5/20",

"Cv[10121]/Cv[8]^Cv[10120]^2Cv[8800]Cv[10122]","Cv[10120]","Cv[10120]Cv[8800]sqt(lne(Cv[10121]/Cv[10122]))",
"Cv[10120]Cv[60]Cv[10121]+Cv[10122]","Cv[10121]","Cv[10121]Cv[62]Cv[10120]-Cv[10122]",
"Cv[10120]Cv[8804]Cv[10121]+Cv[10122]","Cv[10121]","Cv[10121]Cv[8805]Cv[10120]-Cv[10122]",
"Cv[10120]Cv[62]Cv[10121]-Cv[10122]","Cv[10121]","Cv[10121]Cv[60]Cv[10122]+Cv[10120]",
"Cv[10120]Cv[8805]Cv[10121]-Cv[10122]","Cv[10121]","Cv[10121]Cv[8804]Cv[10122]+Cv[10120]",
"Cv[10120]Cv[60]-Cv[10121]-Cv[10122]","Cv[10121]","Cv[10121]Cv[60]-Cv[10120]-Cv[10122]",
"Cv[10120]Cv[8804]-Cv[10121]-Cv[10122]","Cv[10121]","Cv[10121]Cv[8804]-Cv[10120]-Cv[10122]",
"-Cv[10120]Cv[60]Cv[10121]+Cv[10122]","Cv[10121]","Cv[10121]Cv[62]-Cv[10120]-Cv[10122]",
"Cv[10120]Cv[60]Cv[10121]","Cv[10121]","Cv[10121]Cv[62]Cv[10120]",
"Cv[10120]Cv[60]Cv[10121]","Cv[10120]","Cv[10120]Cv[60]Cv[10121]",
"Cv[10120]Cv[60]-Cv[10121]","Cv[10121]","Cv[10121]Cv[60]-Cv[10120]",
"Cv[10120]Cv[60]2Cv[10121]","Cv[10121]","Cv[10121]Cv[62]Cv[10120]/2",
"Cv[10120]Cv[60]-2Cv[10121]","Cv[10121]","Cv[10121]Cv[60]-(Cv[10120]/2)",
"Cv[10120]Cv[62]-2Cv[10121]","Cv[10121]","Cv[10121]Cv[62]-(Cv[10120]/2)",
"Cv[10120]Cv[8805]-2Cv[10121]","Cv[10121]","Cv[10121]Cv[8805]-(Cv[10120]/2)",

"Cv[10097]=Cv[10120]Cv[10121]-Cv[10120]Cv[10122]","Cv[10120]","Cv[10120]=Cv[10097]/(Cv[10121]-Cv[10122])",
"Cv[10120]/Cv[10121]=-Cv[10121]","Cv[10121]","Cv[10120]/Cv[10121]+Cv[10121]=0",

"Cv[10120]Cv[60]Cv[10121]Cv[10122]","Cv[10121]","undefined",
"=Cv[10121]/2","Cv[10121]","Cv[9998]",
"Cv[10120]/Cv[10121]=","Cv[10121]","Cv[9998]",
"tdr(Cv[10120])=Cv[10121]","Cv[10121]^2","Cv[9998]",
"Cv[10121]=Cv[8747]2Cv[10120]Cv[8748]","Cv[10121]","Cv[9998]",
"Cv[10120]/Cv[10121]","Cv[10121]","Cv[10120]/Cv[10121]",

//"2Cv[10098](Cv[10120]Cv[10121]-Cv[10120]Cv[10122])=Cv[10097]","Cv[10120]","Cv[10120]=Cv[10097]/(Cv[10121]-Cv[10122])2Cv[10098]",
];

var trigtoexp =
[
"sin(Cv[10120])","Cv[46]/(2Cv[8]^(Cv[46]Cv[10120]))-(Cv[46]Cv[8]^(Cv[46]Cv[10120]))/2",
"cos(Cv[10120])","Cv[8]^(Cv[46]Cv[10120])/2+1/(2Cv[8]^(Cv[46]Cv[10120]))",
"tan(Cv[10120])","(Cv[46]/Cv[8]^(Cv[46]Cv[10120])-Cv[46]Cv[8]^(Cv[46]Cv[10120]))/(Cv[8]^(Cv[46]Cv[10120])+1/Cv[8]^(Cv[46]Cv[10120]))",
"sec(Cv[10120])","2/(Cv[8]^(Cv[46]Cv[10120])+1/Cv[8]^(Cv[46]Cv[10120]))",
"csc(Cv[10120])","2Cv[46]/(Cv[8]^(Cv[46]Cv[10120])-1/Cv[8]^(Cv[46]Cv[10120]))",
"cot(Cv[10120])","Cv[46](Cv[8]^(Cv[46]Cv[10120])+1/Cv[8]^(Cv[46]Cv[10120]))/(Cv[8]^(Cv[46]Cv[10120])-1/Cv[8]^(Cv[46]Cv[10120]))",

"snh(Cv[10120])","Cv[8]^Cv[10120]/2-1/2Cv[8]^Cv[10120]",
"csh(Cv[10120])","Cv[8]^Cv[10120]/2+1/2Cv[8]^Cv[10120]",
"tnh(Cv[10120])","(Cv[8]^Cv[10120]-1/Cv[8]^Cv[10120])/(Cv[8]^Cv[10120]+1/Cv[8]^Cv[10120])",
"sch(Cv[10120])","2/(Cv[8]^Cv[10120]+1/Cv[8]^Cv[10120])",
"cch(Cv[10120])","2/(Cv[8]^(Cv[10120])-1/Cv[8]^(Cv[10120]))",
"cth(Cv[10120])","(Cv[8]^Cv[10120]+1/Cv[8]^Cv[10120])/(Cv[8]^Cv[10120]-1/Cv[8]^Cv[10120])",

"asn(Cv[10120])","-Cv[46]lne(sqt(1-Cv[10120]^2)+Cv[46]Cv[10120])",
"acs(Cv[10120])","Cv[46]lne(Cv[46]sqt(1-Cv[10120]^2)+Cv[10120])",
"atn(Cv[10120])","Cv[46]lne(2Cv[46]/(Cv[46]-Cv[10120])-1)/2",
"asc(Cv[10120])","-(lne(sqt(1-Cv[46]/Cv[10120]^2)+Cv[46]/Cv[10120])/2)",
"acc(Cv[10120])","-(lne(sqt(Cv[46]-Cv[46]/Cv[10120]^2)+Cv[46]/Cv[10120])/2)",
"act(Cv[10120])","Cv[46]lne(2Cv[46]/(Cv[46]+Cv[10120])-1)/2",

"ash(Cv[10120])","lne(sqt(Cv[10120]^2+1)+Cv[10120])",
"ach(Cv[10120])","lne(sqt(Cv[10120]^2-1)+Cv[10120])",
"ath(Cv[10120])","lne(Cv[10120]+1)lne(1-Cv[10120])/2",
];

var exptotrig =
[
"Cv[8]^Cv[10120]/2-1/2Cv[8]^Cv[10120]","snh(Cv[10120])",
"(Cv[8]^(2Cv[10120])-Cv[8]^-(2Cv[10120]))/2","snh(2Cv[10120])",
"Cv[8]^Cv[10120]/2+1/2Cv[8]^Cv[10120]","csh(Cv[10120])",
"(Cv[8]^Cv[10120]-1/Cv[8]^Cv[10120])/(Cv[8]^Cv[10120]+1/Cv[8]^Cv[10120])","tnh(Cv[10120])",
"(Cv[8]^(Cv[10121]Cv[10120])-1/Cv[8]^(Cv[10121]Cv[10120]))/(Cv[8]^(Cv[10121]Cv[10120])+1/Cv[8]^(Cv[10121]Cv[10120]))","tnh(Cv[10120]Cv[10121])",
"Cv[8]^(Cv[46]Cv[10120])/2Cv[46]-1/2Cv[46]Cv[8]^(Cv[46]Cv[10120])","sin(Cv[10120])",
"Cv[46]/(2Cv[8]^(3Cv[46]Cv[10120]))-(Cv[46]Cv[8]^(3Cv[46]Cv[10120]))/2","sin(3Cv[10120])",
"Cv[46]/(2Cv[8]^(2Cv[46]Cv[10120]))-(Cv[46]Cv[8]^(2Cv[46]Cv[10120]))/2","sin(2Cv[10120])",
"Cv[46]/(2Cv[8]^(Cv[46]Cv[10120]Cv[10121]))-(Cv[46]Cv[8]^(Cv[46]Cv[10120]Cv[10121]))/2","sin(Cv[10120]Cv[10121])",
"Cv[8]^(Cv[46]Cv[10120])/2+1/(2Cv[8]^(Cv[46]Cv[10120]))","cos(Cv[10120])",
"Cv[8]^(2Cv[46]Cv[10120])/2+1/(2Cv[8]^(2Cv[46]Cv[10120]))","cos(2Cv[10120])",
"2/(Cv[8]^(Cv[46]Cv[10120])+1/Cv[8]^(Cv[46]Cv[10120]))","sec(Cv[10120])",
"(Cv[46]/Cv[8]^(Cv[46]Cv[10120])-Cv[46]Cv[8]^(Cv[46]Cv[10120]))/(Cv[8]^(Cv[46]Cv[10120])+1/Cv[8]^(Cv[46]Cv[10120]))","tan(Cv[10120])",
"(Cv[46]/Cv[8]^(3Cv[46]Cv[10120])-Cv[46]Cv[8]^(3Cv[46]Cv[10120]))/(Cv[8]^(3Cv[46]Cv[10120])+1/Cv[8]^(3Cv[46]Cv[10120]))","tan(3Cv[10120])",
"(2Cv[46])/(Cv[8]^(Cv[46]Cv[10120])-1/Cv[8]^(Cv[46]Cv[10120]))","csc(Cv[10120])",
"(Cv[46](Cv[8]^(Cv[46]Cv[10120])+1/Cv[8]^(Cv[46]Cv[10120])))/(Cv[8]^(Cv[46]Cv[10120])-1/Cv[8]^(Cv[46]Cv[10120]))","cot(Cv[10120])",
"(Cv[46](Cv[8]^(Cv[46]Cv[10120]Cv[10121])+1/Cv[8]^(Cv[46]Cv[10120]Cv[10121])))/(Cv[8]^(Cv[46]Cv[10120]Cv[10121])-1/Cv[8]^(Cv[46]Cv[10120]Cv[10121]))","cot(Cv[10120]Cv[10121])",
];
var limits =
[
//"lim(Cv[10120],Cv[8734])(3Cv[10120]+sin(Cv[10120]))/2Cv[10120]","3/2", //squeeze
//"lim(Cv[10120],-Cv[8734])(Cv[10120]+3)/sqt(9Cv[10120]^2-5Cv[10120])","-(1/3)",
//"lim(Cv[10120],1)Cv[10120]/(Cv[10120]-1)-1/lne(x)","1/2",
//"lim(Cv[10120],Cv[8734])sqt(Cv[10120]^2+1)-sqt(Cv[10120]+1)","Cv[8734]",
//"lim(Cv[10120],-Cv[8734])Cv[10120]^3-Cv[10120]","-Cv[8734]",

"lim(Cv[10120],Cv[8734])(Cv[10120]/2)^(1/Cv[10120])","1",
"lim(Cv[10120],Cv[8734])1^Cv[10120]","1",
"lim(Cv[10120],Cv[8734])sqt(Cv[10120])/(Cv[10120]+1)","0",
"lim(Cv[10120],Cv[8734])Cv[10120]-sqt(Cv[10120]^2+7)","-Cv[8734]",
"lim(Cv[10120],Cv[8734])sin(Cv[10120])/Cv[10120]","0",
"lim(Cv[10120],Cv[8734])(1/2)^-Cv[10120]","Cv[8734]",
"lim(Cv[10120],Cv[8734])(1/2)^Cv[10120]","0",

"lim(Cv[10120],-Cv[8734])2/Cv[10120]","0",
"lim(Cv[10120],Cv[8734])Cv[8]^(2-4Cv[10120]-8Cv[10120]^2)","0",
"lim(Cv[10120],Cv[8734])1/2^Cv[10120]","0",
"lim(Cv[10120],Cv[8734])Cv[10120]^(1/sqt(Cv[10120]))","1",

"lim(Cv[10120],Cv[8734])(Cv[10120]+3)/sqt(9Cv[10120]^2-5Cv[10120])","1/3",
"lim(Cv[10120],-Cv[8734])Cv[10120]-sqt(Cv[10120]^2+7)","-Cv[8734]",

"lim(Cv[10120],Cv[8734])(7Cv[10120]^2+Cv[10120]-11)/(4-Cv[10120])","-Cv[8734]",
"lim(Cv[10120],-Cv[8734])Cv[8]^Cv[10120]/(4+5Cv[8]^(3Cv[10120]))","0",
"lim(Cv[10120],Cv[8734])Cv[8]^Cv[10120]/(5Cv[10120]+200)","Cv[8734]",

"lim(Cv[10120],Cv[8734])(3+lne(Cv[10120]))/(Cv[10120]^2+7)","0",
"lim(Cv[10120],0)Cv[8]^(-1/Cv[10120])/Cv[10120]^2","0",
"lim(Cv[10120],4)(Cv[10120]-4)/(sqt(Cv[10120])-2)","4",
"lim(Cv[10120],Cv[8734])1+3/Cv[10120]","1",
"lim(Cv[10120],Cv[8734])sqt(9-5/Cv[10120])","3",
"lim(Cv[10120],2)(Cv[10120]^3-4Cv[10120]^2+Cv[10120]+6)/(Cv[10120]^2-5Cv[10120]+6)","3",
"lim(Cv[10120],0)Cv[10120]^4sin(Cv[29]/Cv[10120])","0",
"lim(Cv[10120],0)Cv[10120]/(3-sqt(Cv[10120]+9))","-6",
"lim(Cv[10120],2)8-3Cv[10120]+12Cv[10120]^2","50",
"lim(Cv[10120],-3)(6+4Cv[10120])/(Cv[10120]^2+1)","-(3/5)",
"lim(Cv[10120],7)(Cv[10120]^2-4Cv[10120]-21)/(3Cv[10120]^2-17Cv[10120]-28)","2/5",
"lim(Cv[10120],0)Cv[10120]^4sin(Cv[29]/Cv[10120])","0",
"lim(Cv[10120],-3)(sqt(2Cv[10120]+22)-4)/(Cv[10120]+3)","1/4",
"lim(Cv[10120],8)cbt(Cv[10120])","2",
"lim(Cv[10120],-Cv[8734])Cv[10120]/2","-Cv[8734]",
"lim(Cv[10120],Cv[8734])Cv[10120]/2","Cv[8734]",
"lim(Cv[10120],Cv[8734])2/Cv[10120]","0",
"lim(Cv[10120],Cv[8734])Cv[10121]/Cv[10120]","0",
"lim(Cv[10120],-Cv[8734])2^Cv[10120]","0",
"lim(Cv[10120],Cv[8734])Cv[10120]^2","Cv[8734]",
"lim(Cv[10120],-Cv[8734])Cv[10120]^2","Cv[8734]",
"lim(Cv[10120],Cv[8734])(2Cv[10120]^3+4Cv[10120]^2)/(3Cv[10120]^3+1)","2/3",
"lim(Cv[10120],Cv[8734])(2Cv[10120]^3+Cv[10120]^2)/(3Cv[10120]^3+1)","2/3",
"lim(Cv[10120],Cv[8734])(2Cv[10120]^3)/(3Cv[10120]^3+1)","2/3",
"lim(Cv[10120],Cv[8734])(2Cv[10120]^3)/(3Cv[10120]^3)","2/3",
"lim(Cv[10120],Cv[8734])(2Cv[10120]^2-1)/Cv[10120]^2","2",
"lim(Cv[10120],Cv[8734])(Cv[10120]+1)/(Cv[10120]^2-2Cv[10120]+3)","0",
"lim(Cv[10120],Cv[8734])sqt((Cv[10120]^2+7Cv[10120])/(4Cv[10120]^2+5))","1/2",
"lim(Cv[10120],Cv[8734])1^Cv[10120]","1",
"lim(Cv[10120],Cv[8734])(7Cv[10120]^2+Cv[10120]-100)/(2Cv[10120]^2-5Cv[10120])","7/2",
"lim(Cv[10120],Cv[8734])(Cv[10120]^2-3Cv[10120]+7)/(Cv[10120]^3+10Cv[10120]-4)","0",
"lim(Cv[10120],Cv[8734])sqt((Cv[10120]^3+7Cv[10120])/4(Cv[10120]^3+5))","1/2",

"lim(Cv[10120],0)(cos(Cv[10120])-1)/Cv[10120]","0",
"lim(Cv[10120],0)(sec(Cv[10120])-1)/Cv[10120]","0",
"lim(Cv[10120],0)sin(Cv[10120])/Cv[10120]","1",
"lim(Cv[10120],0)Cv[10120]/sin(Cv[10120])","1",
"lim(Cv[10120],1)cot(Cv[10120])","cot(1)",
"lim(Cv[10120],1)snh(Cv[10120])","snh(1)",
"lim(Cv[10120],1)csh(Cv[10120])","csh(1)",
"lim(Cv[10120],1)tnh(Cv[10120])","tnh(1)",
"lim(Cv[10120],1)sch(Cv[10120])","sch(1)",
"lim(Cv[10120],1)cch(Cv[10120])","cch(1)",
"lim(Cv[10120],1)cth(Cv[10120])","cth(1)",
"lim(Cv[10120],0)asn(Cv[10120])/Cv[10120]","1",
"lim(Cv[10120],1)asn(Cv[10120])/Cv[10120]","Cv[29]/2",
"lim(Cv[10120],-Cv[8734])atn(Cv[10120])","-(Cv[29]/2)",
"lim(Cv[10120],Cv[8734])atn(Cv[10120])","Cv[29]/2",
"lim(Cv[10120],1)asc(Cv[10120])","asc(1)",
"lim(Cv[10120],1)acs(Cv[10120])","acs(1)",
"lim(Cv[10120],1)acc(Cv[10120])","Cv[29]/2",
"lim(Cv[10120],1)ash(Cv[10120])","ash(1)",
"lim(Cv[10120],1)ach(Cv[10120])","ach(1)",
"lim(Cv[10120],1)ath(Cv[10120])","ath(1)",
"lim(Cv[10120],1)axh(Cv[10120])","axh(1)",
"lim(Cv[10120],1)ayh(Cv[10120])","ayh(1)",
"lim(Cv[10120],1)azh(Cv[10120])","azh(1)",
"lim(Cv[10120],1)act(Cv[10120])","Cv[29]/4",
"lim(Cv[10120],0)cos(Cv[10120])Cv[10097]","Cv[10097]",
"lim(Cv[10120],0)sin(Cv[10097]Cv[10120])/sin(Cv[10098]Cv[10120])","Cv[10097]/Cv[10098]",

"lim(Cv[10120],0)tan(5Cv[10120])/Cv[10120]","5",
"lim(Cv[10120],1)tan(Cv[10120])/Cv[10120]","tan(1)",
"lim(Cv[10120],0)(4Cv[10120]+4Cv[10120]cos(4Cv[10120]))/sin(4Cv[10120])cos(4Cv[10120])","2",
"lim(Cv[10120],0)Cv[10120]sec(Cv[10120])/cos(Cv[10120])","0",
"lim(Cv[10120],0)sin(Cv[10097]Cv[10120])/Cv[10120]","Cv[10097]",
"lim(Cv[10120],0)(1-cos(Cv[10120]))/Cv[10120]^2","1/2",
"lim(Cv[10120],0)Cv[10120]csc(Cv[10120])/cos(Cv[10120])","0",
"lim(Cv[10120],0)Cv[10120]tan(Cv[10120])/sin(3Cv[10120])","0",
"lim(Cv[10120],0)asn(4Cv[10120])/atn(5Cv[10120])","4/5",
"lim(Cv[10120],0)Cv[10120]^sin(Cv[10120])","1",

"lim(Cv[10120],0)(Cv[8]^Cv[10120]-1)/Cv[10120]","1",
"lim(Cv[10120],Cv[8734])(1+Cv[10110]/Cv[10120])^Cv[10120]","Cv[8]^Cv[10110]",
"lim(Cv[10120],Cv[8734])Cv[10120]^(1/Cv[10120])","1",
"lim(Cv[10120],Cv[8734])(1+3/Cv[10120])^Cv[10120]","Cv[8]^3",

"lim(Cv[10120],0)(Cv[10097]^Cv[10120]-1)/Cv[10120]","lne(Cv[10097])",
"lim(Cv[10120],0)Cv[10120]lne(Cv[10120])","0",
"(lim(Cv[10120],0)Cv[10120])lim(Cv[10120],0)lne(Cv[10120])","0",
"lim(Cv[10120],1)lne(Cv[10120])/(Cv[10120]-1)","1",
"lim(Cv[10120],Cv[8734])lne(Cv[10120])/Cv[10120]","0",
"lim(Cv[10120],0)lne(Cv[10120])sin(Cv[10120])","0",
"lim(Cv[10120],-Cv[8734])lne(1/(Cv[10120]^2-5Cv[10120]))","-Cv[8734]",

"lim(Cv[10120],0)(1+Cv[10120])^(1/Cv[10120])","Cv[8]",
"lim(Cv[10120],0)(1+Cv[10120])^(Cv[10110]/Cv[10120])","Cv[8]^Cv[10110]",
"lim(Cv[10120],0)(1-Cv[10120])^(1/Cv[10120])","1/Cv[8]",
"lim(Cv[10120],0)(1-Cv[10120])^(Cv[10110]/Cv[10120])","1/Cv[8]^Cv[10110]",
"lim(Cv[10120],Cv[8734])((Cv[10120]+Cv[10110])/Cv[10120])^Cv[10120]","Cv[8]^Cv[10110]",
"lim(Cv[10120],Cv[8734])(1-1/Cv[10120])^Cv[10120]","1/Cv[8]",
"lim(Cv[10120],Cv[8734])(1-Cv[10110]/Cv[10120])^Cv[10120]","1/Cv[8]^Cv[10110]",
"lim(Cv[10120],1)nrt(4,Cv[10120])","1",
"lim(Cv[10120],1)lgn(2,Cv[10120])","0",
"lim(Cv[10120],1)exp(Cv[10120])","Cv[8]",

"lim(Cv[10120],-Cv[8734])Cv[10120]^3","-Cv[8734]",
"lim(Cv[10120],-Cv[8734])Cv[10120]^2","Cv[8734]",
"lim(Cv[10120],Cv[8734])(2Cv[10120]^3+1)/(3Cv[10120]^3)","2/3",
"lim(Cv[10120],0)Cv[10120]sin(1/Cv[10120])","0",

"(lim(Cv[10120],1)Cv[10120])+lim(Cv[10120],2)Cv[10120]","3",
"lim(Cv[10120],Cv[10121])Cv[10120]","Cv[10121]",
"lim(Cv[10120],Cv[10120])Cv[10120]","Cv[10120]",

"lim(Cv[10120],Cv[10121])","Cv[9998]",
"lim(,)","Cv[9998]",
"lim(Cv[10120],)","Cv[9998]",
"lim(Cv[10120],)Cv[10120]","Cv[9998]",
"lim(Cv[10120],0)","Cv[9998]",

"itg(-Cv[8734],0)Cv[10120]^2Cv[8748]Cv[10120]","-Cv[8734]",
"itg(-Cv[8734],0)Cv[10120]^3Cv[8748]Cv[10120]","Cv[8734]",
"itg(0,-Cv[8734])Cv[10120]^2Cv[8748]Cv[10120]","Cv[8734]",
"itg(0,-Cv[8734])Cv[10120]^3Cv[8748]Cv[10120]","-Cv[8734]",
"itg(Cv[8734],2)1/Cv[10120]^2Cv[8748]Cv[10120]","1/2",
"itg(Cv[8734],2)Cv[29]/Cv[10120]^2Cv[8748]Cv[10120]","Cv[29]/2",
"itg(-Cv[8734],0)Cv[10120]^2Cv[8748]Cv[10120]","-Cv[8734]",
"itg(2,Cv[8734])1/Cv[10120]^2Cv[8748]Cv[10120]","-(1/2)",
"itg(2,1)Cv[10120]","3/2",

];
var derivatives =
[
"idr(Cv[10120])1","0",
"idr(Cv[10120])Cv[10121]","0",
"idr(Cv[10120])Cv[10120]Cv[10121]","Cv[10121]",
"idr(Cv[10120])Cv[10120]","1",
"idr(Cv[10120])Cv[10120]^2","2Cv[10120]",
"idr(Cv[10121])Cv[10121]^2","2Cv[10121]",
"idr(Cv[10120])Cv[10121]-Cv[10120]^2","-2Cv[10120]",
"idr(Cv[10120])Cv[8]^Cv[10120]","Cv[8]^Cv[10120]",
"idr(Cv[10120])-Cv[8]^Cv[10120]","-Cv[8]^Cv[10120]",
"idr(Cv[10120])(-Cv[8])^Cv[10120]","(Cv[46]Cv[29]+1)(-Cv[8])^Cv[10120]",
"idr(Cv[10120])Cv[8]^(-Cv[10120])","-(1/Cv[8]^(Cv[10120]))",
"idr(Cv[10120])Cv[10120]Cv[8]^Cv[10120]","Cv[8]^Cv[10120]+Cv[10120]Cv[8]^Cv[10120]",
"idr(Cv[10120])Cv[10120]Cv[8]^(Cv[10121]Cv[10120])","Cv[8]^(Cv[10120]Cv[10121])+Cv[10120]Cv[10121]Cv[8]^(Cv[10120]Cv[10121])",
"idr(Cv[10120])Cv[8]^(Cv[10120]^2)","2Cv[10120]Cv[8]^(Cv[10120]^2)",
"idr(Cv[10120])idr(Cv[10120])Cv[10120]^3","6Cv[10120]",
"idr(Cv[10121])sqt(Cv[10121])","1/2sqt(Cv[10121])",
"idr(Cv[10120])sin(Cv[10120])+idr(Cv[10120])Cv[10120]^3","cos(Cv[10120])+6Cv[10120]",
"(idr(Cv[10120])sin(Cv[10120]))+(idr(Cv[10120])Cv[10120]^3)","3Cv[10120]^2+cos(Cv[10120])",
"(idr(Cv[10120])sin(Cv[10120]))+(idr(Cv[10121])Cv[10121]^3)","3Cv[10121]^2+cos(Cv[10120])",
"idr(Cv[10120])Cv[10120]^2+cos(Cv[10120])","2Cv[10120]-sin(Cv[10120])",
"idr(Cv[10120])Cv[10120]^2-cos(Cv[10120])","sin(Cv[10120])+2Cv[10120]",
"idr(Cv[10120])Cv[10120]^2cos(Cv[10120])","2Cv[10120]cos(Cv[10120])-Cv[10120]^2sin(Cv[10120])",
"idr(Cv[10120])sin(Cv[10120])/tan(Cv[10120])","-sin(Cv[10120])",
"idr(Cv[10120])sin(Cv[10120])","cos(Cv[10120])",
"idr(Cv[10120])Cv[10120]sin(Cv[10120])","sin(Cv[10120])+Cv[10120]cos(Cv[10120])",
"idr(Cv[10120])cos(Cv[10120])","-sin(Cv[10120])",
"idr(Cv[10120])tan(Cv[10120])","sec(Cv[10120])^2",
"idr(Cv[10120])sec(Cv[10120])","sec(Cv[10120])tan(Cv[10120])",
"idr(Cv[10120])csc(Cv[10120])","-cot(Cv[10120])csc(Cv[10120])",
"idr(Cv[10120])cot(Cv[10120])","-csc(Cv[10120])^2",
"idr(Cv[10120])snh(Cv[10120])","csh(Cv[10120])",
"idr(Cv[10120])csh(Cv[10120])","snh(Cv[10120])",
"idr(Cv[10120])tnh(Cv[10120])","1-tnh(Cv[10120])^2",
"idr(Cv[10120])sch(Cv[10120])","-sch(Cv[10120])tnh(Cv[10120])",
"idr(Cv[10120])cch(Cv[10120])","-cch(Cv[10120])cth(Cv[10120])",
"idr(Cv[10120])cth(Cv[10120])","1-cth(Cv[10120])^2",
"idr(Cv[10120])asn(Cv[10120])","1/sqt(1-Cv[10120]^2)",
"idr(Cv[10120])acs(Cv[10120])","-(1/sqt(1-Cv[10120]^2))",
"idr(Cv[10120])atn(Cv[10120])","1/(Cv[10120]^2+1)",
"idr(Cv[10120])asc(Cv[10120])","1/Cv[10120]^2sqt(1-1/Cv[10120]^2)",
"idr(Cv[10120])acc(Cv[10120])","-(1/Cv[10120]^2sqt(1-1/Cv[10120]^2))",
"idr(Cv[10120])act(Cv[10120])","-(1/(Cv[10120]^2+1))",
"idr(Cv[10120])ash(Cv[10120])","1/sqt(Cv[10120]^2+1)",
"idr(Cv[10120])ach(Cv[10120])","1/sqt(Cv[10120]^2-1)",
"idr(Cv[10120])ath(Cv[10120])","1/(1-Cv[10120]^2)",
"idr(Cv[10120])axh(Cv[10120])","-(1/Cv[10120]sqt(1-Cv[10120]^2))",
"idr(Cv[10120])ayh(Cv[10120])","-(1/Cv[10120]sqt(Cv[10120]^2+1))",
"idr(Cv[10120])azh(Cv[10120])","1/(1-Cv[10120]^2)",
"idr(Cv[10120])1/Cv[10120]","-(1/Cv[10120]^2)",
"idr(Cv[10120])Cv[10120]^Cv[10121]","Cv[10121]Cv[10120]^(Cv[10121]-1)",
"idr(Cv[10120])Cv[10120]/Cv[10121]","1/Cv[10121]",
"idr(Cv[10120])lne(Cv[10120])","1/Cv[10120]",
"idr(Cv[10120])lne(sin(Cv[10120]))","cot(Cv[10120])",
"idr(Cv[10120])idr(Cv[10120])sin(2Cv[29]Cv[10120]Cv[10121])","-4Cv[10121]^2Cv[29]^2sin(2Cv[10120]Cv[10121]Cv[29])",
"idr(Cv[10120])((Cv[8]^Cv[10120]sin(Cv[10120]))+(Cv[8]^Cv[10120]cos(Cv[10120])))/2","Cv[8]^Cv[10120]cos(Cv[10120])",
"idr(Cv[10120])2Cv[8]^(-Cv[10120]^2)/sqt(Cv[29])","-(4Cv[10120]/Cv[8]^(Cv[10120]^2)sqt(Cv[29]))",
"idr(Cv[10120])sin(Cv[10120]^2+Cv[10120]^3)","(3Cv[10120]^2+2Cv[10120])cos(Cv[10120]^3+Cv[10120]^2)",
"idr(Cv[10120])lne(sin(Cv[10120]^2))","2Cv[10120]cot(Cv[10120]^2)",
"idr(Cv[10120])2/sqt(Cv[29])Cv[8]^(Cv[10120]^2)","-(4Cv[10120]/Cv[8]^(Cv[10120]^2)sqt(Cv[29]))",
"idr(Cv[10120])(1/sqt(Cv[29]))Cv[8]^(-Cv[10120]^2)","-(2Cv[10120]/Cv[8]^(Cv[10120]^2)sqt(Cv[29]))",
"idr(Cv[10120])sqt(Cv[8]^Cv[10110]/Cv[10120])","-(Cv[8]^(Cv[10110]/2)/2Cv[10120]^(3/2))",
"idr(Cv[10120])sqt(Cv[8]/Cv[10120])","-(sqt(Cv[8])/2Cv[10120]^(3/2))",
"idr(Cv[10120])Cv[8]^Cv[10110]/Cv[10120]","-(Cv[8]^Cv[10110]/Cv[10120]^2)",
"idr(Cv[10120])abs(sin(Cv[10120]))","cos(Cv[10120])sin(Cv[10120])/abs(sin(Cv[10120]))",
"idr(Cv[10120])Cv[10120]^4+sin(Cv[10120]^2)-lne(Cv[10120])Cv[8]^Cv[10120]+7","4Cv[10120]^3+2Cv[10120]cos(Cv[10120]^2)-Cv[8]^Cv[10120]/Cv[10120]-Cv[8]^Cv[10120]lne(Cv[10120])",
"idr(Cv[10120])Cv[10097]/Cv[10120]^3+Cv[10098]/Cv[10120]^2-Cv[10099]/Cv[10120]","Cv[10099]/Cv[10120]^2-2Cv[10098]/Cv[10120]^3-3Cv[10097]/Cv[10120]^4",
"idr(Cv[10121])nrt(4,Cv[10121])","1/4Cv[10121]^(3/4)",
"idr(Cv[10121])cbt(Cv[10121])","1/3Cv[10121]^(2/3)",
"idr(Cv[10120])-sqt(1-Cv[10120]^2)","Cv[10120]/sqt(1-Cv[10120]^2)",
"idr(Cv[10120])abs(Cv[10120])","Cv[10120]/abs(Cv[10120])",
"idr(Cv[10120])Cv[10098]/Cv[10120]-Cv[10099]/Cv[10120]","(Cv[10099]-Cv[10098])/Cv[10120]^2",
"idr(Cv[10120])Cv[10097]/Cv[10120]+Cv[10098]/Cv[10120]-Cv[10099]/Cv[10120]","(Cv[10099]-Cv[10097]-Cv[10098])/Cv[10120]^2",
"idr(Cv[10120])Cv[8]^Cv[10120]^2/(2Cv[10120]^2+2)","(Cv[10120]Cv[8]^Cv[10120]^2)/(Cv[10120]^2+1)-(4Cv[10120]Cv[8]^Cv[10120]^2)/(2Cv[10120]^2+2)^2",
"idr(Cv[10120])lgn(Cv[10120],Cv[10121])","-(lne(Cv[10121])/Cv[10120]lne(Cv[10120])^2)",
"idr(Cv[10120])lgn(Cv[10121],Cv[10120])","1/Cv[10120]lne(Cv[10121])",
"idr(Cv[10120])efc(Cv[10120])","-(2/Cv[8]^Cv[10120]^2sqt(Cv[29]))",
"idr(Cv[10120])exp(Cv[10120])","Cv[8]^Cv[10120]",

"tdr(Cv[10120])4Cv[10120]^2+5Cv[10120]+6Cv[10120]Cv[10121]+Cv[10121]^2","(8Cv[10120]+6Cv[10121]+5)Cv[8748]Cv[10120]+(6Cv[10120]+2Cv[10121])Cv[8748]Cv[10121]",
"tdr(Cv[10120])2Cv[10120]^2Cv[10121]^3","4Cv[10120]Cv[10121]^3Cv[8748]Cv[10120]+6Cv[10120]^2Cv[10121]^2Cv[8748]Cv[10121]",
"tdr(Cv[10120])5Cv[10120]^2+Cv[10121]^2","2Cv[10121]Cv[8748]Cv[10121]+10Cv[10120]Cv[8748]Cv[10120]",

"idr(Cv[10120],2)x^3","6x",
"idr(Cv[10120],3)x^4","24x",
"idr(Cv[10120],2)Cv[10120]^3","6Cv[10120]",
"idr(Cv[10121],2)Cv[10121]^3","6Cv[10121]",
"idr(Cv[10120],2)Cv[10121]-Cv[10120]^3","-6Cv[10120]",
"idr(Cv[10120],2)Cv[10097]/Cv[10120]+Cv[10098]/Cv[10120]-Cv[10099]/Cv[10120]","(2Cv[10098]+2Cv[10097]-2Cv[10099])/Cv[10120]^3",

"tdr(Cv[10120],2)Cv[10120]^3","6Cv[10120]",
"tdr(Cv[10121],2)Cv[10121]^3","6Cv[10121]",

"idr(Cv[10097])sum(Cv[8734],Cv[10120]Cv[61]Cv[10120])(Cv[10097]/2^Cv[10120])","2^(1-Cv[10120]",
"idr(Cv[10110])prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10110]","(Cv[10097]-Cv[10098]+1)Cv[10110]^(Cv[10097]-Cv[10098])",
"idr(Cv[10110])lim(Cv[10120],0)(1+Cv[10120])^(Cv[10110]/Cv[10120])","Cv[8]^Cv[10110]",
"idr(Cv[10120])Cv[10120]^(3Cv[10120]","(3lne(x)+3)x^(3x)",

];
var integrals =
[
"Cv[8747]Cv[8748]Cv[10120]","Cv[10120]+Cv[11100]",
"Cv[8747]Cv[8748]Cv[10121]","Cv[10121]+Cv[11100]",
"Cv[8747]Cv[10120]Cv[8748]Cv[10120]","Cv[10120]^2/2+Cv[11100]",
"Cv[8747]2Cv[10121]/Cv[10120]Cv[8748]Cv[10120]","2Cv[10121]lne(Cv[10120])+Cv[11100]",
"-Cv[8747]4sin(Cv[10120])Cv[8748]Cv[10120]","4cos(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10120]^2Cv[8748]Cv[10120]","Cv[10120]^3/3+Cv[11100]",
"Cv[8747]Cv[10120]^2+Cv[10120]Cv[8748]Cv[10120]","Cv[10120]^3/3+Cv[10120]^2/2+Cv[11100]",
"Cv[8747]Cv[10120]^2+Cv[10121]Cv[8748]Cv[10120]","Cv[10120]^3/3+Cv[10120]Cv[10121]+Cv[11100]",
"Cv[8747]Cv[10120]^2-Cv[10120]Cv[8748]Cv[10120]","Cv[10120]^3/3-Cv[10120]^2/2+Cv[11100]",
"Cv[8747]Cv[10121]Cv[10120]^2Cv[8748]Cv[10120]","Cv[10121]Cv[10120]^3/3+Cv[11100]",
"Cv[8747]Cv[8]^(Cv[10120]Cv[10121])Cv[8748]Cv[10120]","Cv[8]^(Cv[10120]Cv[10121])/Cv[10121]+Cv[11100]",
"Cv[8747]lne(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]lne(Cv[10120])-Cv[10120]+Cv[11100]",
"Cv[8747]sqt(Cv[10120])Cv[8748]Cv[10120]","2Cv[10120]^(3/2)/3+Cv[11100]",
"Cv[8747]cbt(Cv[10120])Cv[8748]Cv[10120]","3Cv[10120]^(4/3)/4+Cv[11100]",
"Cv[8747]nrt(4,Cv[10120])Cv[8748]Cv[10120]","4Cv[10120]^(5/4)/5+Cv[11100]",
"Cv[8747]sin(Cv[10120])Cv[8748]Cv[10120]","-cos(Cv[10120])+Cv[11100]",
"Cv[8747]cos(Cv[10120])Cv[8748]Cv[10120]","sin(Cv[10120])+Cv[11100]",
"Cv[8747]tan(Cv[10120])Cv[8748]Cv[10120]","-lne(cos(Cv[10120]))+Cv[11100]",
"Cv[8747]sec(Cv[10120])Cv[8748]Cv[10120]","lne(tan(Cv[10120])+sec(Cv[10120]))+Cv[11100]",
"Cv[8747]Cv[10121]sec(Cv[10120])^2Cv[8748]Cv[10120]","Cv[10121]tan(Cv[10120])+Cv[11100]",
"Cv[8747]csc(Cv[10120])Cv[8748]Cv[10120]","lne(sin(Cv[10120]/2))-lne(cos(Cv[10120]/2))+Cv[11100]",
"Cv[8747]Cv[10121]csc(Cv[10120])^2Cv[8748]Cv[10120]","-Cv[10121]cot(Cv[10120])+Cv[11100]",
"Cv[8747]cot(Cv[10120])Cv[8748]Cv[10120]","lne(sin(Cv[10120]))+Cv[11100]",
"Cv[8747]asn(Cv[10120])Cv[8748]Cv[10120]","sqt(1-Cv[10120]^2)+Cv[10120]asn(Cv[10120])+Cv[11100]",
"Cv[8747]acs(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]acs(Cv[10120])-sqt(1-Cv[10120]^2)+Cv[11100]",
"Cv[8747]atn(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]atn(Cv[10120])-lne(Cv[10120]^2+1)/2+Cv[11100]",
"Cv[8747]asc(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]asc(Cv[10120])-atn(sqt(1-1/Cv[10120]^2))+Cv[11100]",
"Cv[8747]acc(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]acs(Cv[10120])-sqt(1-Cv[10120]^2)+Cv[11100]",
"Cv[8747]act(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]atn(Cv[10120])+lne(Cv[10120]^2+1)/2+Cv[11100]",
"Cv[8747]snh(Cv[10120])Cv[8748]Cv[10120]","csh(Cv[10120])+Cv[11100]",
"Cv[8747]csh(Cv[10120])Cv[8748]Cv[10120]","snh(Cv[10120])+Cv[11100]",
"Cv[8747]tnh(Cv[10120])Cv[8748]Cv[10120]","lne(csh(Cv[10120]))+Cv[11100]",
"Cv[8747]sch(Cv[10120])Cv[8748]Cv[10120]","2atn(snh(Cv[10120]/2))+Cv[11100]",
"Cv[8747]cch(Cv[10120])Cv[8748]Cv[10120]","lne(tnh(Cv[10120]/2))+Cv[11100]",
"Cv[8747]cth(Cv[10120])Cv[8748]Cv[10120]","lne(snh(Cv[10120]))+Cv[11100]",
"Cv[8747]sch(Cv[10120])^2Cv[8748]Cv[10120]","tnh(Cv[10120])+Cv[11100]",
"Cv[8747]cch(Cv[10120])^2Cv[8748]Cv[10120]","-cth(Cv[10120])+Cv[11100]",
"Cv[8747]cth(Cv[10120])^2Cv[8748]Cv[10120]","Cv[10120]-cth(Cv[10120])+Cv[11100]",
"Cv[8747]ash(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]ash(Cv[10120])-sqt(Cv[10120]^2+1)+Cv[11100]",
"Cv[8747]ach(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]ach(Cv[10120])-sqt(Cv[10120]^2-1)+Cv[11100]",
"Cv[8747]ath(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]ath(Cv[10120])+lne(Cv[10120]^2-1)/2+Cv[11100]",
"Cv[8747]Cv[10120]/3Cv[10121]Cv[8748]Cv[10120]","Cv[10120]^2/6Cv[10121]+Cv[11100]",
"Cv[8747]Cv[10120]lne(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]^2lne(Cv[10120])/2-Cv[10120]^2/4+Cv[11100]",
"Cv[8747]Cv[10121]/Cv[10120]^3Cv[8748]Cv[10120]","-(Cv[10121]/2Cv[10120]^2+Cv[11100])",
"Cv[8747](Cv[10121]+1)/Cv[10120]Cv[8748]Cv[10120]","(Cv[10121]+1)lne(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10120]/(Cv[10121]+1)Cv[8748]Cv[10120]","Cv[10120]^2/(2Cv[10121]+2)+Cv[11100]",
"Cv[8747]Cv[10120]lne(Cv[10120]^2)Cv[8748]Cv[10120]","Cv[10120]^2lne(Cv[10120])-Cv[10120]^2/2+Cv[11100]",
"Cv[8747](Cv[10120]+1)^3Cv[8748]Cv[10120]","(Cv[10120]+1)^4/4+Cv[11100]",
"Cv[8747]Cv[10120]/(Cv[10120]^2+1)Cv[8748]Cv[10120]","lne(Cv[10120]^2+1)/2+Cv[11100]",
"Cv[8747]Cv[10121]/(Cv[10120]+1)Cv[8748]Cv[10120]","Cv[10121]lne(Cv[10120]+1)+Cv[11100]",
"Cv[8747]Cv[10121]/sqt(Cv[10120])Cv[8748]Cv[10120]","2Cv[10121]sqt(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10121]/sin(Cv[10120])Cv[8748]Cv[10120]","Cv[10121](lne(sin(Cv[10120]/2))-lne(cos(Cv[10120]/2)))+Cv[11100]",
"Cv[8747]Cv[10121]/cos(Cv[10120])Cv[8748]Cv[10120]","Cv[10121]lne(tan(Cv[10120])+sec(Cv[10120]))+Cv[11100]",
"Cv[8747]Cv[10121]/tan(Cv[10120])Cv[8748]Cv[10120]","Cv[10121]lne(sin(Cv[10120]))+Cv[11100]",
"Cv[8747]Cv[10120]sqt(Cv[10120]Cv[10121])Cv[8748]Cv[10120]","2Cv[10120]^(5/2)sqt(Cv[10121])/5+Cv[11100]",
"Cv[8747]1/sqt(Cv[10120]+Cv[10121])Cv[8748]Cv[10120]","2sqt(Cv[10121]+Cv[10120])+Cv[11100]",
"Cv[8747]1/sqt(Cv[10120]-Cv[10121])Cv[8748]Cv[10120]","2sqt(Cv[10120]-Cv[10121])+Cv[11100]",
"Cv[8747]Cv[10120]/sqt(Cv[10120]Cv[10121])Cv[8748]Cv[10120]","2Cv[10120]^(3/2)/3sqt(Cv[10121])+Cv[11100]",
"Cv[8747]Cv[8]^(2Cv[10120]/3)Cv[8748]Cv[10120]","3Cv[8]^(2Cv[10120]/3)/2+Cv[11100]",
"Cv[8747]Cv[10121]/3(Cv[10120]Cv[10121])^(2/3)Cv[8748]Cv[10120]","cbt(Cv[10120]Cv[10121])+Cv[11100]",
"Cv[8747]Cv[10116]/(Cv[10120]+Cv[10121])^2Cv[8748]Cv[10120]","-(Cv[10116]/(Cv[10121]+Cv[10120]))+Cv[11100]",
"Cv[8747]Cv[10116]^Cv[10122]/(Cv[10097]Cv[10120]+Cv[10098])Cv[8748]Cv[10120]","Cv[10116]^Cv[10122]lne(Cv[10097]Cv[10120]+Cv[10098])/Cv[10097]+Cv[11100]",
"Cv[8747](2Cv[10120])^(Cv[10121]+1)Cv[8748]Cv[10120]","(2Cv[10120])^(Cv[10121]+2)/(2Cv[10121]+4)+Cv[11100]",
"Cv[8747]lne(Cv[10120]^Cv[10121])-Cv[10120]Cv[8748]Cv[10120]","Cv[10121](Cv[10120]lne(Cv[10120])-Cv[10120])-Cv[10120]^2/2+Cv[11100]",
"Cv[8747]1/(2Cv[10120]+3)^2Cv[8748]Cv[10120]","-(1/(4Cv[10120]+6))+Cv[11100]",
"Cv[8747]lne(Cv[10120]^2+1)Cv[8748]Cv[10120]","Cv[10120](lne(Cv[10120]^2+1)-2)+2atn(Cv[10120])+Cv[11100]",
"Cv[8747]sin(Cv[10120])Cv[8]^Cv[10120]Cv[8748]Cv[10120]","Cv[8]^Cv[10120](sin(Cv[10120])-cos(Cv[10120]))/2+Cv[11100]",
"Cv[8747]cos(Cv[10120])Cv[8]^Cv[10120]Cv[8748]Cv[10120]","(sin(Cv[10120])+cos(Cv[10120]))Cv[8]^Cv[10120]/2+Cv[11100]",
"Cv[10120]Cv[8747]4sin(Cv[10120])Cv[8748]Cv[10120]","Cv[11100]-4Cv[10120]cos(Cv[10120])",
"Cv[8747]Cv[8747]Cv[10120]+Cv[10121]Cv[8748]Cv[10120]Cv[8748]Cv[10121]","(Cv[10120]Cv[10121]^2+Cv[10121]Cv[10120]^2)/2+Cv[10121]Cv[11100]+Cv[11101]",
"Cv[8747]Cv[8747](Cv[10120]+Cv[10121])/(Cv[10120]Cv[10121])Cv[8748]Cv[10120]Cv[8748]Cv[10121]","Cv[10121]lne(Cv[10120])+Cv[10120]lne(Cv[10121])+Cv[10121]Cv[11100]+Cv[11101]",
"Cv[8747]Cv[8747](Cv[10120]Cv[10121])^2Cv[8748]Cv[10120]Cv[8748]Cv[10121]","Cv[10120]^3Cv[10121]^3/9+Cv[10121]Cv[11100]+Cv[11101]",
"Cv[8747]Cv[8747]Cv[10121]/Cv[10120]Cv[8748]Cv[10120]Cv[8748]Cv[10121]","Cv[10121]^2lne(Cv[10120])/2+Cv[10121]Cv[11100]+Cv[11101]",
"Cv[8747]Cv[8747]Cv[10120]/Cv[10121]Cv[8748]Cv[10121]Cv[8748]Cv[10120]","Cv[10120]^2lne(Cv[10121])/2+Cv[10120]Cv[11100]+Cv[11101]",
"Cv[8747]Cv[8747]Cv[10120]/Cv[10121]Cv[8748]Cv[10120]Cv[8748]Cv[10121]","Cv[10120]^2lne(Cv[10121])/2+Cv[10121]Cv[11100]+Cv[11101]",
"Cv[8747]Cv[8747]Cv[10120]/Cv[10121]Cv[8748]Cv[10120]Cv[8748]Cv[10121]","Cv[10120]^2lne(Cv[10121])/2+Cv[10121]Cv[11100]+Cv[11101]",
"Cv[8747]Cv[8747]Cv[8747]Cv[10120]/Cv[10121]Cv[8748]Cv[10120]Cv[8748]Cv[10120]Cv[8748]Cv[10120]","Cv[10120]^4/24Cv[10121]+Cv[11100]Cv[10120]^2/2+Cv[10120]Cv[11101]+Cv[11102]",
"Cv[8747]Cv[10120]/sqt(2Cv[10120]^2+1)Cv[8748]Cv[10120]","sqt(2Cv[10120]^2+1)/2+Cv[11100]",
"Cv[8747]Cv[10120]Cv[10121]/sqt(2Cv[10120]^2+Cv[10122])Cv[8748]Cv[10120]","Cv[10121]sqt(2Cv[10120]^2+Cv[10122])/2+Cv[11100]",
"Cv[8747](Cv[10120]+Cv[10121])^Cv[10122]Cv[8748]Cv[10120]","(Cv[10121]+Cv[10120])^(Cv[10122]+1)/(Cv[10122]+1)+Cv[11100]",
"Cv[8747](5Cv[10120]-4)/(Cv[10120]^2-Cv[10120]-2)Cv[8748]Cv[10120]","3lne(Cv[10120]+1)+2lne(Cv[10120]-2)+Cv[11100]",
"Cv[8747]1/(Cv[10120]^2-16)Cv[8748]Cv[10120]","(lne(8Cv[10120]-32)-lne(-8Cv[10120]-32))/8+Cv[11100]",
"Cv[8747](Cv[10120]-1)/(Cv[10120]^2+Cv[10120])Cv[8748]Cv[10120]","2lne(Cv[10120]+1)-lne(Cv[10120])+Cv[11100]",
"Cv[8747](3^Cv[10120]+4^Cv[10120])^2Cv[8748]Cv[10120]","3^(2Cv[10120])/2lne(3)+4^(2Cv[10120])/2lne(4)+2(12^Cv[10120])/lne(12)+Cv[11100]",
"Cv[8747]Cv[10120]/(sqt(1-4Cv[10120]^2))Cv[8748]Cv[10120]","-(sqt(1-4Cv[10120]^2)/4)+Cv[11100]",
"Cv[8747]cos(Cv[10120])sin(Cv[10120])Cv[8748]Cv[10120]","-(cos(Cv[10120])^2/2)+Cv[11100]",
"Cv[8747]sin(lne(Cv[10120]))Cv[8748]Cv[10120]","-(Cv[10120](cos(lne(Cv[10120]))-sin(lne(Cv[10120])))/2)+Cv[11100]",
"Cv[8747]cos(lne(Cv[10120]))Cv[8748]Cv[10120]","(Cv[10120](sin(lne(Cv[10120]))+cos(lne(Cv[10120])))/2)+Cv[11100]",
"Cv[8747]1/(1-sqt(Cv[10120]))Cv[8748]Cv[10120]","-2lne(sqt(Cv[10120])-1)-2sqt(Cv[10120])+Cv[11100]", 
"Cv[8747](2+sqt(Cv[10120]))/(3-sqt(Cv[10120]))Cv[8748]Cv[10120]","-10sqt(Cv[10120])-(30lne(sqt(Cv[10120])-3)+Cv[10120])+Cv[11100]", 
"Cv[8747]Cv[10120]sqt(Cv[10120]^2+Cv[10097]^2)Cv[8748]Cv[10120]","(Cv[10120]^2+Cv[10097]^2)^(3/2)/3+Cv[11100]",
"Cv[8747]Cv[10120](Cv[10120]+Cv[10121])^4Cv[8748]Cv[10120]","(Cv[10120](Cv[10121]+Cv[10120])^5)/5-(Cv[10121]+Cv[10120])^6/30+Cv[11100]",
"Cv[8747]sin(Cv[10121]Cv[10120])^3Cv[8748]Cv[10120]","cos(3Cv[10120]Cv[10121])/(12Cv[10121])-(3cos(Cv[10120]Cv[10121]))/(4Cv[10121])+Cv[11100]",
"Cv[8747]cos(Cv[10121]Cv[10120])^3Cv[8748]Cv[10120]","sin(3Cv[10120]Cv[10121])/(12Cv[10121])+(3sin(Cv[10120]Cv[10121]))/(4Cv[10121])+Cv[11100]",
"Cv[8747]tan(Cv[10121]Cv[10120])^3Cv[8748]Cv[10120]","sec(Cv[10120]Cv[10121])^2/(2Cv[10121])+lne(cos(Cv[10120]Cv[10121]))/Cv[10121]+Cv[11100]",
"Cv[8747](Cv[10120]^2+1)/(Cv[10120]^3+3Cv[10120])Cv[8748]Cv[10120]","lne(Cv[10120]^3+3Cv[10120])/3+Cv[11100]",
"Cv[8747]Cv[10121]Cv[8]^(Cv[10097]Cv[10120]^2)Cv[8748]Cv[10120]","-((Cv[46]sqt(Cv[29])erf(Cv[46]Cv[10097]Cv[10120])Cv[10121])/(2sqt(Cv[10097])))+Cv[11100]",
"Cv[8747]sqt(Cv[10120]/(Cv[10097]-Cv[10120]))Cv[8748]Cv[10120]","-Cv[10097]atn(sqt(Cv[10120])/sqt(Cv[10097]-Cv[10120]))-sqt(Cv[10120](Cv[10097]-Cv[10120]))+Cv[11100]",
"Cv[8747]sqt(Cv[10120]/(Cv[10120]+Cv[10097]))Cv[8748]Cv[10120]","sqt(Cv[10120](Cv[10120]+Cv[10097]))-Cv[10097]lne(sqt(Cv[10120](Cv[10120]+Cv[10097])))+Cv[11100]",
"Cv[8747]sqt(Cv[10120]/(Cv[10120]-Cv[10097]))Cv[8748]Cv[10120]","sqt(Cv[10120](Cv[10120]-Cv[10097]))+Cv[10097]lne(sqt(Cv[10120](Cv[10120]-Cv[10097])))+Cv[11100]",
"Cv[8747]1/sqt(Cv[10097]-Cv[10120]^2)Cv[8748]Cv[10120]","atn(Cv[10120]/sqt(Cv[10097]-Cv[10120]^2))+Cv[11100]",
"Cv[8747]sqt(Cv[10120]^2-Cv[10097])Cv[8748]Cv[10120]","(Cv[10120]sqt(Cv[10120]^2-Cv[10097])+Cv[10097]lne(sqt(Cv[10120]^2-Cv[10097])+Cv[10097]))/2+Cv[11100]",
"Cv[8747]sqt(Cv[10120]^2+Cv[10097])Cv[8748]Cv[10120]","(Cv[10120]sqt(Cv[10120]^2+Cv[10097])+Cv[10097]lne(sqt(Cv[10120]^2+Cv[10097])+Cv[10097]))/2+Cv[11100]",
"Cv[8747]efc(Cv[10120])","Cv[10120]efc(Cv[10120])-1/(Cv[8]^Cv[10120]^2sqt(Cv[29]))+Cv[11100]",
"Cv[8747]1/sqt(1-Cv[10120]^2)","asn(Cv[10120])+Cv[11100]",
"Cv[8747]1/sqt(1+Cv[10120]^2)","ash(Cv[10120])+Cv[11100]",
"Cv[8747]1/sqt(Cv[10120]^2-1)","ach(Cv[10120])+Cv[11100]",
"Cv[8747]1/Cv[10120]sqt(1+Cv[10120]^2)","-ayh(Cv[10120])+Cv[11100]",
"Cv[8747]1/Cv[10120]sqt(1-Cv[10120]^2)","-axh(Cv[10120])+Cv[11100]",
"Cv[8747]1/(1-sqt(Cv[10120]))","-2lne(sqt(Cv[10120])-1)-2sqt(Cv[10120])+Cv[11100]",
"Cv[8747]1/(Cv[10121]+sqt(Cv[10120]))Cv[8748]Cv[10120]","2sqt(Cv[10120])-2Cv[10121]lne(sqt(Cv[10120])+Cv[10121])+Cv[11100]",
"Cv[8747]1/(sqt(Cv[10120])-1)Cv[8748]Cv[10120]","2sqt(Cv[10120])+2lne(sqt(Cv[10120])-1)+Cv[11100]",
"Cv[8747]Cv[10120]^3","Cv[10120]^4/4+Cv[11100]",
"Cv[8747]Cv[10121]Cv[10120]^3","Cv[9998]",
"Cv[8747]2-sec(Cv[10121]/Cv[10120])Cv[8748]Cv[10120]","2Cv[10120]-Cv[8747]sec(Cv[10121]/Cv[10120])Cv[8748]Cv[10120]+Cv[11100]",
"Cv[8747]Cv[10097]/Cv[10120]^3+Cv[10098]/Cv[10120]^2-Cv[10099]/Cv[10120]Cv[8748]Cv[10120]","-(Cv[10098]/Cv[10120])-(Cv[10099]lne(Cv[10120])+(Cv[10097]/2Cv[10120]^2))+Cv[11100]",


//fn integration by test
"Cv[8747]sin(Cv[10120]Cv[10121])Cv[8748]Cv[10120]","-(cos(Cv[10120]Cv[10121])/Cv[10121])+Cv[11100]",
"Cv[8747]cos(Cv[10120]Cv[10121])Cv[8748]Cv[10120]","sin(Cv[10120]Cv[10121])/Cv[10121]+Cv[11100]",
"Cv[8747]tan(Cv[10120]Cv[10121])Cv[8748]Cv[10120]","-(lne(cos(Cv[10120]Cv[10121]))/Cv[10121])+Cv[11100]",
"Cv[8747]lne(Cv[10120]Cv[10121])Cv[8748]Cv[10120]","Cv[10120]lne(Cv[10121])+Cv[10120]lne(Cv[10120])-Cv[10120]+Cv[11100]",
"Cv[8747]lne(Cv[10120]3)^2Cv[8748]Cv[10120]","Cv[10120](lne(3Cv[10120])^2-2lne(3Cv[10120])+2)+Cv[11100]",
"Cv[8747]sin(Cv[10120]+Cv[10121])+sin(Cv[10120]-Cv[10121])Cv[8748]Cv[10120]","-cos(Cv[10121]+Cv[10120])-cos(Cv[10120]-Cv[10121])+Cv[11100]",
"Cv[8747]cos(Cv[10120]+Cv[10121])+cos(Cv[10120]-Cv[10121])Cv[8748]Cv[10120]","sin(Cv[10121]+Cv[10120])+sin(Cv[10120]-Cv[10121])+Cv[11100]",
"Cv[8747]tan(Cv[10120]+Cv[10121])+tan(Cv[10120]-Cv[10121])Cv[8748]Cv[10120]","-lne(cos(Cv[10121]+Cv[10120]))-lne(cos(Cv[10120]-Cv[10121]))+Cv[11100]",
"Cv[8747]sin(Cv[10120]Cv[10121])+sin(Cv[10120]/Cv[10121])Cv[8748]Cv[10120]","-(cos(Cv[10120]Cv[10121])/Cv[10121])-Cv[10121]cos(Cv[10120]/Cv[10121])+Cv[11100]",
"Cv[8747]cos(Cv[10120]Cv[10121])+cos(Cv[10120]/Cv[10121])Cv[8748]Cv[10120]","Cv[10121]sin(Cv[10120]/Cv[10121])+sin(Cv[10120]Cv[10121])/Cv[10121]+Cv[11100]",
"Cv[8747]tan(Cv[10120]Cv[10121])+tan(Cv[10120]/Cv[10121])Cv[8748]Cv[10120]","-(lne(cos(Cv[10120]Cv[10121]))/Cv[10121])-Cv[10121]lne(cos(Cv[10120]/Cv[10121]))+Cv[11100]",
"Cv[8747]cos(Cv[10097]Cv[10120])^3Cv[8748]Cv[10120]","sin(3Cv[10097]Cv[10120])/12Cv[10097]+3sin(Cv[10097]Cv[10120])/4Cv[10097]+Cv[11100]",
"Cv[8747]sin(Cv[10097]Cv[10120])^3Cv[8748]Cv[10120]","cos(3Cv[10097]Cv[10120])/12Cv[10097]-3cos(Cv[10097]Cv[10120])/4Cv[10097]+Cv[11100]",

//integration by derivative search
"Cv[8747]2Cv[10121]/Cv[8]^(Cv[10120]^2Cv[10121]^2)sqt(Cv[29])Cv[8748]Cv[10120]","erf(Cv[10120]Cv[10121])+Cv[11100]",
"Cv[8747]-2Cv[10121]/Cv[10120]^2Cv[8]^(Cv[10121]^2/Cv[10120]^2)sqt(Cv[29])Cv[8748]Cv[10120]","erf(Cv[10121]/Cv[10120])+Cv[11100]",
"Cv[8747]sec(Cv[10120]/Cv[10121])tan(Cv[10120]/Cv[10121])/Cv[10121]Cv[8748]Cv[10120]","sec(Cv[10120]/Cv[10121])+Cv[11100]",
"Cv[8747]1/sqt(1+(Cv[10120]/Cv[10121])^2)Cv[8748]Cv[10120]","Cv[10121]ash(Cv[10120]/Cv[10121])+Cv[11100]",
"Cv[8747]Cv[10097]/Cv[10120]sqt(1+Cv[10120]^2)Cv[8748]Cv[10120]","-Cv[10097]ayh(Cv[10120])+Cv[11100]",
"Cv[8747]1/Cv[10120]^2sqt(1-1/Cv[10120]^2)Cv[8748]Cv[10120]","asc(Cv[10120])+Cv[11100]",
"Cv[8747]sec(Cv[10120])tan(Cv[10120])Cv[8748]Cv[10120]","sec(Cv[10120])+Cv[11100]",
"Cv[8747]cot(Cv[10120])csc(Cv[10120])Cv[8748]Cv[10120]","-csc(Cv[10120])+Cv[11100]",
"Cv[8747]sch(Cv[10120])tnh(Cv[10120])Cv[8748]Cv[10120]","-sch(Cv[10120])+Cv[11100]",
"Cv[8747]cth(Cv[10120])cch(Cv[10120])Cv[8748]Cv[10120]","-cch(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10097]/Cv[10120]sqt(1+Cv[10120]^2)Cv[8748]Cv[10120]","-Cv[10097]ayh(Cv[10120])+Cv[11100]",
"Cv[8747]1/(1+Cv[10120]^2)Cv[8748]Cv[10120]","atn(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[8]^(Cv[10120]/3)sin(Cv[10120]/3)Cv[8748]Cv[10120]","3Cv[8]^(Cv[10120]/3)(sin(Cv[10120]/3)-cos(Cv[10120]/3))/2+Cv[11100]",
"Cv[8747]sin(Cv[10097]Cv[10120])Cv[8]^(Cv[10098]Cv[10120])Cv[8748]Cv[10120]","(Cv[8]^(Cv[10098]Cv[10120])(Cv[10098]sin(Cv[10097]Cv[10120])-Cv[10097]cos(Cv[10097]Cv[10120])))/(Cv[10098]^2+Cv[10097]^2)+Cv[11100]",
"Cv[8747]Cv[8]^(Cv[10120]+3)sin(Cv[10120]+3)Cv[8748]Cv[10120]","Cv[8]^(Cv[10120]+3)(sin(Cv[10120]+3)-cos(Cv[10120]+3))/2+Cv[11100]",

//u substitution
"Cv[8747]sqt(5+sqt(Cv[10120]))Cv[8748]Cv[10120]","(4(sqt(Cv[10120])+5)^(3/2)sqt(Cv[10120]))/3-(8(sqt(Cv[10120])+5)^(5/2))/15+Cv[11100]",
"Cv[8747]Cv[10120]sqt(2Cv[10120]+1)Cv[8748]Cv[10120]","Cv[10120](2Cv[10120]+1)^(3/2)/3-(2Cv[10120]+1)^(5/2)/15+Cv[11100]",
"Cv[8747]Cv[10120]sqt(4-Cv[10120])Cv[8748]Cv[10120]","-(2Cv[10120](4-Cv[10120])^(3/2)/3)-(4(4-Cv[10120])^(5/2))/15+Cv[11100]",
"Cv[8747]Cv[10120]sqt(Cv[10120]+Cv[10121])Cv[8748]Cv[10120]","2Cv[10120](Cv[10121]+Cv[10120])^(3/2)/3-4(Cv[10121]+Cv[10120])^(5/2)/15+Cv[11100]",
"Cv[8747]Cv[10120]sqt(Cv[10120]-Cv[10121])Cv[8748]Cv[10120]","2Cv[10120](Cv[10120]-Cv[10121])^(3/2)/3-4(Cv[10120]-Cv[10121])^(5/2)/15+Cv[11100]",
"Cv[8747]cbt(1+sqt(Cv[10120]-3))","(3(sqt(Cv[10120]-3)+1)^(4/3)sqt(Cv[10120]-3))/2-(9(sqt(Cv[10120]-3)+1)^(7/3))/14+Cv[11100]",

//integration by cMul substitution
"Cv[8747](2Cv[10120]+2)Cv[8]^(Cv[10120]^2+2Cv[10120]+3)Cv[8748]Cv[10120]","Cv[8]^(Cv[10120]^2+2Cv[10120]+3)+Cv[11100]",
"Cv[8747]18Cv[10120]^2nrt(4,6Cv[10120]^3+5)Cv[8748]Cv[10120]","(4(6Cv[10120]^3+5)^(5/4))/5+Cv[11100]",
"Cv[8747]Cv[10120]^3(Cv[10120]^4+2)^2((Cv[10120]^4+2)^3+1)^4Cv[8748]Cv[10120]","((Cv[10120]^4+2)^3+1)^5/60+Cv[11100]",
"Cv[8747]sin(lne(Cv[10097]Cv[10120]))/Cv[10121]Cv[10120]Cv[8748]Cv[10120]","-(cos(lne(Cv[10097]Cv[10120]))/Cv[10121])+Cv[11100]",
"Cv[8747]lne(atn(Cv[10120]))/(Cv[10120]^2+1)Cv[8748]Cv[10120]","atn(Cv[10120])lne(atn(Cv[10120]))-atn(Cv[10120])+Cv[11100]",
"Cv[8747]lne(Cv[10120])^2/Cv[10120]Cv[8748]Cv[10120]","lne(Cv[10120])^3/3+Cv[11100]",
"Cv[8747]1/Cv[10120]lne(Cv[10120])Cv[8748]Cv[10120]","lne(lne(Cv[10120]))+Cv[11100]",
"Cv[8747](Cv[8]^Cv[10120]-2Cv[10120])/(Cv[8]^Cv[10120]-Cv[10120]^2)Cv[8748]Cv[10120]","lne(Cv[8]^Cv[10120]-Cv[10120]^2)+Cv[11100]",
"Cv[8747]cos(Cv[10120]^2)Cv[10120]Cv[8748]Cv[10120]","sin(Cv[10120]^2)/2+Cv[11100]",
"Cv[8747]sin(Cv[10120]^2)Cv[10120]Cv[8748]Cv[10120]","-(cos(Cv[10120]^2)/2)+Cv[11100]",
"Cv[8747]sin(Cv[10120]^2)Cv[10121]Cv[10120]Cv[8748]Cv[10120]","-(Cv[10121]cos(Cv[10120]^2)/2)+Cv[11100]",
"Cv[8747]cos(Cv[10120]^3)Cv[10120]^2Cv[8748]Cv[10120]","sin(Cv[10120]^3)/3+Cv[11100]",
"Cv[8747]cos(Cv[10110]Cv[10120]^3)Cv[10120]^2Cv[8748]Cv[10120]","sin(Cv[10110]Cv[10120]^3)/3Cv[10110]+Cv[11100]",
"Cv[8747]sin(Cv[10120]^2)Cv[10110]Cv[10120]Cv[8748]Cv[10120]","-(Cv[10110]cos(Cv[10120]^2)/2)+Cv[11100]",
"Cv[8747]sin(lne(Cv[10120]))/Cv[10120]Cv[8748]Cv[10120]","-cos(lne(Cv[10120]))+Cv[11100]",
"Cv[8747]Cv[10120]3^Cv[10120]^2Cv[8748]Cv[10120]","3^Cv[10120]^2/(2lne(3))+Cv[11100]",
"Cv[8747]3/(Cv[10120]lne(Cv[10120]))","3lne(lne(Cv[10120]))+Cv[11100]",
"Cv[8747]18Cv[10120]^2nrt(4,6Cv[10120]^3+5)Cv[8748]Cv[10120]","(4(6Cv[10120]^3+5)^(5/4))/5+Cv[11100]",
"Cv[8747]sin(3Cv[10120])cos(2Cv[10120])","-((2sin(2Cv[10120])sin(3Cv[10120])+3cos(2Cv[10120])cos(3Cv[10120]))/5)+Cv[11100]",
"Cv[8747]sin(3Cv[10120])cos(3Cv[10120])","-(cos(3Cv[10120])^2/6)+Cv[11100]",

//integration by parts
"Cv[8747]Cv[10120]^2/sec(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]^2sin(Cv[10120])+2Cv[10120]cos(Cv[10120])-2sin(Cv[10120])+Cv[11100]",
"Cv[8747](2Cv[10120]+1)/(Cv[10120]^2+1)Cv[8748]Cv[10120]","lne(Cv[10120]^2+1)+atn(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10120]atn(Cv[10120])Cv[8748]Cv[10120]","Cv[10120](Cv[10120]atn(Cv[10120])-lne(Cv[10120]^2+1)/2)+Cv[11100]",
"Cv[8747]Cv[10120]Cv[8]^Cv[10120]Cv[8748]Cv[10120]","Cv[10120]Cv[8]^Cv[10120]-Cv[8]^Cv[10120]+Cv[11100]",
"Cv[8747]Cv[10120]^2cos(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]^2sin(Cv[10120])+2Cv[10120]cos(Cv[10120])-2sin(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10120]^3sin(Cv[10120])Cv[8748]Cv[10120]","3Cv[10120]^2sin(Cv[10120])+6Cv[10120]cos(Cv[10120])-6sin(Cv[10120])-Cv[10120]^3cos(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10120]^2sin(Cv[10121]Cv[10120])Cv[8748]Cv[10120]","2cos(Cv[10120]Cv[10121])/Cv[10121]^3+2Cv[10120]sin(Cv[10120]Cv[10121])/Cv[10121]^2-Cv[10120]^2cos(Cv[10120]Cv[10121])/Cv[10121]+Cv[11100]",
"Cv[8747]Cv[10120](Cv[10120]+Cv[10097])^Cv[10110]Cv[8748]Cv[10120]","Cv[10120](Cv[10120]+Cv[10097])^(Cv[10110]+1)/(Cv[10110]+1)-(Cv[10120]+Cv[10097])^(Cv[10110]+2)/(Cv[10110]+1)(Cv[10110]+2)+Cv[11100]",
"Cv[8747]Cv[10120]^2Cv[8]^(3Cv[10120])","2Cv[8]^(3Cv[10120])/27+Cv[10120]^2Cv[8]^(3Cv[10120])/3-2Cv[10120]Cv[8]^(3Cv[10120])/9+Cv[11100]",
"Cv[8747](lne(Cv[10120])/Cv[10120])^2","(-2-2lne(Cv[10120])-lne(Cv[10120])^2)/Cv[10120]+Cv[11100]",
"Cv[8747]Cv[10120](Cv[10120]-1)^(1/6)","(6Cv[10120](Cv[10120]-1)^(7/6))/7-(36(Cv[10120]-1)^(13/6))/91+Cv[11100]",
"Cv[8747]lne(Cv[10120])/Cv[10120]^5Cv[8748]Cv[10120]","-(lne(Cv[10120])/4Cv[10120]^4)-1/16Cv[10120]^4+Cv[11100]",
"Cv[8747]Cv[10120]^3cos(Cv[10120]^2)","(cos(Cv[10120]^2)+Cv[10120]^2sin(Cv[10120]^2))/2+Cv[11100]",
"Cv[8747]Cv[10120]^7sqt(5+3Cv[10120]^4)","((3Cv[10120]^4+5)^(3/2)Cv[10120]^4)/18-(3Cv[10120]^4+5)^(5/2)/135+Cv[11100]",
"Cv[8747]Cv[10120]^2Cv[8]^Cv[10120]","2Cv[8]^Cv[10120]+Cv[10120]^2Cv[8]^Cv[10120]-2Cv[10120]Cv[8]^Cv[10120]+Cv[11100]",
"Cv[8747]Cv[10120]^5Cv[8]^Cv[10120]^3","(Cv[10120]^3Cv[8]^Cv[10120]^3-Cv[8]^Cv[10120]^3)/3+Cv[11100]",
"Cv[8747]Cv[10120]^3lne(5Cv[10120])","(Cv[10120]^4lne(Cv[10120])+Cv[10120]^4lne(5))/4-Cv[10120]^4/16+Cv[11100]",
"Cv[8747]Cv[8]^(6Cv[10120])sin(Cv[8]^(3Cv[10120]))","(sin(Cv[8]^(3Cv[10120]))-Cv[8]^(3Cv[10120])cos(Cv[8]^(3Cv[10120])))/3+Cv[11100]",

//definite integrals
"itg(1,0)Cv[10120]^2Cv[8748]Cv[10120]","1/3",
"itg(2,1)Cv[10120]^5Cv[8748]Cv[10120]","21/2",
"itg(Cv[10097],Cv[10098])Cv[10120]^2Cv[8748]Cv[10120]","(Cv[10097]^3-Cv[10098]^3)/3",
"itg(2,0)Cv[10120]^(2Cv[29])Cv[8748]Cv[10120]","2^(2Cv[29]+1)/(2Cv[29]+1)",
"itg(1,0)Cv[10120]^(2Cv[29])Cv[8748]Cv[10120]","1/(2Cv[29]+1)",
"itg(Cv[8],1)Cv[10120]lne(Cv[10120])Cv[8748]Cv[10120]","(Cv[8]^2+1)/4",
"Cv[10121]itg(1,0)Cv[10120]^2Cv[8748]Cv[10120]","Cv[10121]/3",
"itg(Cv[10097],Cv[10098])Cv[10120]^2Cv[8748]Cv[10120]+Cv[8747]Cv[10120]^3Cv[8748]Cv[10120]+idr(Cv[10120])Cv[10120]^2","Cv[10120]^4/4+Cv[10097]^3/3+2Cv[10120]-Cv[10098]^3/3+Cv[11100]",
"itg(sqt(Cv[29]),0)Cv[10120]sin(Cv[10120]^2)","1",
"itg(lne(2)/7,0)14Cv[8]^(7Cv[10120])","2",
"itg(1,0)itg(1,0)Cv[10120]^2/(1+Cv[10121]^2)Cv[8748]Cv[10121]Cv[8748]Cv[10120]","Cv[29]/12",

//integrals with derivatives
"idr(Cv[10120])Cv[8747]sin(Cv[10120])^2Cv[8748]Cv[10120]","sin(Cv[10120])^2",
"idr(Cv[10120])Cv[8747]cos(Cv[10120])^2Cv[8748]Cv[10120]","cos(Cv[10120])^2",
"idr(Cv[10120])Cv[8747]sec(Cv[10120])^2Cv[8748]Cv[10120]","sec(Cv[10120])^2",
"idr(Cv[10120])Cv[8747]csc(Cv[10120])^2Cv[8748]Cv[10120]","csc(Cv[10120])^2",
"idr(Cv[10120])Cv[8747]snh(Cv[10120])^2Cv[8748]Cv[10120]","snh(Cv[10120])^2",
"idr(Cv[10120])Cv[8747]tnh(Cv[10120])^2Cv[8748]Cv[10120]","tnh(Cv[10120])^2",
"idr(Cv[10120])Cv[8747]lne(atn(Cv[10120]))/(Cv[10120]^2+1)Cv[8748]Cv[10120]","lne(atn(Cv[10120]))/(Cv[10120]^2+1)",
"idr(Cv[10120])Cv[8747]cos(Cv[10120])/(1+sin(Cv[10120]))Cv[8748]Cv[10120]","cos(Cv[10120])/(sin(Cv[10120])+1)",
"idr(Cv[10120])Cv[8747]Cv[10120]tan(Cv[10120]^2)Cv[8748]Cv[10120]","Cv[10120]tan(Cv[10120]^2)",
"idr(Cv[10120])Cv[8747]1/tnh(Cv[10097]+Cv[10120])^2Cv[8748]Cv[10120]","cth(Cv[10120]+Cv[10097])^2",
"idr(Cv[10120])Cv[8747]Cv[10120]/sqt(2Cv[10120]+1)Cv[8748]Cv[10120]","Cv[10120]/sqt(2Cv[10120]+1)",
"idr(Cv[10120])Cv[8747]tan(Cv[10120])^2Cv[8748]Cv[10120]","tan(Cv[10120])^2",
"idr(Cv[10120])Cv[8747]cot(Cv[10120])^2Cv[8748]Cv[10120]","cot(Cv[10120])^2",
"Cv[8747]lne(Cv[10120])Cv[8748]Cv[10120]+idr(Cv[10121])Cv[10121]^2","Cv[10120]lne(Cv[10120])+2Cv[10121]-Cv[10120]+Cv[11100]",
"Cv[8747]lne(Cv[10120])Cv[8748]Cv[10120]-idr(Cv[10121])Cv[10121]^2","Cv[10120]lne(Cv[10120])-2Cv[10121]-Cv[10120]+Cv[11100]",
];

var real_calculus =
[
"idr(Cv[10120])asc(Cv[10120])","1/abs(Cv[10120])sqt(Cv[10120]^2-1)",
"idr(Cv[10120])acc(Cv[10120])","-(1/abs(Cv[10120])sqt(Cv[10120]^2-1))",
"Cv[8747]2Cv[10121]/Cv[10122]Cv[10120]Cv[8748]Cv[10120]","2Cv[10121]lne(abs(Cv[10120]))/Cv[10122]+Cv[11100]",
"Cv[8747]2Cv[10121]/Cv[10120]Cv[8748]Cv[10120]","2Cv[10121]lne(abs(Cv[10120]))+Cv[11100]",
"Cv[8747]lne(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]lne(Cv[10120])-Cv[10120]+Cv[11100]",
"Cv[8747]1/(1+Cv[10120]^2)Cv[8748]Cv[10120]","atn(Cv[10120])+Cv[11100]",
"Cv[8747]1/(Cv[10121]+Cv[10120]^2)Cv[8748]Cv[10120]","atn(Cv[10120]/sqt(Cv[10121]))/sqt(Cv[10121])+Cv[11100]",
"Cv[8747]1/(Cv[10110]+Cv[10120]^2)Cv[8748]Cv[10120]","atn(Cv[10120]/sqt(Cv[10110]))/sqt(Cv[10110])+Cv[11100]",

"Cv[8747]tan(Cv[10120])Cv[8748]Cv[10120]","-lne(abs(cos(Cv[10120])))+Cv[11100]",
"Cv[8747]sec(Cv[10120])Cv[8748]Cv[10120]","lne(abs(tan(Cv[10120])+sec(Cv[10120])))+Cv[11100]", 
"Cv[8747]Cv[10121]sec(Cv[10120])^2Cv[8748]Cv[10120]","Cv[10121]tan(Cv[10120])+Cv[11100]",
"Cv[8747]csc(Cv[10120])Cv[8748]Cv[10120]","lne(abs(sin(Cv[10120]/2)))-lne(abs(cos(Cv[10120]/2)))+Cv[11100]",
"Cv[8747]Cv[10121]csc(Cv[10120])^2Cv[8748]Cv[10120]","-Cv[10121]cot(Cv[10120])+Cv[11100]",
"Cv[8747]cot(Cv[10120])Cv[8748]Cv[10120]","lne(abs(sin(Cv[10120])))+Cv[11100]",
"Cv[8747]asn(Cv[10120])Cv[8748]Cv[10120]","sqt(1-Cv[10120]^2)+Cv[10120]asn(Cv[10120])+Cv[11100]",
"Cv[8747]acs(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]acs(Cv[10120])-sqt(1-Cv[10120]^2)+Cv[11100]",
"Cv[8747]atn(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]atn(Cv[10120])-lne(Cv[10120]^2+1)/2+Cv[11100]",
"Cv[8747]asc(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]asc(Cv[10120])-atn(sqt(1-1/Cv[10120]^2))+Cv[11100]",
"Cv[8747]acc(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]acs(Cv[10120])-sqt(1-Cv[10120]^2)+Cv[11100]",
"Cv[8747]act(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]atn(Cv[10120])+lne(Cv[10120]^2+1)/2+Cv[11100]",
"Cv[8747]snh(Cv[10120])Cv[8748]Cv[10120]","csh(Cv[10120])+Cv[11100]",
"Cv[8747]csh(Cv[10120])Cv[8748]Cv[10120]","snh(Cv[10120])+Cv[11100]",
"Cv[8747]tnh(Cv[10120])Cv[8748]Cv[10120]","lne(csh(Cv[10120]))+Cv[11100]",
"Cv[8747]sch(Cv[10120])Cv[8748]Cv[10120]","2atn(snh(Cv[10120]/2))+Cv[11100]",
"Cv[8747]cch(Cv[10120])Cv[8748]Cv[10120]","lne(abs(tnh(Cv[10120]/2)))+Cv[11100]",
"Cv[8747]cth(Cv[10120])Cv[8748]Cv[10120]","lne(abs(snh(Cv[10120])))+Cv[11100]",
"Cv[8747]ath(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]ath(Cv[10120])+lne(Cv[10120]^2-1)/2+Cv[11100]",
"Cv[8747]lne(Cv[10120]Cv[10121])Cv[8748]Cv[10120]","Cv[10120]lne(Cv[10121])+Cv[10120]lne(Cv[10120])-Cv[10120]+Cv[11100]",
"Cv[8747]lne(Cv[10120]3)^2Cv[8748]Cv[10120]","Cv[10120](lne(3Cv[10120])^2-2lne(3Cv[10120])+2)+Cv[11100]",
"Cv[8747](Cv[10120]+Cv[10121])^Cv[10122]Cv[8748]Cv[10120]","(Cv[10121]+Cv[10120])^(Cv[10122]+1)/(Cv[10122]+1)+Cv[11100]",
"Cv[8747]Cv[10120]/3Cv[10121]Cv[8748]Cv[10120]","Cv[10120]^2/6Cv[10121]+Cv[11100]",
"Cv[8747]Cv[10120]^2cos(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]^2sin(Cv[10120])+2Cv[10120]cos(Cv[10120])-2sin(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10120]^3sin(Cv[10120])Cv[8748]Cv[10120]","3Cv[10120]^2sin(Cv[10120])+6Cv[10120]cos(Cv[10120])-6sin(Cv[10120])-Cv[10120]^3cos(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10120]lne(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]^2lne(Cv[10120])/2-Cv[10120]^2/4+Cv[11100]",
"Cv[8747]Cv[10121]/Cv[10120]^3Cv[8748]Cv[10120]","-(Cv[10121]/2Cv[10120]^2+Cv[11100])",
"Cv[8747](Cv[10121]+1)/Cv[10120]Cv[8748]Cv[10120]","(Cv[10121]+1)lne(abs(Cv[10120]))+Cv[11100]",
"Cv[8747]Cv[10120]/(Cv[10121]+1)Cv[8748]Cv[10120]","Cv[10120]^2/(2Cv[10121]+2)+Cv[11100]",
"Cv[8747]sin(Cv[10120]^2)Cv[10110]Cv[10120]Cv[8748]Cv[10120]","-(Cv[10110]cos(Cv[10120]^2)/2)+Cv[11100]",
"Cv[8747]Cv[10120]lne(Cv[10120]^2)Cv[8748]Cv[10120]","Cv[10120]^2lne(Cv[10120])-Cv[10120]^2/2+Cv[11100]",
"Cv[8747](Cv[10120]+1)^3Cv[8748]Cv[10120]","(Cv[10120]+1)^4/4+Cv[11100]",
"Cv[8747]Cv[10120]^2sin(Cv[10121]Cv[10120])Cv[8748]Cv[10120]","2cos(Cv[10120]Cv[10121])/Cv[10121]^3+2Cv[10120]sin(Cv[10120]Cv[10121])/Cv[10121]^2-Cv[10120]^2cos(Cv[10120]Cv[10121])/Cv[10121]+Cv[11100]",
"Cv[8747]Cv[10120]/(Cv[10120]^2+1)Cv[8748]Cv[10120]","lne(abs(Cv[10120]^2+1))/2+Cv[11100]",
"Cv[8747]Cv[10121]/sqt(Cv[10120])Cv[8748]Cv[10120]","2Cv[10121]sqt(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10121]/sin(Cv[10120])Cv[8748]Cv[10120]","Cv[10121](lne(abs(sin(Cv[10120]/2)))-lne(abs(cos(Cv[10120]/2))))+Cv[11100]",
"Cv[8747]Cv[10121]/cos(Cv[10120])Cv[8748]Cv[10120]","Cv[10121]lne(abs(tan(Cv[10120])+sec(Cv[10120])))+Cv[11100]",
"Cv[8747]Cv[10121]/tan(Cv[10120])Cv[8748]Cv[10120]","Cv[10121]lne(abs(sin(Cv[10120])))+Cv[11100]",
"Cv[8747]sin(Cv[10120]+Cv[10121])+sin(Cv[10120]-Cv[10121])Cv[8748]Cv[10120]","-cos(Cv[10121]+Cv[10120])-cos(Cv[10120]-Cv[10121])+Cv[11100]",
"Cv[8747]cos(Cv[10120]+Cv[10121])+cos(Cv[10120]-Cv[10121])Cv[8748]Cv[10120]","sin(Cv[10121]+Cv[10120])+sin(Cv[10120]-Cv[10121])+Cv[11100]",
"Cv[8747]sin(Cv[10120]Cv[10121])+sin(Cv[10120]/Cv[10121])Cv[8748]Cv[10120]","-(cos(Cv[10120]Cv[10121])/Cv[10121])-Cv[10121]cos(Cv[10120]/Cv[10121])+Cv[11100]",
"Cv[8747]cos(Cv[10120]Cv[10121])+cos(Cv[10120]/Cv[10121])Cv[8748]Cv[10120]","Cv[10121]sin(Cv[10120]/Cv[10121])+sin(Cv[10120]Cv[10121])/Cv[10121]+Cv[11100]",
"Cv[8747]Cv[10120]sqt(Cv[10120]+Cv[10121])Cv[8748]Cv[10120]","2Cv[10120](Cv[10121]+Cv[10120])^(3/2)/3-4(Cv[10121]+Cv[10120])^(5/2)/15+Cv[11100]",
"Cv[8747]Cv[10120]sqt(Cv[10120]-Cv[10121])Cv[8748]Cv[10120]","2Cv[10120](Cv[10120]-Cv[10121])^(3/2)/3-4(Cv[10120]-Cv[10121])^(5/2)/15+Cv[11100]",
"Cv[8747]Cv[10120]sqt(Cv[10120]Cv[10121])Cv[8748]Cv[10120]","2Cv[10120]^(5/2)sqt(Cv[10121])/5+Cv[11100]",
"Cv[8747]1/sqt(Cv[10120]+Cv[10121])Cv[8748]Cv[10120]","2sqt(Cv[10121]+Cv[10120])+Cv[11100]",
"Cv[8747]1/sqt(Cv[10120]-Cv[10121])Cv[8748]Cv[10120]","2sqt(Cv[10120]-Cv[10121])+Cv[11100]",
"Cv[8747]Cv[10120]/sqt(Cv[10120]Cv[10121])Cv[8748]Cv[10120]","2Cv[10120]^(3/2)/3sqt(Cv[10121])+Cv[11100]",
"Cv[8747]Cv[8]^(2Cv[10120]/3)Cv[8748]Cv[10120]","3Cv[8]^(2Cv[10120]/3)/2+Cv[11100]",
"Cv[8747]Cv[10121]/3(Cv[10120]Cv[10121])^(2/3)Cv[8748]Cv[10120]","cbt(Cv[10120]Cv[10121])+Cv[11100]",
"Cv[8747](2Cv[10120]+1)/(Cv[10120]^2+1)Cv[8748]Cv[10120]","lne(Cv[10120]^2+1)+atn(Cv[10120])+Cv[11100]",
"Cv[8747](Cv[8]^Cv[10120]-2Cv[10120])/(Cv[8]^Cv[10120]-Cv[10120]^2)Cv[8748]Cv[10120]","lne(abs(Cv[8]^Cv[10120]-Cv[10120]^2))+Cv[11100]",
"Cv[8747]cos(Cv[10120])sin(Cv[10120])Cv[8748]Cv[10120]","-(cos(Cv[10120])^2/2)+Cv[11100]",
"Cv[8747]Cv[10116]/(Cv[10120]+Cv[10121])^2Cv[8748]Cv[10120]","-(Cv[10116]/(Cv[10121]+Cv[10120]))+Cv[11100]",
"Cv[8747]Cv[10120]sqt(2Cv[10120]+1)Cv[8748]Cv[10120]","Cv[10120](2Cv[10120]+1)^(3/2)/3-(2Cv[10120]+1)^(5/2)/15+Cv[11100]",
"Cv[8747]Cv[10116]^Cv[10122]/(Cv[10097]Cv[10120]+Cv[10098])Cv[8748]Cv[10120]","Cv[10116]^Cv[10122]lne(abs(Cv[10097]Cv[10120]+Cv[10098]))/Cv[10097]+Cv[11100]",
"Cv[8747](2Cv[10120])^(Cv[10121]+1)Cv[8748]Cv[10120]","(2Cv[10120])^(Cv[10121]+2)/(2Cv[10121]+4)+Cv[11100]",
"Cv[8747]lne(Cv[10120]^Cv[10121])-Cv[10120]Cv[8748]Cv[10120]","Cv[10121](Cv[10120]lne(Cv[10120])-Cv[10120])-Cv[10120]^2/2+Cv[11100]",
"Cv[8747]1/(2Cv[10120]+3)^2Cv[8748]Cv[10120]","-(1/(4Cv[10120]+6))+Cv[11100]",
"Cv[8747]Cv[10120]^3(Cv[10120]^4+2)^2((Cv[10120]^4+2)^3+1)^4Cv[8748]Cv[10120]","((Cv[10120]^4+2)^3+1)^5/60+Cv[11100]",
"Cv[8747]sin(lne(Cv[10097]Cv[10120]))/Cv[10121]Cv[10120]Cv[8748]Cv[10120]","-(cos(lne(Cv[10097]Cv[10120]))/Cv[10121])+Cv[11100]",
"Cv[8747]lne(atn(Cv[10120]))/(Cv[10120]^2+1)Cv[8748]Cv[10120]","atn(Cv[10120])lne(atn(Cv[10120]))-atn(Cv[10120])+Cv[11100]",
"Cv[8747]lne(Cv[10120])^2/Cv[10120]Cv[8748]Cv[10120]","lne(Cv[10120])^3/3+Cv[11100]",
"Cv[8747]Cv[10120]atn(Cv[10120])Cv[8748]Cv[10120]","Cv[10120](Cv[10120]atn(Cv[10120])-lne(Cv[10120]^2+1)/2)+Cv[11100]",
"Cv[8747]1/Cv[10120]lne(Cv[10120])Cv[8748]Cv[10120]","lne(abs(lne(Cv[10120])))+Cv[11100]",
"Cv[8747]lne(Cv[10120]^2+1)Cv[8748]Cv[10120]","Cv[10120](lne(Cv[10120]^2+1)-2)+2atn(Cv[10120])+Cv[11100]",
"Cv[8747]Cv[10120](Cv[10120]+Cv[10121])^Cv[10122]Cv[8748]Cv[10120]","Cv[10120](Cv[10121]+Cv[10120])^(Cv[10122]+1)/(Cv[10122]+1)-(Cv[10121]+Cv[10120])^(Cv[10122]+2)/(Cv[10122]+1)(Cv[10122]+2)+Cv[11100]",
"Cv[8747]Cv[10121]/(Cv[10120]+1)Cv[8748]Cv[10120]","Cv[10121]lne(abs(Cv[10120]+1))+Cv[11100]",
"Cv[8747]exp(Cv[10120])Cv[8748]Cv[10120]","exp(Cv[10120])+Cv[11100]",
"Cv[8747]abs(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]abs(Cv[10120])/2+Cv[11100]",
"Cv[8747]erf(Cv[10120])Cv[8748]Cv[10120]","1/Cv[8]^Cv[10120]^2sqt(Cv[29])+Cv[10120]erf(Cv[10120])+Cv[11100]",
"Cv[8747]lgn(3,Cv[10120])Cv[8748]Cv[10120]","(Cv[10120]lne(Cv[10120])-Cv[10120])/lne(3)+Cv[11100]",
"Cv[8747]azh(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]azh(Cv[10120])+lne(1-Cv[10120]^2)/2+Cv[11100]", //acoth()
"Cv[8747]azh(2Cv[10120])Cv[8748]Cv[10120]","Cv[10120]azh(2Cv[10120])+lne(1-4Cv[10120]^2)/4+Cv[11100]",
"Cv[8747]ayh(Cv[10120])Cv[8748]Cv[10120]","Cv[10120](ash(Cv[10120])sqt(1/Cv[10120]^2+1)/sqt(Cv[10120]^2+1)+ayh(Cv[10120]))+Cv[11100]", //acsch()
"Cv[8747]snh(lne(Cv[10120]))Cv[8748]Cv[10120]","Cv[10120]^2/4-lne(Cv[10120])/2+Cv[11100]",
"Cv[8747]csh(lne(Cv[10120]))Cv[8748]Cv[10120]","Cv[10120]^2/4+lne(Cv[10120])/2+Cv[11100]",
"Cv[8747]tnh(lne(Cv[10120]))Cv[8748]Cv[10120]","Cv[10120]-2atn(Cv[10120])+Cv[11100]",
"Cv[8747]lne(Cv[10121]/Cv[10120])Cv[8748]Cv[10120]","Cv[10120]lne(Cv[10121])+Cv[10120]-Cv[10120]lne(Cv[10120])+Cv[11100]",
"Cv[8747]sin(2Cv[10120])sin(3Cv[10120])Cv[8748]Cv[10120]","(2cos(2Cv[10120])sin(3Cv[10120])-3cos(3Cv[10120])sin(2Cv[10120]))/5+Cv[11100]",
"Cv[8747]cos(2Cv[10120])cos(3Cv[10120])Cv[8748]Cv[10120]","(3cos(2Cv[10120])sin(3Cv[10120])-2cos(3Cv[10120])sin(2Cv[10120]))/5+Cv[11100]",
"Cv[8747]csh(Cv[10120])^2Cv[8748]Cv[10120]","snh(2Cv[10120])/4+Cv[10120]/2+Cv[11100]",
"Cv[8747]lne(Cv[10120])^2Cv[8748]Cv[10120]","Cv[10120](lne(Cv[10120])^2-2lne(Cv[10120])+2)+Cv[11100]",
"Cv[8747]lne(Cv[10120])^3Cv[8748]Cv[10120]","Cv[10120](lne(Cv[10120])^3+6lne(Cv[10120])-3lne(Cv[10120])^2-6)+Cv[11100]",
"Cv[8747]sqt(Cv[10121]+Cv[10120]^2)Cv[8748]Cv[10120]","(Cv[10121]lne(abs(sqt(Cv[10120]^2+Cv[10121])+Cv[10121]))+Cv[10120]sqt(Cv[10120]^2+Cv[10121]))/2+Cv[11100]",
"Cv[8747]csc(Cv[10120]+2)Cv[8748]Cv[10120]","Cv[8747]csc(Cv[10120]+2)Cv[8748]Cv[10120]+Cv[11100]",
"Cv[8747]cot(Cv[10120]/2)Cv[8748]Cv[10120]","2lne(abs(sin(Cv[10120]/2)))+Cv[11100]",
"Cv[8747]snh(2Cv[10120])Cv[8748]Cv[10120]","csh(2Cv[10120])/2+Cv[11100]",
"Cv[8747]csh(2Cv[10120])Cv[8748]Cv[10120]","snh(2Cv[10120])/2+Cv[11100]",
"Cv[8747]tnh(2Cv[10120])Cv[8748]Cv[10120]","lne(csh(2Cv[10120]))/2+Cv[11100]",
"Cv[8747]sch(Cv[10120]+2)Cv[8748]Cv[10120]","Cv[8747]sch(Cv[10120]+2)Cv[8748]Cv[10120]+Cv[11100]",
"Cv[8747]cch(2Cv[10120])Cv[8748]Cv[10120]","Cv[8747]cch(2Cv[10120])Cv[8748]Cv[10120]+Cv[11100]",
"Cv[8747]cth(2Cv[10120])Cv[8748]Cv[10120]","-(lne(abs(2-2cth(2Cv[10120])^2))/4)+Cv[11100]",
"Cv[8747]asn(2Cv[10120])Cv[8748]Cv[10120]","Cv[10120]asn(2Cv[10120])+sqt(1-4Cv[10120]^2)/2+Cv[11100]",
"Cv[8747]acs(2Cv[10120])Cv[8748]Cv[10120]","Cv[10120]acs(2Cv[10120])-sqt(1-4Cv[10120]^2)/2+Cv[11100]",
"Cv[8747]atn(2Cv[10120])Cv[8748]Cv[10120]","Cv[10120]atn(2Cv[10120])-lne(4Cv[10120]^2+1)/4+Cv[11100]",
"Cv[8747]act(2Cv[10120])Cv[8748]Cv[10120]","Cv[10120]act(2Cv[10120])-lne(abs(sin(act(2Cv[10120]))))/2+Cv[11100]",
"Cv[8747]asc(2Cv[10120])Cv[8748]Cv[10120]","Cv[8747]asc(2Cv[10120])Cv[8748]Cv[10120]+Cv[11100]",
"Cv[8747]acc(2Cv[10120])Cv[8748]Cv[10120]","Cv[8747]acc(2Cv[10120])Cv[8748]Cv[10120]+Cv[11100]",
"Cv[8747]ash(2Cv[10120])Cv[8748]Cv[10120]","Cv[10120]ash(2Cv[10120])-sqt(4Cv[10120]^2+1)/2+Cv[11100]",
"Cv[8747]ach(2Cv[10120])Cv[8748]Cv[10120]","Cv[10120]ach(2Cv[10120])-sqt(4Cv[10120]^2-1)/2+Cv[11100]",
"Cv[8747]ath(2Cv[10120])Cv[8748]Cv[10120]","Cv[10120]ath(2Cv[10120])+lne(4Cv[10120]^2-1)/4+Cv[11100]",
"Cv[8747]1/csh(Cv[10120])Cv[8748]Cv[10120]","2atn(snh(Cv[10120]/2))+Cv[11100]",
"Cv[8747]1/snh(Cv[10120])Cv[8748]Cv[10120]","lne(abs(tnh(Cv[10120]/2)))+Cv[11100]",

"Cv[8747](sum(Cv[8734],Cv[10120]Cv[61]Cv[10120])(Cv[10097]/2^Cv[10120]))Cv[8748]Cv[10097]","Cv[10097]^2/2^Cv[10120]+Cv[11100]",
"Cv[8747](prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10110])Cv[8748]Cv[10110]","Cv[10110]^(Cv[10097]-Cv[10098]+2)/(Cv[10097]-Cv[10098]+2)+Cv[11100]",
"Cv[8747](lim(Cv[10120],0)(1+Cv[10120])^(Cv[10110]/Cv[10120]))Cv[8748]Cv[10110]","Cv[8]^Cv[10110]+Cv[11100]",

"itg(1,0)Cv[10120]^Cv[10120]","itg(1,0)Cv[10120]^Cv[10120]Cv[8748]Cv[10120]",
"Cv[8747]erf(Cv[10120]/2)Cv[8748]Cv[10120]","2/(Cv[8]^(Cv[10120]^2/4)sqt(Cv[29]))+Cv[10120]erf(Cv[10120]/2)+Cv[11100]",
"Cv[8747]efc(Cv[10120]/2)Cv[8748]Cv[10120]","Cv[10120]efc(Cv[10120]/2)-2/(Cv[8]^(Cv[10120]^2/4)sqt(Cv[29]))+Cv[11100]",
"Cv[8747]1/(1-Cv[10120]^2)Cv[8748]Cv[10120]","ath(Cv[10120])+Cv[11100]",
"Cv[8747]1/(1+Cv[10120]^2)Cv[8748]Cv[10120]","atn(Cv[10120])+Cv[11100]",
"Cv[8747]1/Cv[8]^Cv[10120]^2Cv[8748]Cv[10120]","erf(Cv[10120])sqt(Cv[29])/2+Cv[11100]",
"Cv[8747]1/(1-Cv[10120]^2)Cv[8748]Cv[10120]","ath(Cv[10120])+Cv[11100]",
"Cv[8747]1/(Cv[10120]^2-1)Cv[8748]Cv[10120]","-ath(Cv[10120])+Cv[11100]",
"Cv[8747]1/(1+Cv[10120]^2)Cv[8748]Cv[10120]","atn(Cv[10120])+Cv[11100]",
"Cv[8747]1/Cv[8]^Cv[10120]^2Cv[8748]Cv[10120]","erf(Cv[10120])sqt(Cv[29])/2+Cv[11100]",
"Cv[8747]sqt(Cv[10120])/sqt(1+Cv[10120])Cv[8748]Cv[10120]","sqt(Cv[10120](Cv[10120]+1))-lne(abs(sqt(Cv[10120](Cv[10120]+1))))+Cv[11100]",
"Cv[8747]1/cos(Cv[10120])sin(Cv[10120])Cv[8748]Cv[10120]","lne(abs(tan(Cv[10120])))+Cv[11100]",
"Cv[8747]sqt(Cv[10120])/sqt(Cv[10121]+Cv[10120])Cv[8748]Cv[10120]","sqt(Cv[10120](Cv[10121]+Cv[10120]))-Cv[10121]lne(abs(sqt(Cv[10120](Cv[10121]+Cv[10120]))))+Cv[11100]",

//"Cv[8747]lne(sqt(2Cv[10120]))Cv[8748]Cv[10120]","(Cv[10120]lne(Cv[10120])+Cv[10120]lne(2)-Cv[10120])/2+Cv[11100]",
//"Cv[8747]axh(2Cv[10120])Cv[8748]Cv[10120]","Cv[8747]axh(2Cv[10120])Cv[8748]Cv[10120]+Cv[11100]", //slow
//"Cv[8747]ayh(2Cv[10120])Cv[8748]Cv[10120]","Cv[8747]ayh(2Cv[10120])Cv[8748]Cv[10120]+Cv[11100]", //slow
//"Cv[8747]axh(Cv[10120])Cv[8748]Cv[10120]","Cv[10120]axh(Cv[10120])-atn((Cv[10120]/(Cv[10120]-1))sqt((1-Cv[10120])/(1+Cv[10120])))", //asech()
];
var summation =
[
"sum(10,Cv[10120]Cv[61]1)1","10",
"sum(10,Cv[10120]Cv[61]3)2Cv[10110]","16Cv[10110]",
"sum(10,Cv[10120]Cv[61]1)Cv[10120]","55",
"sum(10,Cv[10120]Cv[61]2)Cv[10120]","54",
"sum(10,Cv[10120]Cv[61]1)2Cv[10120]","110",
"sum(10,Cv[10120]Cv[61]1)Cv[10120]/2","55/2",
"sum(10,Cv[10120]Cv[61]1)2/Cv[10120]","7381/1260",
"sum(10,Cv[10120]Cv[61]1)2+Cv[10120]","75",
"sum(10,Cv[10120]Cv[61]1)2-Cv[10120]","-35",
"sum(10,Cv[10120]Cv[61]1)10-Cv[10120]","45",
"sum(10,Cv[10120]Cv[61]1)Cv[10120]-2","35",
"sum(10,Cv[10120]Cv[61]1)Cv[10120]^2","385",
"sum(10,Cv[10120]Cv[61]5)Cv[10120]^2","355",
"sum(10,Cv[10120]Cv[61]1)Cv[10120]^3","3025",
"sum(10,Cv[10120]Cv[61]5)Cv[10120]^3","2925",
"(sum(10,Cv[10120]Cv[61]1)Cv[10120])^2","3025",
"sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10120]","(Cv[10097]^2+Cv[10098]+Cv[10097]-Cv[10098]^2)/2",
"sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10110]^Cv[10120]","(Cv[10110]^(Cv[10097]+1)-Cv[10110]^Cv[10098])/(Cv[10110]-1)",
"sum(2Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10110]^Cv[10120]","(Cv[10110]^(2Cv[10097]+1)-Cv[10110]^Cv[10098])/(Cv[10110]-1)",
"sum(10,Cv[10120]Cv[61]1)2^Cv[10120]","2046",
"sum(10,Cv[10120]Cv[61]1)(-2)^Cv[10120]","682",
"sum(10,Cv[10120]Cv[61]1)-(2^Cv[10120])","-2046",
"sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10121]+Cv[10120]","Cv[10097]^2/2+Cv[10121](Cv[10097]-Cv[10098]+1)+(Cv[10098]+Cv[10097])/2-Cv[10098]^2/2",
"sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[8]^Cv[10120]","(Cv[8]^(Cv[10097]+1)-Cv[8]^(Cv[10098]))/(Cv[8]-1)",
"sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10099]+Cv[8]^Cv[10120]","(Cv[8]^(Cv[10097]+1)-Cv[8]^(Cv[10098]))/(Cv[8]-1)+Cv[10099](Cv[10097]-Cv[10098]+1)",
"sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[8747]Cv[8]^Cv[10120]Cv[8748]Cv[10120]","(Cv[8]^(Cv[10097]+1)-Cv[8]^(Cv[10098]))/(Cv[8]-1)+Cv[11100](Cv[10097]-Cv[10098]+1)",
"Cv[8747](sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10120])Cv[8748]Cv[10120]","(Cv[10120](Cv[10097]^2+Cv[10098]+Cv[10097]-Cv[10098]^2))/2+Cv[11100]",
"idr(Cv[10110])sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10110]^Cv[10120]","(Cv[10110]^Cv[10098]+(Cv[10110]-1)((Cv[10097]+1)Cv[10110]^Cv[10097]-Cv[10098]Cv[10110]^(Cv[10098]-1))-Cv[10110]^(Cv[10097]+1))/(Cv[10110]-1)^2",
"sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])2lne(Cv[10120])","2lne((Cv[10097]Cv[45])/((Cv[10098]-1)Cv[45]))",
"sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])2sqt(Cv[10120])","2sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])sqt(Cv[10120])",
"sum(Cv[8734],Cv[10120]Cv[61]1)(1/3)^Cv[10120]","1/2",
"sum(Cv[8734],Cv[10120]Cv[61]1)(1/Cv[10110])^Cv[10120]","1/(Cv[10110]-1)",
"sum(Cv[8734],Cv[10120]Cv[61]1)(1/2^Cv[10120])","1",
"sum(Cv[8734],Cv[10120]Cv[61]Cv[10098])(Cv[10097]/2^Cv[10120])","Cv[10097]2^(1-Cv[10098])",
"sum(Cv[8734],Cv[10120]Cv[61]Cv[10098])(Cv[10097]/3^Cv[10120])","(Cv[10097]3^(1-Cv[10098]))/2",
"sum(Cv[8734],Cv[10120]Cv[61]3)(1/2^Cv[10120])","1/4",
"sum(Cv[8734],Cv[10120]Cv[61]1)(1/Cv[10120]!)","Cv[8]-1",
"sum(Cv[8734],Cv[10120]Cv[61]0)(Cv[8]^Cv[10110]/Cv[10120]!)","Cv[8]^(Cv[10110]+1)",
"sum(Cv[8734],Cv[10120]Cv[61]1)(Cv[8]^Cv[10110]/Cv[10120]!)","Cv[8]^(Cv[10110])(Cv[8]-1)",
"sum(Cv[8734],Cv[10120]Cv[61]0)(Cv[10110]^Cv[10120]/Cv[10120]!)","Cv[8]^Cv[10110]",
"sum(Cv[8734],Cv[10120]Cv[61]4)(Cv[10110]^Cv[10120]/Cv[10120]!)","Cv[8]^Cv[10110]-(1+Cv[10110]+Cv[10110]^2+Cv[10110]^3)/10",
"sum(Cv[8734],Cv[10120]Cv[61]1)(1/Cv[10120]^2)","Cv[29]^2/6",
"sum(Cv[8734],Cv[10120]Cv[61]2)(1/Cv[10120]^2)","Cv[29]^2/6-1",
"sum(Cv[10121],Cv[10120]Cv[61]1)lne(Cv[10120])","lne(Cv[10121]!)",
"sum(Cv[8734],Cv[10120]Cv[61]0)(Cv[8]^Cv[10110]/Cv[10121](Cv[10120]!))","(Cv[8]^(Cv[10110]+1))/Cv[10121]",
"sum(10,Cv[10120]Cv[61]1)1/2^Cv[10120]","1023/1024",
"sum(3,Cv[10120]Cv[61]0)1/Cv[10110]^Cv[10120]","1/Cv[10110]^3+1/Cv[10110]^2+1/Cv[10110]+1",
"sum(Cv[10097],Cv[10120]Cv[61]Cv[10098])1/Cv[10110]^Cv[10120]","(Cv[10110]^(-Cv[10097]-Cv[10098])(Cv[10097]^(Cv[10097]+1)-Cv[10110]^Cv[10098]))/(Cv[10110]-1)",
"sum(Cv[8734],Cv[10120]Cv[61]1)Cv[10120]","Cv[8734]",
"sum(Cv[8734],Cv[10120]Cv[61]1)2Cv[10120]","Cv[8734]",
"sum(Cv[8734],Cv[10120]Cv[61]0)2^Cv[10120]","Cv[8734]",

"prd(10,Cv[10120]Cv[61]1)Cv[10120]","10Cv[45]",
"prd(10,Cv[10120]Cv[61]3)Cv[10120]","1814400",
"prd(5,Cv[10097]Cv[61]1)1/2^Cv[10097]","1/32768",
"prd(100,Cv[10097]Cv[61]1)2^Cv[10097]","2^5050",
"prd(Cv[8734],Cv[10097]Cv[61]1)2^Cv[10097]","prd(Cv[8734],Cv[10097]Cv[61]1)2^Cv[10097]",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10120]","Cv[10097]Cv[45]/(Cv[10098]-1)Cv[45]",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10110]","Cv[10110]^(Cv[10097]-Cv[10098]+1)",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])-Cv[10120]","((-1)^(Cv[10097]-Cv[10098]+1)(Cv[10097]Cv[45]))/((Cv[10098]-1)Cv[45])",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10110]^Cv[10120]","Cv[10110]^((Cv[10097]^2+Cv[10098]+Cv[10097]-Cv[10098]^2)/2)",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10120]^Cv[10110]","((Cv[10097]Cv[45])/((Cv[10098]-1)Cv[45]))^Cv[10110]",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10120]/Cv[10110]","(Cv[10110]^(Cv[10098]-Cv[10097]-1)(Cv[10097]Cv[45]))/((Cv[10098]-1)Cv[45])",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10110]/Cv[10120]","(Cv[10110]^(Cv[10097]-Cv[10098]+1)((Cv[10098]-1)Cv[45]))/(Cv[10097]Cv[45])",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10110]Cv[10120]","(Cv[10110]^(Cv[10097]-Cv[10098]+1)(Cv[10097]Cv[45]))/((Cv[10098]-1)Cv[45])",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10110]-Cv[10120]","(((-1)^(Cv[10097]-Cv[10098]+1)((Cv[10097]-Cv[10110])Cv[45]))/((Cv[10098]-Cv[10110]-1)Cv[45]))",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10120]-Cv[10110]","((Cv[10110]-Cv[10097])Cv[45])/((Cv[10110]+Cv[10098]-1)Cv[45])",
"prd(Cv[10097],Cv[10120]Cv[61]Cv[10098])Cv[10120]+Cv[10110]","((Cv[10110]+Cv[10097])Cv[45])/((Cv[10110]+Cv[10098]-1)Cv[45])",

"prd(10,Cv[10120]Cv[61]1)sin(Cv[29]Cv[10120])","0",
"prd(Cv[8734],Cv[10120]Cv[61]1)sin(Cv[10120])","prd(Cv[8734],Cv[10120]Cv[61]1)sin(Cv[10120])",

];

var series =
[
"sqt(Cv[10120])","Cv[10120]",1,4,"1+(Cv[10120]-1)/2-(Cv[10120]-1)^2/8+(Cv[10120]-1)^3/16-5(Cv[10120]-1)^4/128+Cv[8230]",
"Cv[8]^Cv[10120]","Cv[10120]",0,4,"1+Cv[10120]+Cv[10120]^2/2+Cv[10120]^3/6+Cv[10120]^4/24+Cv[8230]",
"1/(1-Cv[10120])","Cv[10120]",0,4,"1+Cv[10120]+Cv[10120]^2+Cv[10120]^3+Cv[10120]^4+Cv[8230]",
"lne(Cv[10120])","Cv[10120]",1,4,"Cv[10120]-1-(Cv[10120]-1)^2/2+(Cv[10120]-1)^3/3-(Cv[10120]-1)^4/4+Cv[8230]",
"sin(Cv[10120])","Cv[10120]",0,8,"Cv[10120]-Cv[10120]^3/6+Cv[10120]^5/120-Cv[10120]^7/5040+Cv[8230]",
"sin(Cv[10120])","Cv[10120]","Cv[29]",8,"Cv[29]-Cv[10120]+(Cv[10120]-Cv[29])^3/6-(Cv[10120]-Cv[29])^5/120+(Cv[10120]-Cv[29])^7/5040+Cv[8230]",
"sin(Cv[10120])^2","Cv[10120]",0,8,"Cv[10120]^2-Cv[10120]^4/3+2Cv[10120]^6/45-Cv[10120]^8/315+Cv[8230]",
"sin(Cv[10120]^2)","Cv[10120]",0,12,"Cv[10120]^2-Cv[10120]^6/6+Cv[10120]^10/120+Cv[8230]",
"tan(Cv[10120])","Cv[10120]",0,8,"Cv[10120]+Cv[10120]^3/3+2Cv[10120]^5/15+17Cv[10120]^7/315+Cv[8230]",
"atn(Cv[10120])","Cv[10120]",0,8,"Cv[10120]-Cv[10120]^3/3+Cv[10120]^5/5-Cv[10120]^7/7+Cv[8230]",
"erf(Cv[10120])","Cv[10120]",0,8,"2Cv[10120]/sqt(Cv[29])-2Cv[10120]^3/3sqt(Cv[29])+Cv[10120]^5/5sqt(Cv[29])-Cv[10120]^7/21sqt(Cv[29])+Cv[8230]",
"snh(Cv[10120])","Cv[10120]",0,8,"Cv[10120]+Cv[10120]^3/6+Cv[10120]^5/120+Cv[10120]^7/5040+Cv[8230]",
"Cv[10120]^3+2Cv[10120]+1","Cv[10120]",3,4,"34+29Cv[10120]-87+9(Cv[10120]-3)^2+(Cv[10120]-3)^3+Cv[8230]",
];

var html =
[
"(2(3-2Cv[46])/Cv[29])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>2(3&minus;2<i>i</i>)</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#960;</span></span></span> </span>",
"(8/Cv[29])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>8</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#960;</span></span></span> </span>",
"(2(3-2Cv[46])/Cv[29])Cv[10120]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>2(3&minus;2<i>i</i>)</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#960;</span></span></span> <i>x</i></span>",
"((8/Cv[29]))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>8</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#960;</span></span></span> </span>",
"Cv[10069]sbt(Cv[10117]-1)/Cv[8]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>E</i><sub><sub><i>u</i>&minus;1</sub></sub></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>e</i></span></span></span> </span>",
"lim(Cv[10120],0)(Cv[10102](Cv[10120]+Cv[10104])-Cv[10102](Cv[10120]))/Cv[10104]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='display:inline-block;'><span style='text-align:center;vertical-align:middle;display:inline-table;'><span style='display:table-row;font-size:40%'>&nbsp;</span><span style='line-height:50%;display:table-row;'>lim</span><span style='display:table-row;font-size:60%'><i>x</i>&#8594;0</span></span></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>f</i>(<i>x</i>+<i>h</i>)&minus;<i>f</i>(<i>x</i>)</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>h</i></span></span></span> </span>",
"Cv[10120]/Cv[10121]Cv[8805]Cv[10122]^2","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>y</i></span></span></span>  &#8805; <i>z</i><sup>2</sup></span>",
"cbr(sin(Cv[10120]/2)+cos(Cv[10121]/2)/2Cv[46])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:321%'>&#123;</span>sin<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span>+ <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>cos<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>y</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2<i>i</i></span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:321%'>&#125;</span></span>",
"prd(Cv[10120],Cv[10110]=1)Cv[8]^-Cv[10110]/2","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'><i>x</i></span><span style='line-height:80%;display:table-row;font-size:125%'>&#8719;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>n</i> = 1</span></span></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>e</i><sup>&minus;<i>n</i></sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> </span>",
"sum(Cv[8734],Cv[10110]=1)Cv[8]^Cv[10110]/2","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'>&#8734;</span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>n</i> = 1</span></span></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>e</i><sup><i>n</i></sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> </span>",
"Cv[8750]Cv[10103](Cv[10120])/Cv[10102](Cv[10120])Cv[8748]Cv[10120]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='display:inline-block;'><span style='vertical-align:middle;font-size:200%'>&#8750;</span></span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>g</i>(<i>x</i>)</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>f</i>(<i>x</i>)</span></span></span>  <i>d</i><i>x</i></span>",
"sdr(Cv[10120],Cv[10116])Cv[8]/Cv[10120]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>d</i><i>x</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>d</i><i>t</i></span></span></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>e</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>x</i></span></span></span> </span>",
"Cv[10120]*Cv[10121]=Cv[10120]Cv[10121]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>x</i>&times;<i>y</i> = <i>x</i><i>y</i></span>",
"Cv[10120]=Cv[8]^Cv[10121]Cv[8660]lne(Cv[10120]) = Cv[10121]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>x</i> = <i>e</i><sup><i>y</i></sup>&#8660; ln(<i>x</i>) = <i>y</i></span>",
"(Cv[10120]/Cv[10121])^Cv[10110]=Cv[10120]^Cv[10110]/Cv[10121]^Cv[10110]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>y</i></span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span><sup><span style='vertical-align:super'><i>n</i></span></sup> =  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i><sup><i>n</i></sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>y</i><sup><i>n</i></sup></span></span></span> </span>",
"(Cv[10120]/Cv[10121])^(Cv[10110]/Cv[10099])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>y</i></span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span><sup><span style='vertical-align:super'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>n</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>c</i></span></span></span> </span></sup></span>",
"(Cv[10097]+Cv[10098]Cv[46])/(Cv[10099]+Cv[10100]Cv[46])=(Cv[10097]Cv[10099]+Cv[10098]Cv[10100])/(Cv[10099]^2+Cv[10100]^2)+((Cv[10098]Cv[10099]-Cv[10097]Cv[10100])/(Cv[10099]^2+Cv[10100]^2))Cv[46]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>a</i>+<i>b</i><i>i</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>c</i>+ <i>d</i><i>i</i></span></span></span>  =  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>a</i><i>c</i>+<i>b</i><i>d</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>c</i><sup>2</sup>+<i>d</i><sup>2</sup></span></span></span> + <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>b</i><i>c</i>&minus;<i>a</i><i>d</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>c</i><sup>2</sup>+<i>d</i><sup>2</sup></span></span></span> <i>i</i></span>",
"Cv[10114]=abs(Cv[10122])=sqt(Cv[10097]^2+Cv[10098]^2)","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>r</i> = &#124;<i>z</i>&#124; = <span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'><i>a</i><sup>2</sup>+<i>b</i><sup>2</sup></span></span></span></span></span>",
"Cv[10099]^2=Cv[10097]^2+Cv[10098]^2-2Cv[10097]Cv[10098]cos(Cv[952])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>c</i><sup>2</sup> = <i>a</i><sup>2</sup>+<i>b</i><sup>2</sup>&minus;2<i>a</i><i>b</i> cos(&#952;)</span>",
"csh(Cv[10120])=sum(Cv[8734],Cv[10110]=0)(Cv[10120]^(2Cv[10110])/(2Cv[10110])Cv[45])=1+Cv[10120]^2/2Cv[45]+Cv[10120]^4/4Cv[45]+Cv[8230]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>cosh(<i>x</i>) = <span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'>&#8734;</span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>n</i> = 0</span></span></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i><sup>2<i>n</i></sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>(2<i>n</i>)!</span></span></span>  = 1+ <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i><sup>2</sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2!</span></span></span> + <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i><sup>4</sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>4!</span></span></span> +&#8230;</span>",
"Cv[8747]lne(abs(Cv[10097]Cv[10120]))Cv[10100]Cv[10120]=Cv[10120]lne(abs(Cv[10097]Cv[10120]))-Cv[10120]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='display:inline-block;'><span style='vertical-align:middle;display:inline-table;'><span style='display:table-row;line-height:90%'>&#8992;</span><span style='display:table-row;line-height:90%'>&#8993;</span></span></span>ln(&#124;<i>a</i><i>x</i>&#124;) <i>d</i><i>x</i> = <i>x</i> ln(&#124;<i>a</i><i>x</i>&#124;)&minus;<i>x</i></span>",
"itg(Cv[10098],Cv[10097])Cv[10102](Cv[10120])Cv[8748]Cv[10120]=-itg(Cv[10097],Cv[10098])Cv[10102](Cv[10120])Cv[8748]Cv[10120]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='display:inline-block;vertical-align:middle;'><table cellpadding='0' cellspacing='0'><tr><td rowspan='4'><span style='vertical-align:middle;display:inline-table;'><span style='display:table-row;line-height:90%'>&#8992;</span><span style='display:table-row;line-height:90%'>&#8993;</span></span></td><tr><td style='font-size:45%'><i>b</i></td></tr><tr><td>&nbsp;</td></tr><td style='font-size:45%'><i>a</i></td></tr></table></span> <i>f</i>(<i>x</i>) <i>d</i><i>x</i> = &minus;<span style='display:inline-block;vertical-align:middle;'><table cellpadding='0' cellspacing='0'><tr><td rowspan='4'><span style='vertical-align:middle;display:inline-table;'><span style='display:table-row;line-height:90%'>&#8992;</span><span style='display:table-row;line-height:90%'>&#8993;</span></span></td><tr><td style='font-size:45%'><i>a</i></td></tr><tr><td>&nbsp;</td></tr><td style='font-size:45%'><i>b</i></td></tr></table></span> <i>f</i>(<i>x</i>) <i>d</i><i>x</i></span>",
"itg(Cv[10098],Cv[10097])Cv[10120]/Cv[10121]Cv[8748]Cv[10120]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='display:inline-block;vertical-align:middle;'><table cellpadding='0' cellspacing='0'><tr><td rowspan='4'><span style='vertical-align:middle;display:inline-table;'><span style='display:table-row;line-height:90%'>&#8992;</span><span style='display:table-row;line-height:90%'>&#8993;</span></span></td><tr><td style='font-size:45%'><i>b</i></td></tr><tr><td>&nbsp;</td></tr><td style='font-size:45%'><i>a</i></td></tr></table></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>y</i></span></span></span>  <i>d</i><i>x</i></span>",
"(tdr(Cv[10120])sin(Cv[10120]))+(tdr(Cv[10120])Cv[10120]^3)","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>d</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>d</i><i>x</i></span></span></span> sin(<i>x</i>)<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span>+<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>d</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>d</i><i>x</i></span></span></span> <i>x</i><sup>3</sup><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span></span>",
"tdr(Cv[10120])Cv[10121]/Cv[10120]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>d</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>d</i><i>x</i></span></span></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>y</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>x</i></span></span></span> </span>",
"(nrt(Cv[10110],Cv[10120])/nrt(Cv[10110],Cv[10121]))=nrt(Cv[10110],Cv[10120]/Cv[10121])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'><span style='vertical-align:top;display:inline-block;position:relative;'><span style='vertical-align:top;position:absolute;'>&#8730;</span><span style='vertical-align:top;position:absolute;font-size:50%;'><sup>&nbsp;<i>n</i></sup></span>&nbsp;&nbsp;</span></span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'><i>x</i></span></span></span></span></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'><span style='vertical-align:top;display:inline-block;position:relative;'><span style='vertical-align:top;position:absolute;'>&#8730;</span><span style='vertical-align:top;position:absolute;font-size:50%;'><sup>&nbsp;<i>n</i></sup></span>&nbsp;&nbsp;</span></span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'><i>y</i></span></span></span></span></span></span></span>  = <span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:202%'><span style='vertical-align:top;display:inline-block;position:relative;'><span style='vertical-align:top;position:absolute;'>&#8730;</span><span style='vertical-align:top;position:absolute;font-size:50%;'><sup>&nbsp;<i>n</i></sup></span>&nbsp;&nbsp;</span></span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>y</i></span></span></span> </span></span></span></span></span>",
"(tdr(Cv[10120])Cv[10102](Cv[10120]))+(tdr(Cv[10121])Cv[10103](Cv[10121]))=Cv[10102]Cv[8242](Cv[10120])+Cv[10103]Cv[8242](Cv[10121])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>d</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>d</i><i>x</i></span></span></span> <i>f</i>(<i>x</i>)<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span>+<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>d</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>d</i><i>y</i></span></span></span> <i>g</i>(<i>y</i>)<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span> = <i>f</i>&#8242;(<i>x</i>)+<i>g</i>&#8242;(<i>y</i>)</span>",
"sin(Cv[29])cos(Cv[29])tan(Cv[29])lne(Cv[29])erf(Cv[29])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sin(&#960;) cos(&#960;) tan(&#960;) ln(&#960;) erf(&#960;)</span>",
"asn(Cv[8])acs(Cv[8])atn(Cv[8])log(Cv[8])efc(Cv[8])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>asin(<i>e</i>) acos(<i>e</i>) atan(<i>e</i>) log(<i>e</i>) erfc(<i>e</i>)</span>",
"sbr(sec(Cv[46])csc(Cv[46])cot(Cv[46])lgn(2,8))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>&#91;sec(<i>i</i>) csc(<i>i</i>) cot(<i>i</i>) log<sub>2</sub>(8)&#93;</span>",
"asc(acc(act(arg(exp(sqt(Cv[46]Cv[8]Cv[29]))))))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>asec(acsc(acot(arg(exp(<span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'><i>i</i><i>e</i>&#960;</span></span></span></span>)))))</span>",
"snh(Cv[29])csh(Cv[29]/2)tnh(Cv[8]/Cv[29])con(Cv[46]Cv[8]Cv[29])abs(Cv[8]/Cv[29])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sinh(&#960;) cosh<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>&#960;</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span> tanh<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>e</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#960;</span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span> <span style='border-top-style:solid;border-top-width:2px;padding:4px;font-size:90%'><i>i</i><i>e</i>&#960;</span><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>&#124;</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>e</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#960;</span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>&#124;</span></span>",
"ash(Cv[46])ach(Cv[46]Cv[8])ath(Cv[8]/Cv[29])int(Cv[8])cei(5Cv[46])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>asinh(<i>i</i>) acosh(<i>i</i><i>e</i>) atanh<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>e</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#960;</span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span>&#8970;<i>e</i>&#8971;&#8968;5<i>i</i>&#8969;</span>",
"Cv[10099]=sqt(Cv[10118]^2/(1-Cv[10108]^2/Cv[10076]^2))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>c</i> = <span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:304%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>v</i><sup>2</sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>1&minus; <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>l</i><sup>2</sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>L</i><sup>2</sup></span></span></span> </span></span></span> </span></span></span></span></span>",
"Cv[10099]=sqt(10.2049)","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>c</i> = <span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'>10.2049</span></span></span></span></span>",
"(1.2035*10^-12)/10.55","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>1.2035&times;10<sup>&minus;12</sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>10.55</span></span></span> </span>",
"Cv[10120]^(3/4)Cv[10120]^(7/2)","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>x</i><sup><span style='vertical-align:super'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>3</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>4</span></span></span> </span></sup><i>x</i><sup><span style='vertical-align:super'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>7</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> </span></sup></span>",
"(Cv[10120]/Cv[10121])(Cv[10120]Cv[10121]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>y</i></span></span></span> (<i>x</i><i>y</i></span>",
"(Cv[10120]/Cv[10121](Cv[10120]Cv[10121])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>y</i>(<i>x</i><i>y</i>)</span></span></span> </span>",
"-(Cv[10098]/3Cv[10097])+((1-Cv[46]sqt(3))/6Cv[10097])nrt(3,(1/2)(2Cv[10098]^3-9Cv[10097]Cv[10098]Cv[10099]+27Cv[10097]^2Cv[10100]+sqt(Cv[916])))+((1+Cv[46]sqt(3))/6Cv[10097])nrt(3,(1/2)(2Cv[10098]^3-9Cv[10097]Cv[10098]Cv[10099]+27Cv[10097]^2Cv[10100]-sqt(Cv[916])))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>&minus; <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>b</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>3<i>a</i></span></span></span> + <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>1&minus;<i>i</i><span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'>3</span></span></span></span></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>6<i>a</i></span></span></span> <span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:202%'><span style='vertical-align:top;display:inline-block;position:relative;'><span style='vertical-align:top;position:absolute;'>&#8730;</span><span style='vertical-align:top;position:absolute;font-size:50%;'><sup>&nbsp;3</sup></span>&nbsp;&nbsp;</span></span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>1</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> (2<i>b</i><sup>3</sup>&minus;9<i>a</i><i>b</i><i>c</i>+27<i>a</i><sup>2</sup><i>d</i>+<span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'>&#916;</span></span></span></span>)</span></span></span></span>+ <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>1+<i>i</i><span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'>3</span></span></span></span></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>6<i>a</i></span></span></span> <span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:202%'><span style='vertical-align:top;display:inline-block;position:relative;'><span style='vertical-align:top;position:absolute;'>&#8730;</span><span style='vertical-align:top;position:absolute;font-size:50%;'><sup>&nbsp;3</sup></span>&nbsp;&nbsp;</span></span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>1</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> (2<i>b</i><sup>3</sup>&minus;9<i>a</i><i>b</i><i>c</i>+27<i>a</i><sup>2</sup><i>d</i>&minus;<span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'>&#916;</span></span></span></span>)</span></span></span></span></span>",
"((Cv[10114]^(3/2)+Cv[10082]^(3/2))/3)^9","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:321%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>r</i><sup><span style='vertical-align:super'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>3</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> </span></sup>+<i>R</i><sup><span style='vertical-align:super'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>3</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> </span></sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>3</span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:321%'>)</span><sup><span style='vertical-align:super'>9</span></sup></span>",
"(Cv[8747]Cv[10120]Cv[8748]Cv[10120])^2","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span><span style='display:inline-block;'><span style='vertical-align:middle;display:inline-table;'><span style='display:table-row;line-height:90%'>&#8992;</span><span style='display:table-row;line-height:90%'>&#8993;</span></span></span><i>x</i> <i>d</i><i>x</i><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span><sup>2</sup></span>",
"(sum(10,Cv[10120]Cv[61]1)Cv[10120])^2","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span><span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'>10</span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>x</i> = 1</span></span></span> <i>x</i><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span><sup><span style='vertical-align:super'>2</span></sup></span>",
"Cv[963]=sqt((1/(Cv[10078]))sum(Cv[10078],Cv[10108]=1)(Cv[10120]sbt(Cv[10108])-Cv[956])^2)","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>&#963; = <span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:202%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>1</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>N</i></span></span></span> <span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'><i>N</i></span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>l</i> = 1</span></span></span> (<i>x</i><sub><sub><i>l</i></sub></sub>&minus;&#956;)<sup>2</sup></span></span></span></span></span>",
"PDF=(1/Cv[963]sqt(2Cv[29]))Cv[8]^-((lne(Cv[10120])-Cv[956])^2/(2Cv[963]^2))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>P</i><i>D</i><i>F</i> =  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>1</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#963;<span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'>2&#960;</span></span></span></span></span></span></span> <i>e</i><sup><span style='vertical-align:super'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span>&minus; <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>(ln(<i>x</i>)&minus;&#956;)<sup>2</sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2&#963;<sup>2</sup></span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span></span></sup></span>",
"sum(Cv[10098],Cv[10120]=Cv[10097])Cv[10102](Cv[10120])+sum(Cv[10098],Cv[10120]=Cv[10097])Cv[10103](Cv[10120])=sum(Cv[10098],Cv[10120]=Cv[10097])sbr(Cv[10102](Cv[10120])+Cv[10103](Cv[10120]))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'><i>b</i></span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>x</i> = <i>a</i></span></span></span> <i>f</i>(<i>x</i>)+<span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'><i>b</i></span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>x</i> = <i>a</i></span></span></span> <i>g</i>(<i>x</i>) = <span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'><i>b</i></span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>x</i> = <i>a</i></span></span></span> &#91;<i>f</i>(<i>x</i>)+<i>g</i>(<i>x</i>)&#93;</span>",
"prd(Cv[10098],Cv[10105]=Cv[10097])Cv[10110]sbt(Cv[10105])=Cv[10110]sbt(Cv[10097])*Cv[10110]sbt(Cv[10097]+1)*Cv[10110]sbt(Cv[10097]+2)*Cv[8230]*Cv[10110]sbt(Cv[10098])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'><i>b</i></span><span style='line-height:80%;display:table-row;font-size:125%'>&#8719;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>i</i> = <i>a</i></span></span></span> <i>n</i><sub><sub><i>i</i></sub></sub> = <i>n</i><sub><sub><i>a</i></sub></sub>&times;<i>n</i><sub><sub><i>a</i>+1</sub></sub>&times;<i>n</i><sub><sub><i>a</i>+2</sub></sub>&times;&#8230;&times;<i>n</i><sub><sub><i>b</i></sub></sub></span>",
"Cv[10120]^sbr(sum(Cv[10098],Cv[10110]=Cv[10097])Cv[10102](Cv[10110]))=prd(Cv[10098],Cv[10110]=Cv[10097])Cv[10120]^(Cv[10102](Cv[10110]))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>x</i><sup><span style='vertical-align:super'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>&#91;</span><span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'><i>b</i></span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>n</i> = <i>a</i></span></span></span> <i>f</i>(<i>n</i>)<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>&#93;</span></span></sup> = <span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'><i>b</i></span><span style='line-height:80%;display:table-row;font-size:125%'>&#8719;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>n</i> = <i>a</i></span></span></span> <i>x</i><sup><i>f</i>(<i>n</i>)</sup></span>",
"Cv[10102](Cv[10120])=sum(Cv[8734],Cv[10110]=Cv[10097]) (Cv[10102]^cbr(Cv[10110])(Cv[10097])/Cv[10110]Cv[45])(Cv[10120]-Cv[10097])^Cv[10110]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>f</i>(<i>x</i>) = <span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'>&#8734;</span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>n</i> = <i>a</i></span></span></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>f</i><sup>&#123;<i>n</i>&#125;</sup>(<i>a</i>)</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>n</i>!</span></span></span> (<i>x</i>&minus;<i>a</i>)<sup><i>n</i></sup></span>",
"tan(Cv[10120])=sum(Cv[8734],Cv[10110]=1)(Cv[10066]sbt(2Cv[10110])(-4)^Cv[10110](1-4^Cv[10110])/(2Cv[10110])Cv[45])Cv[10120]^(2Cv[10110]-1)=Cv[10120]+Cv[10120]^3/3+2Cv[10120]^5/15+Cv[8230]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>tan(<i>x</i>) = <span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'>&#8734;</span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>n</i> = 1</span></span></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>B</i><sub><sub>2<i>n</i></sub></sub>(&minus;4)<sup><i>n</i></sup>(1&minus;4<sup><i>n</i></sup>)</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>(2<i>n</i>)!</span></span></span> <i>x</i><sup>2<i>n</i>&minus;1</sup> = <i>x</i>+ <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i><sup>3</sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>3</span></span></span> + <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>2<i>x</i><sup>5</sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>15</span></span></span> +&#8230;</span>",
"tnh(Cv[10120])=sum(Cv[8734],Cv[10110]=1)(Cv[10066]sbt(2Cv[10110])4^Cv[10110](4^Cv[10110]-1)/(2Cv[10110])Cv[45])Cv[10120]^(2Cv[10110]-1)=Cv[10120]-(1/3)Cv[10120]^3+(2/15)Cv[10120]^5-(17/315)Cv[10120]^7+Cv[8230]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>tanh(<i>x</i>) = <span style='display:inline-block;'><span style='vertical-align:middle;text-align:center;display:inline-table;'><span style='display:table-row;font-size:50%'>&#8734;</span><span style='line-height:80%;display:table-row;font-size:125%'>&#8721;</span><span style='line-height:150%;display:table-row;font-size:50%'><i>n</i> = 1</span></span></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>B</i><sub><sub>2<i>n</i></sub></sub>4<sup><i>n</i></sup>(4<sup><i>n</i></sup>&minus;1)</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>(2<i>n</i>)!</span></span></span> <i>x</i><sup>2<i>n</i>&minus;1</sup> = <i>x</i>&minus; <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>1</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>3</span></span></span> <i>x</i><sup>3</sup>+ <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>2</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>15</span></span></span> <i>x</i><sup>5</sup>&minus; <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>17</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>315</span></span></span> <i>x</i><sup>7</sup>+&#8230;</span>",
"idr(Cv[10120],2)Cv[10097]/Cv[10120]+Cv[10098]/Cv[10120]-Cv[10099]/Cv[10120]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>&#8706;<sup>2</sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#8706;<i>x</i><sup>2</sup></span></span></span>  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>a</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>x</i></span></span></span> + <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>b</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>x</i></span></span></span> &minus; <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>c</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>x</i></span></span></span> </span>",
"tdr(Cv[10120],2)Cv[10120]^3","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>d</i><sup>2</sup></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>d</i><i>x</i><sup>2</sup></span></span></span> <i>x</i><sup>3</sup></span>",

"sqt(mat(mat(7,10),mat(15,22)))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:304%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>7</td><td>10</td></tr><tr><td>15</td><td>22</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </span></span></span></span></span>",
"mat(mat(1,2,3,4,5,6),mat(11,12,13,14,15,16))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td></tr><tr><td>11</td><td>12</td><td>13</td><td>14</td><td>15</td><td>16</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </span>",
"(mat(mat(1,2,3),mat(4,5,6),mat(11,12,13),mat(14,15,16))*3)^2","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:542%'>(</span> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>1</td><td>2</td><td>3</td></tr><tr><td>4</td><td>5</td><td>6</td></tr><tr><td>11</td><td>12</td><td>13</td></tr><tr><td>14</td><td>15</td><td>16</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> &times;3<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:542%'>)</span></td><td style='vertical-align:top'><sup>2</sup></td></tr></table></span>",
"mat(mat(Cv[29]/2,2Cv[46],3,4),mat(Cv[10097],Cv[10098],Cv[10099],Cv[10100]/2))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>&#960;</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> </td><td>2<i>i</i></td><td>3</td><td>4</td></tr><tr><td><i>a</i></td><td><i>b</i></td><td><i>c</i></td><td> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>d</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> </td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </span>",
"mat(mat(1,2,3,4),mat(11,12,13,14))+mat(mat(5,6,7,8),mat(11,12,13,14))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>1</td><td>2</td><td>3</td><td>4</td></tr><tr><td>11</td><td>12</td><td>13</td><td>14</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> + <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>5</td><td>6</td><td>7</td><td>8</td></tr><tr><td>11</td><td>12</td><td>13</td><td>14</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </span>",
"mat(1,2,3,4,a,b,c,d)","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>{1, 2, 3, 4, <i>a</i>, <i>b</i>, <i>c</i>, <i>d</i>}</span>",
"mat(mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>1</td><td>2</td></tr><tr><td>11</td><td>12</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </td><td> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>3</td><td>4</td></tr><tr><td>11</td><td>12</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </span>",
"mat(mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))),mat(mat(mat(1,2),mat(11,12)),mat(mat(3,4),mat(11,12))))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>1</td><td>2</td></tr><tr><td>11</td><td>12</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </td><td> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>3</td><td>4</td></tr><tr><td>11</td><td>12</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </td></tr><tr><td> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>1</td><td>2</td></tr><tr><td>11</td><td>12</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </td><td> <table style='text-align:center;display:inline-table;vertical-align:middle'><tr><td style='border-left:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td><td><table><tr><td>3</td><td>4</td></tr><tr><td>11</td><td>12</td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </td></tr></table><td style='border-right:2px solid black;border-top:2px solid black;border-bottom:2px solid black'>&nbsp;</td></tr></table> </span>",
];
var htmlx =
[
"ash(Cv[46])ach(Cv[46]Cv[8])ath(Cv[8]/Cv[29])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sinh<sup>-1</sup>(<i>i</i>) cosh<sup>-1</sup>(<i>i</i><i>e</i>) tanh<sup>-1</sup><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>e</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#960;</span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span></span>",
"asc(acc(act(arg(exp(sqt(Cv[46]Cv[8]Cv[29]))))))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sec<sup>-1</sup>(csc<sup>-1</sup>(cot<sup>-1</sup>(arg(exp(<span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'><i>i</i><i>e</i>&#960;</span></span></span></span>)))))</span>",
"asn(Cv[8])acs(Cv[8])atn(Cv[8])log(Cv[8])efc(Cv[8])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sin<sup>-1</sup>(<i>e</i>) cos<sup>-1</sup>(<i>e</i>) tan<sup>-1</sup>(<i>e</i>) log(<i>e</i>) erfc(<i>e</i>)</span>",
"axh(ayh(azh(Cv[10120])))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sech<sup>-1</sup>(csch<sup>-1</sup>(coth<sup>-1</sup>(<i>x</i>)))</span>",
];
var htmly =
[
"ash(Cv[46])ach(Cv[46]Cv[8])ath(Cv[8]/Cv[29])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sinh<sup>-1</sup> <i>i</i>  cosh<sup>-1</sup> <i>i</i><i>e</i>  tanh<sup>-1</sup> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>e</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#960;</span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span> </span>",
"asc(acc(act(arg(exp(sqt(Cv[46]Cv[8]Cv[29]))))))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sec<sup>-1</sup> (csc<sup>-1</sup> (cot<sup>-1</sup> (arg(exp(<span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'><i>i</i><i>e</i>&#960;</span></span></span></span>))) ) ) </span>",
"asn(Cv[8])acs(Cv[8])atn(Cv[8])log(Cv[8])efc(Cv[8])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sin<sup>-1</sup> <i>e</i>  cos<sup>-1</sup> <i>e</i>  tan<sup>-1</sup> <i>e</i>  log <i>e</i>  erfc(<i>e</i>)</span>",
"axh(ayh(azh(Cv[10120])))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sech<sup>-1</sup> (csch<sup>-1</sup> (coth<sup>-1</sup> <i>x</i> ) ) </span>",
];
var htmlz =
[
"ash(Cv[46])ach(Cv[46]Cv[8])ath(Cv[8]/Cv[29])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>asinh <i>i</i>  acosh <i>i</i><i>e</i>  atanh  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>e</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>&#960;</span></span></span>  </span>",
"sin(cos(tan(arg(exp(sqt(Cv[46]Cv[8]Cv[29]))))))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sin (cos (tan (arg(exp(<span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'><i>i</i><i>e</i>&#960;</span></span></span></span>))) ) ) </span>",
"asc(acc(act(arg(exp(sqt(Cv[46]Cv[8]Cv[29]))))))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>asec (acsc (acot (arg(exp(<span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'><i>i</i><i>e</i>&#960;</span></span></span></span>))) ) ) </span>",
"csh(Cv[10120]Cv[10121])^(2Cv[10097])cos(Cv[10122])^(3Cv[10098])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>cosh<sup>2<i>a</i></sup>  <i>x</i><i>y</i>  cos<sup>3<i>b</i></sup>  <i>z</i> </span>",
"csh(Cv[10120]Cv[10121])^2cos(Cv[10122])^3","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>cosh<sup>2</sup>  <i>x</i><i>y</i>  cos<sup>3</sup>  <i>z</i> </span>",
"snh(Cv[29])csh(Cv[29]/2)^2","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sinh &#960;  cosh<sup>2</sup>   <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>&#960;</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span>  </span>",
"snh(Cv[29])^2csh(Cv[29]/2)^2","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sinh<sup>2</sup>  &#960;  cosh<sup>2</sup>   <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>&#960;</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span>  </span>",
"erf(Cv[29])^2efc(Cv[29]/2)^2","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>erf(&#960;)<sup>2</sup> erfc<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>&#960;</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span><sup><span style='vertical-align:super'>2</span></sup></span>",
"lne(Cv[29])^2lne(Cv[29]/2)^2","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>(ln &#960; )<sup>2</sup> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span>ln  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>&#960;</span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span>  <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span><sup>2</sup> </span>",
"cbr(sin(Cv[10120]/2)+cos(Cv[10121]/2)/2Cv[46])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:321%'>&#123;</span>sin  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>x</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span>  + <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'>cos  <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>y</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2</span></span></span>  </span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'>2<i>i</i></span></span></span> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:321%'>&#125;</span></span>",
"(tdr(Cv[10120])sin(Cv[10120]))+(tdr(Cv[10120])Cv[10120]^3)","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>d</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>d</i><i>x</i></span></span></span> sin <i>x</i> <span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span>+<span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>(</span> <span style='text-align:center;vertical-align:middle;display:inline-block;'><span style='display:table-row;'><span style='font-size:85%;display:table-cell'><i>d</i></span></span><span style='display:table-row;vertical-align:top'><span style='font-size:85%;display:table-cell;border-top-style:solid;border-top-width:2px;padding:3px;'><i>d</i><i>x</i></span></span></span> <i>x</i><sup>3</sup><span style='vertical-align:middle;display:inline-block;font-weight:100;font-size:210%'>)</span></span>",
"sin(Cv[29])cos(Cv[29])tan(Cv[29])lne(Cv[29])erf(Cv[29])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>sin &#960;  cos &#960;  tan &#960;  ln &#960;  erf(&#960;)</span>",
"asn(Cv[8])acs(Cv[8])atn(Cv[8])log(Cv[8])efc(Cv[8])","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>asin <i>e</i>  acos <i>e</i>  atan <i>e</i>  log <i>e</i>  erfc(<i>e</i>)</span>",
"sbr(sec(Cv[46])csc(Cv[46])cot(Cv[46])lgn(2,8))","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'>&#91;sec <i>i</i>  csc <i>i</i>  cot <i>i</i>  log<sub>2</sub> 8 &#93;</span>",
"Cv[10120]=sqt(-2Cv[963]^2lne(Cv[10112]Cv[963]sqt(2Cv[29])))+Cv[10109]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><i>x</i> = <span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'>&minus;2&#963;<sup>2</sup> ln (<i>p</i>&#963;<span style='vertical-align:middle;display:inline-block;padding:3px'><span style='vertical-align:top;font-size:100%'>&#8730;</span><span style='vertical-align:top;border-top-style:solid;border-top-width:2px;'><span style='vertical-align:top;'><span style='vertical-align:middle;font-size:90%'>2&#960;</span></span></span></span>) </span></span></span></span>+<i>m</i></span>",
//"Cv[8747]lne(abs(Cv[10097]Cv[10120]))Cv[10100]Cv[10120]=Cv[10120]lne(abs(Cv[10097]Cv[10120]))-Cv[10120]","<span title='MathGene HTML' style='font-family:Times,Serif;font-size:100%'><span style='display:inline-block;'><span style='vertical-align:middle;display:inline-table;'><span style='display:table-row;line-height:90%'>&#8992;</span><span style='display:table-row;line-height:90%'>&#8993;</span></span></span>ln &#124;<i>a</i><i>x</i>&#124; <i>d</i><i>x</i> = <i>x</i> ln &#124;<i>a</i><i>x</i>&#124; &minus;<i>x</i></span>",

];

var xport = 
[
"mat(mat(Cv[10120],Cv[10121],Cv[10122]),mat(12,13,14))*mat(mat(Cv[10097],Cv[10098],Cv[10099]),mat((Cv[29]/2),Cv[10100],Cv[8]))^2+sin(Cv[10120])","\\begin{bmatrix}x&y&z\\\\12&13&14\\end{bmatrix}\\times \\begin{bmatrix}a&b&c \\\\ \\frac{\\pi}{2}&d&e  \\end{bmatrix}^{2}+\\sin\\left(x\\right)",
"mat(mat(Cv[29]/2,2Cv[46],3,4),mat(Cv[10097],Cv[10098],Cv[10099],Cv[10100]/2))","\\begin{bmatrix} \\frac{ \\pi }{2}&2 \\imath &3&4 \\\\a&b&c& \\frac{d}{2} \\end{bmatrix}",
"mat(mat(1,2,3),mat(4,5,6),mat(11,12,13),mat(14,15,16))","\\begin{bmatrix}1&2&3 \\\\4&5&6 \\\\11&12&13 \\\\14&15&16 \\end{bmatrix}",
"1/2+1/5","\\frac{1}{2}+\\frac{1}{5}",
"(2(3-2Cv[46])/Cv[29])","\\frac{2 \\left(3-2 \\imath\\right)}{\\pi}",
"(8/Cv[29])","\\frac{8}{\\pi}",
"(2(3-2Cv[46])/Cv[29])Cv[10120]","\\frac{2 \\left(3-2 \\imath\\right)}{\\pi} x",
"Cv[10069]sbt(Cv[10117]-1)/Cv[8]","\\frac{E _{u-1}}{e}",
"lim(Cv[10120],0)(Cv[10102](Cv[10120]+Cv[10104])-Cv[10102](Cv[10120]))/Cv[10104]","\\lim_{x \\to 0} \\frac{f \\left(x+h\\right)-f \\left(x\\right)}{h}",
"Cv[10120]/Cv[10121]Cv[8805]Cv[10122]^2","\\frac{x}{y} \\geq z^{2}",
"sin(Cv[10120])","\\sin\\left(x\\right)",
"cos(Cv[10120]/2)","\\cos\\left(\\frac{x}{2}\\right)",
"cbr(sin(Cv[10120]/2)+cos(Cv[10121]/2)/2Cv[46])","\\left\\{\\sin\\left(\\frac{x}{2}\\right)+\\frac{\\cos\\left(\\frac{y}{2}\\right)}{2\\imath}\\right\\}",
"prd(Cv[10120],Cv[10110]=1)Cv[8]^-Cv[10110]/2","\\prod_{n=1}^{x} \\frac{e^{-n}}{2}",
"sum(Cv[8734],Cv[10110]=1)Cv[8]^Cv[10110]/2","\\sum_{n=1}^{\\infty } \\frac{e^{n}}{2}",
"csh(Cv[10120])=sum(Cv[8734],Cv[10110]=0)(Cv[10120]^(2Cv[10110])/(2Cv[10110])Cv[45])=1+Cv[10120]^2/2Cv[45]+Cv[10120]^4/4Cv[45]+Cv[8230]","\\cosh\\left(x\\right)=\\sum_{n=0}^{\\infty}\\frac{x^{2n}}{\\left(2n\\right)!}=1+\\frac{x^{2}}{2!}+\\frac{x^{4}}{4!}+\\dotsi",
"itg(Cv[10098],Cv[10097])Cv[10102](Cv[10120])Cv[8748]Cv[10120]=-itg(Cv[10097],Cv[10098])Cv[10102](Cv[10120])Cv[8748]Cv[10120]","\\int_{a}^{b} f \\left(x\\right) d x=-\\int_{b}^{a} f \\left(x\\right) d x",
"itg(Cv[10098],Cv[10097])Cv[10120]/Cv[10121]Cv[8748]Cv[10120]","\\int_{a}^{b} \\frac{x}{y} d x",
"(idr(Cv[10120])sin(Cv[10120]))+(idr(Cv[10120])Cv[10120]^3)","\\left(\\frac{\\partial}{\\partial x} \\sin\\left(x\\right)\\right)+\\left(\\frac{\\partial}{\\partial x} x^{3}\\right)",
"idr(Cv[10120])Cv[10121]/Cv[10120]","\\frac{\\partial}{\\partial x} \\frac{y}{x}",
"(nrt(Cv[10110],Cv[10120])/nrt(Cv[10110],Cv[10121]))=nrt(Cv[10110],Cv[10120]/Cv[10121])","\\frac{\\sqrt[n]{x}}{\\sqrt[n]{y}}=\\sqrt[n]{\\frac{x}{y}}",
"(idr(Cv[10120])Cv[10102](Cv[10120]))+(idr(Cv[10121])Cv[10103](Cv[10121]))=Cv[10102]Cv[8242](Cv[10120])+Cv[10103]Cv[8242](Cv[10121])","\\left(\\frac{\\partial}{\\partial x} f \\left(x\\right)\\right)+\\left(\\frac{\\partial}{\\partial y} g \\left(y\\right)\\right)=f \\prime \\left(x\\right)+g \\prime \\left(y\\right)",
"sin(Cv[29])cos(Cv[29])tan(Cv[29])lne(Cv[29])erf(Cv[29])","\\sin\\left(\\pi\\right) \\cos\\left(\\pi\\right) \\tan\\left(\\pi\\right) \\ln\\left(\\pi\\right) \\erf\\left(\\pi\\right)",
"sch(cch(cth(Cv[10120])))"," \\sech\\left(\\csch\\left(\\coth\\left(x\\right)\\right)\\right)",
"axh(Cv[10120])ayh(Cv[10120])azh(Cv[10120])"," \\arcsech\\left(x\\right) \\arccsch\\left(x\\right) \\arccoth\\left(x\\right)",
"Cv[913]Cv[914]Cv[915]Cv[916]Cv[917]Cv[945]Cv[946]Cv[947]Cv[948]Cv[949]Cv[918]Cv[919]Cv[920]Cv[921]Cv[922]Cv[950]Cv[951]Cv[952]Cv[953]Cv[954]Cv[923]Cv[924]Cv[925]Cv[926]Cv[927]Cv[955]Cv[956]Cv[957]Cv[958]","A B \\Gamma  \\Delta E \\alpha  \\beta  \\gamma  \\delta  \\epsilon Z H \\Theta I K \\zeta  \\eta  \\theta  \\iota  \\kappa  \\Lambda M N  \\Xi O \\lambda  \\mu  \\nu  \\xi ",
"Cv[959]Cv[928]Cv[929]Cv[931]Cv[932]Cv[933]Cv[960]Cv[961]Cv[963]Cv[964]Cv[965]Cv[934]Cv[935]Cv[936]Cv[937]Cv[966]Cv[967]Cv[968]Cv[969]","o \\Pi  \\Sigma T \\Upsilon  \\pi  \\sigma  \\tau  \\upsilon  \\Phi X \\Psi  \\Omega  \\phi  \\chi  \\psi  \\omega ",
"vec(Cv[10120])hat(Cv[10121])con(Cv[29])und(Cv[10122])","\\vec{x}\\hat{y}\\overline{\\pi}\\underline{z}",
"vec(Cv[10120]sbt(1))hat(Cv[10121]sbt(2))con(Cv[29]sbt(3))und(Cv[10122]sbt(4))","\\vec{x_{1}}\\hat{y_{2}}\\overline{\\pi_{3}}\\underline{z_{4}}",
"-(Cv[10098]/3Cv[10097])+((1-Cv[46]sqt(3))/6Cv[10097])nrt(3,(1/2)(2Cv[10098]^3-9Cv[10097]Cv[10098]Cv[10099]+27Cv[10097]^2Cv[10100]+sqt(Cv[916])))+((1+Cv[46]sqt(3))/6Cv[10097])nrt(3,(1/2)(2Cv[10098]^3-9Cv[10097]Cv[10098]Cv[10099]+27Cv[10097]^2Cv[10100]-sqt(Cv[916])))","- \\frac{b}{3 a}+ \\frac{1- \\imath \\sqrt{3}}{6 a} \\sqrt[3]{ \\frac{1}{2} \\left(2 b^{3}-9 a b c+27 a^{2} d+ \\sqrt{\\Delta} \\right)}+ \\frac{1+ \\imath \\sqrt{3}}{6 a} \\sqrt[3]{ \\frac{1}{2} \\left(2 b^{3}-9 a b c+27 a^{2} d- \\sqrt{ \\Delta } \\right)}","1/Cv[10120]^2","\\frac{1}{x^{2}}",
"(Cv[8747]Cv[10120]Cv[8748]Cv[10120])^2"," \\left( \\int x d x \\right)^{2}",
"(sum(10,Cv[10120]Cv[61]1)Cv[10120])^2"," \\left( \\sum_{x = 1}^{10} x \\right)^{2}",
"Cv[963]=sqt((1/(Cv[10078]))sum(Cv[10078],Cv[10108]=1)(Cv[10120]sbt(Cv[10108])-Cv[956])^2)"," \\sigma = \\sqrt{ \\frac{1}{N} \\sum_{l=1}^{N}  \\left(x_{l}- \\mu \\right)^{2}}",
"PDF=(1/Cv[963]sqt(2Cv[29]))Cv[8]^-((lne(Cv[10120])-Cv[956])^2/(2Cv[963]^2))","P D F= \\frac{1}{ \\sigma  \\sqrt{2 \\pi }} e^{- \\frac{ \\left( \\ln \\left(x \\right)- \\mu \\right)^{2}}{2 \\sigma^{2}}}",
"sum(Cv[10098],Cv[10120]=Cv[10097])Cv[10102](Cv[10120])+sum(Cv[10098],Cv[10120]=Cv[10097])Cv[10103](Cv[10120])=sum(Cv[10098],Cv[10120]=Cv[10097])sbr(Cv[10102](Cv[10120])+Cv[10103](Cv[10120]))","\\sum_{x=a}^{b}f\\left(x\\right)+\\sum_{x=a}^{b}g\\left(x\\right)=\\sum_{x=a}^{b}\\left\\[f\\left(x\\right)+g\\left(x\\right)\\right\\]",
"prd(Cv[10098],Cv[10105]=Cv[10097])Cv[10110]sbt(Cv[10105])=Cv[10110]sbt(Cv[10097])*Cv[10110]sbt(Cv[10097]+1)*Cv[10110]sbt(Cv[10097]+2)*Cv[8230]*Cv[10110]sbt(Cv[10098])"," \\prod_{ \\imath =a}^{b} n_{ \\imath }=n_{a} \\times n_{a+1} \\times n_{a+2} \\times \\dotsi \\times n_{b}",
"Cv[10120]^sbr(sum(Cv[10098],Cv[10110]=Cv[10097])Cv[10102](Cv[10110]))=prd(Cv[10098],Cv[10110]=Cv[10097])Cv[10120]^(Cv[10102](Cv[10110]))","x^{\\left\\[\\sum_{n=a}^{b}f\\left(n\\right)\\right\\]}=\\prod_{n=a}^{b}x^{f\\left(n\\right)}",
"Cv[10102](Cv[10120])=sum(Cv[8734],Cv[10110]=Cv[10097]) (Cv[10102]^cbr(Cv[10110])(Cv[10097])/Cv[10110]Cv[45])(Cv[10120]-Cv[10097])^Cv[10110]","f \\left(x \\right)= \\sum_{n=a}^{ \\infty }  \\frac{f^{ \\left \\{n \\right \\}} \\left(a \\right)}{n !} \\left(x-a \\right)^{n}",
"tan(Cv[10120])=sum(Cv[8734],Cv[10110]=1)(Cv[10066]sbt(2Cv[10110])(-4)^Cv[10110](1-4^Cv[10110])/(2Cv[10110])Cv[45])Cv[10120]^(2Cv[10110]-1)=Cv[10120]+Cv[10120]^3/3+2Cv[10120]^5/15+Cv[8230]"," \\tan \\left(x \\right)= \\sum_{n=1}^{ \\infty }  \\frac{B_{2 n} \\left(-4 \\right)^{n} \\left(1-4^{n} \\right)}{ \\left(2 n \\right) !} x^{2 n-1}=x+ \\frac{x^{3}}{3}+ \\frac{2 x^{5}}{15}+ \\dotsi ",
"tnh(Cv[10120])=sum(Cv[8734],Cv[10110]=1)(Cv[10066]sbt(2Cv[10110])4^Cv[10110](4^Cv[10110]-1)/(2Cv[10110])Cv[45])Cv[10120]^(2Cv[10110]-1)=Cv[10120]-(1/3)Cv[10120]^3+(2/15)Cv[10120]^5-(17/315)Cv[10120]^7+Cv[8230]"," \\tanh \\left(x \\right)= \\sum_{n=1}^{ \\infty }  \\frac{B_{2 n} 4^{n} \\left(4^{n}-1 \\right)}{ \\left(2 n \\right) !} x^{2 n-1}=x- \\frac{1}{3} x^{3}+ \\frac{2}{15} x^{5}- \\frac{17}{315} x^{7}+ \\dotsi ",

];
var xportx = 
[
"snh(Cv[29])csh(Cv[29]/2)^2","\\sinh{\\pi}\\cosh^{2}{\\frac{\\pi}{2}}",
"snh(Cv[29])^2csh(Cv[29]/2)^2","\\sinh^{2}{\\pi}\\cosh^{2}{\\frac{\\pi}{2}}",
"Cv[10098]csh(Cv[10120]Cv[10121])^(2Cv[10097])cos(Cv[10122])^(3Cv[10098])","b\\cosh^{2a}{xy}\\cos^{3b}{z}",
"arg(Cv[29])^2arg(Cv[29]/2)^2","\\left(\\arg{\\pi}\\right)^{2}\\left(\\arg{\\frac{\\pi}{2}}\\right)^{2}",
"lne(Cv[29])^2lne(Cv[29]/2)^2","\\left(\\ln{\\pi}\\right)^{2}\\left(\\ln{\\frac{\\pi}{2}}\\right)^{2}",
"sin(Cv[8])","\\sin {e}",
"1/Cv[10120]^2","\\frac{1}{{x}^{2}}",
"axh(ayh(azh(Cv[10120])))","\\arcsech{\\arccsch{\\arccoth{x}}}",
];
var xporty = 
[
"asc(asn(Cv[10120]/Cv[10121]))","\\sec^{-1}{\\sin^{-1}{\\frac{x}{y}}}",
"atn(Cv[8]/Cv[29])^2","\\left( \\tan^{-1} {\\frac{e}{ \\pi }} \\right)^{2}",
"asn(Cv[8]/Cv[29])^2","\\left( \\sin^{-1} {\\frac{e}{ \\pi }} \\right)^{2}",
"acs(Cv[8]/Cv[29])^2","\\left( \\cos^{-1} {\\frac{e}{ \\pi }} \\right)^{2}",
"ash(Cv[8]/Cv[29])^2","\\left( \\sinh^{-1} {\\frac{e}{ \\pi }} \\right)^{2}",
"ath(Cv[8]/Cv[29])^2","\\left( \\tanh^{-1} {\\frac{e}{ \\pi }} \\right)^{2}",
"axh(ayh(azh(Cv[10120])))","\\sech^{-1}{\\csch^{-1}{\\coth^{-1}{x}}}",
];
var xportz = 
[
"asc(asn(Cv[10120]/Cv[10121]))","\\sec^{-1}\\left(\\sin^{-1}\\left(\\frac{x}{y}\\right)\\right)",
"atn(Cv[8]/Cv[29])^2"," \\tan^{-1} \\left( \\frac{e}{ \\pi } \\right)^{2}",
"asn(Cv[8]/Cv[29])^2"," \\sin^{-1} \\left( \\frac{e}{ \\pi } \\right)^{2}",
"acs(Cv[8]/Cv[29])^2"," \\cos^{-1} \\left( \\frac{e}{ \\pi } \\right)^{2}",
"ash(Cv[8]/Cv[29])^2"," \\sinh^{-1} \\left( \\frac{e}{ \\pi } \\right)^{2}",
"ath(Cv[8]/Cv[29])^2"," \\tanh^{-1} \\left( \\frac{e}{ \\pi } \\right)^{2}",
"axh(ayh(azh(Cv[10120])))","\\sech^{-1}\\left(\\csch^{-1}\\left(\\coth^{-1}\\left(x\\right)\\right)\\right)",
];
var mport = 
[
"\\begin {bmatrix}x&y&z \\\\ 12&13&14  \\end{bmatrix}*\\begin{bmatrix}a&b&c \\\\ \\frac{\\pi}{2}&d&e  \\end {bmatrix}^{2}+\\sin{x}","mat(mat(Cv[10120],Cv[10121],Cv[10122]),mat(12,13,14))*mat(mat(Cv[10097],Cv[10098],Cv[10099]),mat((Cv[29]/2),Cv[10100],Cv[8]))^2+sin(Cv[10120])",
"\\begin{ bmatrix}a&b&c \\\\ \\frac{\\pi}{2}&d&e  \\end{bmatrix}^{2}","mat(mat(Cv[10097],Cv[10098],Cv[10099]),mat((Cv[29]/2),Cv[10100],Cv[8]))^2",
"\\begin{bmatrix}1&2&3 \\\\4&5&6 \\\\11&12&13 \\\\14&15&16 \\end{bmatrix}","mat(mat(1,2,3),mat(4,5,6),mat(11,12,13),mat(14,15,16))",
"\\begin{bmatrix} \\begin{bmatrix}x&2 x \\\\11 x&12 x \\end{bmatrix}& \\begin{bmatrix}3 x&4 x \\\\11 x&12 x \\end{bmatrix} \\\\ \\begin{bmatrix}x&2 x \\\\11 x&12 x \\end{bmatrix}& \\begin{bmatrix}3 x&4 x \\\\11 x&12 x \\end{bmatrix} \\end{bmatrix}","mat(mat(mat(mat(Cv[10120],2Cv[10120]),mat(11Cv[10120],12Cv[10120])),mat(mat(3Cv[10120],4Cv[10120]),mat(11Cv[10120],12Cv[10120]))),mat(mat(mat(Cv[10120],2Cv[10120]),mat(11Cv[10120],12Cv[10120])),mat(mat(3Cv[10120],4Cv[10120]),mat(11Cv[10120],12Cv[10120]))))",
"a(x)+b(\\omega)","Cv[10097](Cv[10120])+Cv[10098](Cv[969])",
"\\frac {\\pi}{\\omega}","Cv[29]/Cv[969]",
"\\frac (\\pi)(\\omega)","Cv[29]/Cv[969]",
"\\frac {\\pi}{\\omega}\\frac {a}{b}","(Cv[29]/Cv[969])(Cv[10097]/Cv[10098])",
"\\frac {\\pi}{\\omega}+\\frac {a}{b}","Cv[29]/Cv[969]+Cv[10097]/Cv[10098]",
"\\frac {\\pi}{\\omega}*\\frac {a}{b}","Cv[29]/Cv[969]*Cv[10097]/Cv[10098]",
"\\frac {\\pi}{\\omega}*\\frac {\\pi}{b}","Cv[29]/Cv[969]*Cv[29]/Cv[10098]",
"\\frac ab","Cv[10097]/Cv[10098]",
"\\frac a b","Cv[10097]/Cv[10098]",
"\\frac {a}b","Cv[10097]/Cv[10098]",
"\\frac a{b}","Cv[10097]/Cv[10098]",
"\\frac 2b","2/Cv[10098]",
"\\frac 2{b}","2/Cv[10098]",
"\\frac {2}{b}","2/Cv[10098]",
"\\frac {21}{b}","21/Cv[10098]",
"\\frac \\pi \\omega","Cv[29]/Cv[969]",
"\\frac{\\pi} \\omega","Cv[29]/Cv[969]",
" \\left( \\frac{x}{y} \\right)^{n}= \\frac{x^{n}}{y^{n}}","(Cv[10120]/Cv[10121])^Cv[10110]=(Cv[10120]^Cv[10110]/Cv[10121]^Cv[10110])",
"\\sqrt x","sqt(Cv[10120])",
"\\sqrt xy","sqt(Cv[10120])Cv[10121]",
"\\sqrt 2","sqt(2)",
"\\sqrt{\\frac{\\zeta}{\\mu}-\\frac{\\pi}{\\beta}}","sqt(Cv[950]/Cv[956]-Cv[29]/Cv[946])",
"\\sqrt{\\frac{\\sin{\\zeta}}{\\mu}-\\frac{\\pi}{\\beta}}","sqt(sin(Cv[950])/Cv[956]-Cv[29]/Cv[946])",
"\\sqrt{\\frac{\\sin\\left(\\zeta\\right)}{\\mu}-\\frac{\\pi}{\\beta}}","sqt(sin(Cv[950])/Cv[956]-Cv[29]/Cv[946])",
"\\sqrt{\\frac{\\sin\\left(x\\right)}{y}-\\frac{\\pi}{4}}","sqt(sin(Cv[10120])/Cv[10121]-Cv[29]/4)",
"\\sqrt[4]{\\frac{\\sin{\\zeta}}{\\mu}-\\frac{\\pi}{\\beta}}","nrt(4,(sin(Cv[950])/Cv[956])-(Cv[29]/Cv[946]))",
"\\int \\frac{a}{x} d x","Cv[8747](Cv[10097]/Cv[10120])Cv[8748]Cv[10120]",
"\\int_{1}^{2} \\sin\\left(x\\right) dx","itg(2,1)sin(Cv[10120])Cv[8748]Cv[10120]",
"\\int^{2}_{1} \\sin\\left(x\\right) dx","itg(2,1)sin(Cv[10120])Cv[8748]Cv[10120]",
"\\int^{2} \\sin\\left(x\\right) dx","itg(2,)sin(Cv[10120])Cv[8748]Cv[10120]",
"\\int_{2} \\sin\\left(x\\right) dx","itg(,2)sin(Cv[10120])Cv[8748]Cv[10120]",
"x^n","Cv[10120]^Cv[10110]",
"x^n+1","Cv[10120]^Cv[10110]+1",
"x^{n}","Cv[10120]^(Cv[10110])",
"x^(n)","Cv[10120]^(Cv[10110])",
"x^{n+1}","Cv[10120]^(Cv[10110]+1)",
"x^{\\frac{a}{b}}","Cv[10120]^(Cv[10097]/Cv[10098])",
"x_n","Cv[10120]sbt(Cv[10110])",
"x_{n}","Cv[10120]sbt(Cv[10110])",
"x_{n+1}","Cv[10120]sbt(Cv[10110]+1)",
"x_n+1","Cv[10120]sbt(Cv[10110])+1",
"x_1nx","Cv[10120]sbt(1)Cv[10110]Cv[10120]",
"\\frac {x^{2}}{y}","Cv[10120]^2/Cv[10121]",
"\\frac {x}{y}^2","(Cv[10120]/Cv[10121])^2",
"{\\frac {x}{y}}^2","(Cv[10120]/Cv[10121])^2",
"(\\frac {x}{y})^2","(Cv[10120]/Cv[10121])^2",
"\\frac 2 x","2/Cv[10120]",
"\\frac 2x","2/Cv[10120]",
"(\\frac {x}{y})^(-\\frac {1}{2})","(Cv[10120]/Cv[10121])^-(1/2)",
"\\frac{1 + \\sqrt{5}}{2}","(1+sqt(5))/2",
"\\underline{XY}","und(Cv[10088]Cv[10089])",
"\\frac{d}{dx}","tdr(Cv[10120])",
"\\frac{d}{dy} y^2","tdr(Cv[10121])Cv[10121]^2",
"\\frac{d^2}{dy^2} y^2","tdr(Cv[10121],2)Cv[10121]^2",
"\\frac{d^3}{dy^3} y^5","tdr(Cv[10121],3)Cv[10121]^5",
"\\frac{d}{dy} \\sin(y)","tdr(Cv[10121])sin(Cv[10121])",
"\\frac{dx}{dy}=\\sin{y}","sdr(Cv[10120],Cv[10121])=sin(Cv[10121])",
"\\frac{d^2x}{dy^2}=\\sin{y}","sdr(Cv[10120],Cv[10121],2)=sin(Cv[10121])",
"\\frac{\\partial}{\\partial x}","idr(Cv[10120])",
"\\frac{\\partial}{\\partial y} y^2","idr(Cv[10121])Cv[10121]^2",
"\\frac{\\partial}{\\partial x} \\sin{x}","idr(Cv[10120])sin(Cv[10120])",
"\\frac{\\partial x}{\\partial y} = \\sin(y)","psd(Cv[10120],Cv[10121])=sin(Cv[10121])",
"\\frac{\\partial^2 x}{\\partial y^2} = \\sin(y)","psd(Cv[10120],Cv[10121],2)=sin(Cv[10121])",
"\\frac{d^2}{d x^2} x^{3}","tdr(Cv[10120],2)Cv[10120]^3",
"\\frac{\\partial^2}{\\partial x^2}\\frac{a}{x}+\\frac{b}{x}-\\frac{c}{x}","idr(Cv[10120],2)(Cv[10097]/Cv[10120])+(Cv[10098]/Cv[10120])-(Cv[10099]/Cv[10120])",
"\\sin x \\cos x","sin(Cv[10120])cos(Cv[10120])",
"\\sin \\frac xy \\cos 2x","sin(Cv[10120]/Cv[10121])cos(2)Cv[10120]",
"\\sin \\frac xy \\cos \\frac ax","sin(Cv[10120]/Cv[10121])cos(Cv[10097]/Cv[10120])",
"\\sin^{-1}{\\frac {x}{y}}","asn(Cv[10120]/Cv[10121])",
"\\coth^{-1}{\\frac {x}{y}}","azh(Cv[10120]/Cv[10121])",
"\\coth^{-1}{\\frac {x}{y}}\\sin^{-1}{\\frac {x}{y}}","azh(Cv[10120]/Cv[10121])asn(Cv[10120]/Cv[10121])",
"\\sin^2{\\frac{x}{y}}\\tan{2x}","sin(Cv[10120]/Cv[10121])^2tan(2Cv[10120])",
"\\sin^x{\\frac{x}{y}}","sin(Cv[10120]/Cv[10121])^Cv[10120]",
"\\sin^{ab}{\\frac{x}{y}}","sin(Cv[10120]/Cv[10121])^(Cv[10097]Cv[10098])",
"\\sin^\\mu{\\frac{x}{y}}","sin(Cv[10120]/Cv[10121])^Cv[956]",
"\\lim_{x\\to3}\\frac{x}{y}","lim(Cv[10120],3)Cv[10120]/Cv[10121]",
"\\lim_{x\\rightarrow 3}\\frac{x}{y}","lim(Cv[10120],3)Cv[10120]/Cv[10121]",
"\\prod_{n=1}^{x} \\frac{e^{-n}}{2}","prd(Cv[10120],Cv[10110]=1)Cv[8]^-Cv[10110]/2",
"\\sum_{n=1}^{\\infty }\\frac{e^{n}}{2}","sum(Cv[8734],Cv[10110]=1)Cv[8]^Cv[10110]/2",
"\\left(\\frac{d}{dx}f\\left(x\\right)\\right)+\\left(\\frac{d}{dy}g\\left(y\\right)\\right)=f\\prime\\left(x\\right)+g\\prime\\left(y\\right)","(tdr(Cv[10120])Cv[10102](Cv[10120]))+(tdr(Cv[10121])Cv[10103](Cv[10121]))=Cv[10102]Cv[8242](Cv[10120])+Cv[10103]Cv[8242](Cv[10121])",
"\\lim_{x \\to 0} \\frac{\\left(f \\left(x+h\\right)-f \\left(x\\right)\\right)}{h}","lim(Cv[10120],0)(Cv[10102](Cv[10120]+Cv[10104])-Cv[10102](Cv[10120]))/Cv[10104]",
"\\sum_{i=1}\\prod_{i=1}\\cap_{i=1}\\cup_{i=1}^{n}","sum(,Cv[10105]=1)prd(,Cv[10105]=1)cap(,Cv[10105]=1)cup(Cv[10110],Cv[10105]=1)",
"\\sum_{i=1}\\prod_{i=1}\\bigcap_{i=1}\\bigcup_{i=1}^{n}","sum(,Cv[10105]=1)prd(,Cv[10105]=1)cap(,Cv[10105]=1)cup(Cv[10110],Cv[10105]=1)",
"\\bigcup_{i=1}\\bigcup_{i=1}\\bigcap_{i=1}\\bigcap_{i=1}^{n}{X_i}^{n}{X_i}^{n}{X_i}^{n}{X_i}","cup(,Cv[46]=1)cup(,Cv[46]=1)cap(,Cv[46]=1)cap(Cv[10110],Cv[46]=1)Cv[10088]sbt(Cv[46])^(Cv[10110])Cv[10088]sbt(Cv[46])^Cv[10110]Cv[10088]sbt(Cv[46])^Cv[10110]Cv[10088]sbt(Cv[46])",
"\\log{\\frac{y}{\\pi}}","log(Cv[10121]/Cv[29])",
"\\log_{x}{\\frac{y}{\\pi}}","lgn(Cv[10120],(Cv[10121]/Cv[29]))",
"\\frac{n!}{^n}{^n}\\frac{n!}{\\sum_{i=1}}\\sum_{i=1}\\sum_{i=1}X_1, \\cdots,X_n X_1, \\cdots,X_n X_1, \\cdots,X_n \\frac{x-\\mu}{\\sigma}^{n}{(X_i - \\overline{X})^2}^{n}{X_i^2}^{n}{X_i}{r!(n-r)!}C_rC_r{r!(n-r)!}","(Cv[10110]!/^Cv[10110])^Cv[10110](Cv[10110]!/sum(,Cv[46]=1))sum(,Cv[46]=1)sum(,Cv[46]=1)Cv[10088]sbt(1),Cv[8943],Cv[10088]sbt(Cv[10110])Cv[10088]sbt(1),Cv[8943],Cv[10088]sbt(Cv[10110])Cv[10088]sbt(1),Cv[8943],Cv[10088]sbt(Cv[10110])((Cv[10120]-Cv[956])/Cv[39])^Cv[10110](Cv[10088]sbt(Cv[46])-con(Cv[10088]))^2^Cv[10110]Cv[10088]sbt(Cv[46])^2^Cv[10110]Cv[10088]sbt(Cv[46])Cv[10114]!(Cv[10110]-Cv[10114])!Cv[10067]sbt(Cv[10114])Cv[10067]sbt(Cv[10114])Cv[10114]!(Cv[10110]-Cv[10114])!",
"\\vec{R}\\psi (t)=\\hat{\\psi}\\sum_i \\hat{\\psi_i} cos(\\alpha_i \\pm \\omega t)e^{i(\\omega t\\, \\pm\\, \\theta)}=\\frac{m_1 \\vec{r}_1 + m_2 \\vec{r}_2}{m_1+m_2}","vec(Cv[10082])Cv[968](Cv[10116])=hat(Cv[968])sum(,Cv[10105])hat(Cv[968]sbt(Cv[10105]))cos(Cv[945]sbt(Cv[10105])Cv[177]Cv[969]Cv[10116])Cv[10101]^(Cv[10105](Cv[969]Cv[10116]Cv[177]Cv[952]))=((Cv[10109]sbt(1)vec(Cv[10114])sbt(1)+Cv[10109]sbt(2)vec(Cv[10114])sbt(2))/(Cv[10109]sbt(1)+Cv[10109]sbt(2)))",
"\\frac{1 + \\sqrt{5}}{2} \\ = \\  1 + \\frac{1}{1+\\frac{1}{1+\\frac{1}{1+\\ldots{}}}}  \\ = \\ \\sqrt{1+\\sqrt{1+\\sqrt{1+\\sqrt{1+\\sqrt{1+\\ldots{}}}}}}","((1+sqt(5))/2)=1+(1/(1+(1/(1+(1/(1+Cv[9476]))))))=sqt(1+sqt(1+sqt(1+sqt(1+sqt(1+Cv[9476])))))",
"\\int_0^\\infty \\mathrm{e}^{-x}\\,\\mathrm{d}x","itg(Cv[8734],0)Cv[8]^(-Cv[10120])Cv[8748]Cv[10120]",
"\\left\\{\\sin\\frac{x}{2}+\\frac{\\cos\\frac{y}{2}}{2\\imath}\\right\\}","cbr(sin(Cv[10120]/2)+cos(Cv[10121]/2)/2Cv[46])",
"x=a_{0}+ \\frac{1}{x}=a_{0}+ \\frac{1}{x}=a_{0}+ \\frac{1}{ \\left(a_{1}+ \\frac{1}{ \\left(a_{2}+ \\frac{1}{a_{3}+a_{4}} \\right)} \\right)} a_{1}+ \\frac{1}{ \\left(a_{2}+ \\frac{1}{a_{3}+a_{4}} \\right)} a_{1}+ \\frac{1}{ \\left(a_{2}+ \\frac{1}{a_{3}+a_{4}} \\right)}","Cv[10120]=Cv[10097]sbt(0)+(1/Cv[10120])=Cv[10097]sbt(0)+(1/Cv[10120])=Cv[10097]sbt(0)+(1/(Cv[10097]sbt(1)+(1/(Cv[10097]sbt(2)+(1/(Cv[10097]sbt(3)+Cv[10097]sbt(4)))))))Cv[10097]sbt(1)+(1/(Cv[10097]sbt(2)+(1/(Cv[10097]sbt(3)+Cv[10097]sbt(4)))))Cv[10097]sbt(1)+(1/(Cv[10097]sbt(2)+(1/(Cv[10097]sbt(3)+Cv[10097]sbt(4)))))",
"A B \\Gamma  \\Delta E \\alpha  \\beta  \\gamma  \\delta  \\epsilon Z H \\Theta I K \\zeta  \\eta  \\theta  \\iota  \\kappa  \\Lambda M N  \\Xi O \\lambda  \\mu  \\nu  \\xi o ","Cv[10065]Cv[10066]Cv[915]Cv[916]Cv[10069]Cv[945]Cv[946]Cv[947]Cv[948]Cv[949]Cv[10090]Cv[10072]Cv[920]Cv[10073]Cv[10075]Cv[950]Cv[951]Cv[952]Cv[953]Cv[954]Cv[923]Cv[10077]Cv[10078]Cv[926]Cv[10079]Cv[18]Cv[956]Cv[957]Cv[958]Cv[10111]",
"\\Pi  \\Sigma T \\Upsilon  \\pi  \\sigma  \\tau  \\upsilon  \\Phi X \\Psi  \\Omega  \\phi  \\chi  \\psi  \\omega ","Cv[928]Cv[931]Cv[10084]Cv[933]Cv[29]Cv[39]Cv[964]Cv[965]Cv[934]Cv[10088]Cv[936]Cv[937]Cv[31]Cv[967]Cv[968]Cv[969]",
"\\vec{x}\\hat{y}\\overline{\\pi}\\underline{z}","vec(Cv[10120])hat(Cv[10121])con(Cv[29])und(Cv[10122])",
" \\vec{x_1} \\hat{y_2} \\overline{ \\pi_3} \\underline{z_4}","vec(Cv[10120]sbt(1))hat(Cv[10121]sbt(2))con(Cv[29]sbt(3))und(Cv[10122]sbt(4))",
"\\phi_n(\\kappa) =\\frac{1}{4\\pi^2\\kappa^2} \\int_0^\\infty\\frac{\\sin(\\kappa R)}{\\kappa R}\\frac{\\partial}{\\partial R}\\left[R^2\\frac{\\partial D_n(R)}{\\partial R}\\right]\\,dR","Cv[31]sbt(Cv[10110])(Cv[954])=(1/4Cv[29]^2Cv[954]^2)itg(Cv[8734],0)(sin(Cv[954]Cv[10082])/Cv[954]Cv[10082])(Cv[8706]/Cv[8706]Cv[10082])sbr(Cv[10082]^2(Cv[8706]Cv[10068]sbt(Cv[10110])(Cv[10082])/Cv[8706]Cv[10082]))Cv[8748]Cv[10082]",
"V=\\frac16\\pi h\\left[3\\left(r_1^2+r_2^2\\right)+h^2\\right]","Cv[10086]=(1/6)Cv[29]Cv[10104]sbr(3(Cv[10114]sbt(1)^2+Cv[10114]sbt(2)^2)+Cv[10104]^2)",
"2 = \\left(\\frac{\\left(3-x\\right) \\times 2}{3-x}\\right)","2=((((3-Cv[10120])*2)/(3-Cv[10120])))",
"S_{\\text{new}} = S_{\\text{old}} - \\frac{ \\left( 5-T \\right) ^2} {2}","Cv[10083]sbt(Cv[10110]Cv[8]Cv[10119])=Cv[10083]sbt(Cv[10111]Cv[10108]Cv[10100])-(((5-Cv[10084])^2)/2)",
"- \\frac{b}{3 a}+ \\frac{1- \\imath \\sqrt{3}}{6 a} \\sqrt[3]{ \\frac{1}{2} \\left(2 b^{3}-9 a b c+27 a^{2} d+ \\sqrt{\\Delta} \\right)}+ \\frac{1+ \\imath \\sqrt{3}}{6 a} \\sqrt[3]{ \\frac{1}{2} \\left(2 b^{3}-9 a b c+27 a^{2} d- \\sqrt{ \\Delta } \\right)}","-(Cv[10098]/3Cv[10097])+((1-Cv[46]sqt(3))/6Cv[10097])nrt(3,(1/2)(2Cv[10098]^3-9Cv[10097]Cv[10098]Cv[10099]+27Cv[10097]^2Cv[10100]+sqt(Cv[916])))+((1+Cv[46]sqt(3))/6Cv[10097])nrt(3,(1/2)(2Cv[10098]^3-9Cv[10097]Cv[10098]Cv[10099]+27Cv[10097]^2Cv[10100]-sqt(Cv[916])))",
"(x_0 x_1 x_2 x_3)\\leftrightarrow\\begin{pmatrix} x_0+x_3&x_1+ix_2\\\\x_1-ix_2&x_0-x_3\\end{pmatrix}","(Cv[10120]sbt(0)Cv[10120]sbt(1)Cv[10120]sbt(2)Cv[10120]sbt(3))Cv[8596]mat(mat(Cv[10120]sbt(0)+Cv[10120]sbt(3),Cv[10120]sbt(1)+Cv[46]Cv[10120]sbt(2)),mat(Cv[10120]sbt(1)-Cv[46]Cv[10120]sbt(2),Cv[10120]sbt(0)-Cv[10120]sbt(3)))",
"\\arg {\\Gamma (x)}","arg(gam(Cv[10120]))",
"\\exp {{x}}","exp(Cv[10120])",
];

var financial =
[
"mgCalc.PresentValue(1000,0,83.79,1,1,12)","1000.05",
"mgCalc.FutureValue(0,1000,-83.79,1,1,12)","1010.1",
"mgCalc.Payment(1000,0,83.79,1,1,12)","83.79",
"mgCalc.Rate(1000,0,83.79,1,1,12)","1.01",
"mgCalc.Term(1000,0,83.79,1,1,12)","1",
"mgCalc.Term(100,1000,0,1,1,12)","230.35",
"mgCalc.Term(1000,100,1,0,1,12)","75",
"mgCalc.Term(100,1000,-72.88,5,1,12)","1",

"mgCalc.Call(90/365,5,100,110,5,.5)","15.93",
"mgCalc.CallDelta(90/365,5,100,110,5,.5)","0.202",
"mgCalc.CallTheta(90/365,5,100,110,5,.5)","-0.0504",
"mgCalc.CallRho(90/365,5,100,110,5,.5)","0.169",
"mgCalc.Put(90/365,5,110,100,5,.5)","15.93",
"mgCalc.PutDelta(90/365,5,110,100,5,.5)","-0.176",
"mgCalc.PutTheta(90/365,5,110,100,5,.5)","-0.0504",
"mgCalc.PutRho(90/365,5,110,100,5,.5)","-0.161",
"mgCalc.OptionGamma(90/365,5,100,110,5,.5)","0.00374",
"mgCalc.OptionVega(90/365,5,100,100,5,.5)","0.194",
];

var internal =
[
"mgCalc.RoundDec(1.123456789,6)","1.123457",
"mgCalc.RoundDec(1.123456789e-21,6)","1.123457e-21",
"mgCalc.RoundDec(123.45678901234e-21,6)","1.234568e-19",
"mgCalc.GCF(120,76)","4",
"mgCalc.GCF(2049,333)","3",
"mgCalc.GCF(450,225)","225",
"mgCalculate('2+3').mg","5",
"mgSubstitute('2/Cv[10110]+1','Cv[10110]','Cv[10120]^2').mg","2/Cv[10120]^2+1",
"mgTrans.mgExport('lmt(cDiv(1,Cv[10120]),Cv[10120],1)')","lim(Cv[10120],1)1/Cv[10120]",
"mgTrans.mgExport('pmm(cDiv(1,Cv[10120]),Cv[10120],1,10)')","prd(Cv[10120],1Cv[61]10)1/Cv[10120]",
"mgTrans.mgExport('drv(cDiv(1,Cv[10120]),Cv[10120])')","(idr(Cv[10120])1/Cv[10120])",
"mgTrans.mgExport('drv(cDiv(1,Cv[10120]),Cv[10120],2)')","(idr(Cv[10120],2)1/Cv[10120])",
"mgTrans.mgExport('tdv(cDiv(1,Cv[10120]),Cv[10120])')","(tdr(Cv[10120])1/Cv[10120])",
"mgTrans.mgExport('tdv(cDiv(1,Cv[10120]),Cv[10120],2)')","(tdr(Cv[10120],2)1/Cv[10120])",
"mgTrans.mgExport('cBnd(Cv[10120],cAng(Cv[10110],2))')","Cv[10120]Cv[10110]~2",
"mgTrans.mgExport('cMul(cDiv(1,2),cDiv(3,4))')","(1/2)(3/4)",
"mgTrans.mgExport('log(int(arg(cei(Cv[10120]))))')","log(int(arg(cei(Cv[10120]))))",
"mgTrans.mgExport('lgn(3,nrt(Cv[10120],Cv[10121]))')","lgn(3,nrt(Cv[10120],Cv[10121]))",
"mgTrans.mgExport('cMul(gam(Cv[10120]),cdf(Cv[10120]))')","gam(Cv[10120])cdf(Cv[10120])",
"mgTrans.mgExport('cMul(pdf(Cv[10120]),lcf(Cv[10120]))')","pdf(Cv[10120])lcf(Cv[10120])",
"mgTrans.mgExport('cMul(lpf(Cv[10120]),rou(Cv[10120]))')","lpf(Cv[10120])rou(Cv[10120])",
"mgTrans.mgExport('cMul(rnd(Cv[10120]),rex(Cv[10120]))')","rnd(Cv[10120])rex(Cv[10120])",
"mgTrans.mgExport('cMul(imx(Cv[10120]),frc(Cv[10120]))')","imx(Cv[10120])frc(Cv[10120])",
"mgTrans.mgExport('cMul(sbr(Cv[10120]),cbr(Cv[10120]))')","sbr(Cv[10120])cbr(Cv[10120])",
"mgTrans.mgExport('cMul(udt(Cv[10120]),tld(Cv[10120]))')","udt(Cv[10120])tld(Cv[10120])",
"mgTrans.mgExport('cMul(cup(Cv[10120],Cv[10121]),cap(Cv[10120],Cv[10121]))')","cup(Cv[10120],Cv[10121])cap(Cv[10120],Cv[10121])",
"mgTrans.mgExport('tdv(cPow(Cv[10120],2),Cv[10120])')","(tdr(Cv[10120])Cv[10120]^2)",
"mgTrans.mgExport('drv(cPow(Cv[10120],2),Cv[10120])')","(idr(Cv[10120])Cv[10120]^2)",
"mgTrans.mgExport('tdv(cPow(Cv[10120],2),Cv[10120],2)')","(tdr(Cv[10120],2)Cv[10120]^2)",
"mgTrans.mgExport('drv(cPow(Cv[10120],2),Cv[10120],2)')","(idr(Cv[10120],2)Cv[10120]^2)",
"mgTrans.mgExport('tdr(Cv[10120])')","tdr(Cv[10120])",
"mgTrans.mgExport('idr(Cv[10120])')","idr(Cv[10120])",
"mgTrans.mgExport('tdr(Cv[10120],2)')","tdr(Cv[10120],2)",
"mgTrans.mgExport('idr(Cv[10120],2)')","idr(Cv[10120],2)",
"mgTrans.mgExport('mat(mat(1,2,3,4,5),mat(4,5,6,7,8))')","mat(mat(1,2,3,4,5),mat(4,5,6,7,8))",
"mgTrans.mgExport('cDot(Cv[10120],Cv[10121])')","Cv[10120]Cv[8226]Cv[10121]",
"mgTrans.mgExport('cTms(Cv[10120],Cv[10121])')","Cv[10120]*Cv[10121]",
"mgTrans.mgExport('sum(1,10)cTms(Cv[10120],Cv[10121])')","sum(1,10)Cv[10120]*Cv[10121]",
"mgTrans.mgExport('prd(1,10)cTms(Cv[10120],Cv[10121])')","prd(1,10)Cv[10120]*Cv[10121]",
"mgTrans.mgExport('lim(1,10)cTms(Cv[10120],Cv[10121])')","lim(1,10)Cv[10120]*Cv[10121]",
"mgTrans.mgExport('itg(1,10)cTms(Cv[10120],Cv[10121])')","itg(1,10)Cv[10120]*Cv[10121]",
];


var testList =
{

"Numerical": "runNumerical()",
"Range": "runRange()",
"Domain": "runDomain()",
"Matrix": "runMatrix()",
"Reduce": "runReduce()",
"Factor": "runFactor()",
"Expand": "runExpand()",
"Solve": "runSolve()",
"Trig to Exponential": "runTrigtoexp()",
"Exponential to Trig": "runExptotrig()",
"Limits": "runLimits()",
"Complex Derivatives": "runDerivatives()",
"Complex Integrals": "runIntegrals()",
"Real Calculus": "runRealCalculus()",
"Summation": "runSummation()",
"Taylor Series": "runSeries()",
"HTML": "runHTML()",
"Latex Export": "runExport()",
"Latex Import": "runImport()",
"Financial": "runFinancial()",
"Internal": "runInternal()",

};

function execTest(testSuite) {
    totalTime = 0;
    startTime = Date.now();
    testNum = 0;
    tPass = 0;
    tFail = 0;
    htmlResults = "";
    eval(testList[testSuite])
}
function setTitle(label) {
    htmlResults =htmlResults+"<br><div align='center'><b>"+label+"</b></div><br>";
}
function runNumerical() {
    setTitle("Numerical Tests 'mgNumeric()'")
    mgConfig.dPrecision = 8; //reduce precision to allow for different JS engines
    increment = 2;
    for (index=0;index<numerical.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgNumeric(numerical[index]).mg;
			const xpectd = numerical[index+1];
			test("Numerical:"+numerical[index], function () {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(numerical[index]).html,mgNumeric(numerical[index]).html,mgTranslate(numerical[index+1]).html)
		}
    }
    mgConfig.dPrecision = 16;
    toOutput()
}
function runRange() {
    setTitle("Range Tests 'mgRange()'")
    increment = 2;
    degree = 1;
    for (index=0;index<range.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgRange(range[index]).html;
			const xpectd = mgTranslate(range[index+1]).html;
			test("Range:"+range[index], function () {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(range[index]).html,mgRange(range[index]).html,mgTranslate(range[index+1]).html)
		}
    }
    toOutput()
}
function runDomain() {
    setTitle("Domain Tests 'mgDomain()'")
    increment = 2;
    degree = 1;
    for (index=0;index<domain.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgDomain(domain[index]).html;
			const xpectd = mgTranslate(domain[index+1]).html;
			test("Domain:"+domain[index], function () {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(domain[index]).html,mgDomain(domain[index]).html,mgTranslate(domain[index+1]).html)
		}
    }
    toOutput()
}
function runMatrix() {
    setTitle("Matrix Tests 'mgSimplify()'")
    increment = 2;
    degree = 1;
    for (index=0;index<matrix.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgSimplify(matrix[index]).html;
			const xpectd = mgTranslate(matrix[index+1]).html;
			test("Matrix:"+matrix[index], function () {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(matrix[index]).html,mgSimplify(matrix[index]).html,mgTranslate(matrix[index+1]).html)
		}
    }
    toOutput()
}
function runReduce() {
    setTitle("Reduce Tests 'mgSimplify()'")
    degree = 1;
    increment = 2;
    for (index=0;index<reduce.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgSimplify(reduce[index]).html;
			const xpectd = mgTranslate(reduce[index+1]).html;
			test("Reduce:"+reduce[index], function () {return expect(xpectd).toBe(rceivd)})	
		}
		else {
        runTest(mgTranslate(reduce[index]).html,mgSimplify(reduce[index]).html,mgTranslate(reduce[index+1]).html)
		}
    }
    toOutput()
}
function runFactor() {
    setTitle("Factor Tests 'mgFactor()'")
    degree = 1;
    increment = 2;
    for (index=0;index<factor.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgFactor(factor[index]).html;
			const xpectd = mgTranslate(factor[index+1]).html;
			test("Factor:"+factor[index], function () {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(factor[index]).html,mgFactor(factor[index]).html,mgTranslate(factor[index+1]).html)
		}
    }
    toOutput()
}
function runExpand() {
    setTitle("Expand Tests 'mgExpand()'")
    increment = 2;
    for (index=0;index<expand.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgExpand(expand[index]).html;
			const xpectd = mgTranslate(expand[index+1]).html;
			test("Expand:"+expand[index], function () {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(expand[index]).html,mgExpand(expand[index]).html,mgTranslate(expand[index+1]).html)
		}
    }
    toOutput()
}
function runSolve() {
    setTitle("Solve Tests 'mgSolve()'")
    increment = 3;
    for (index=0;index<solve.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgSolve(solve[index],solve[index+1]).html;
			const xpectd = mgTranslate(solve[index+2]).html;
			test("Solve:"+solve[index]+" for "+solve[index+2], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(solve[index]).html,mgSolve(solve[index],solve[index+1]).html,mgTranslate(solve[index+2]).html)
		}
    }
    toOutput()
}
function runSeries() {
    setTitle("Taylor Series Tests 'mgSeries()'")
    increment = 5;
    for (index=0;index<series.length;index+=increment) {
        runTest(mgTranslate(series[index]).html,mgSeries(series[index],series[index+1],series[index+2],series[index+3]).html,mgTranslate(series[index+4]).html)
    }
    toOutput()
}
function runTrigtoexp() {
    setTitle("Trig to Exponential Tests 'mgTrigToExp()'")
    increment = 2;
    for (index=0;index<trigtoexp.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgTrigToExp(trigtoexp[index]).html;
			const xpectd = mgTranslate(trigtoexp[index+1]).html;
			test("Trig2exp:"+trigtoexp[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(trigtoexp[index]).html,mgTrigToExp(trigtoexp[index]).html,mgTranslate(trigtoexp[index+1]).html)
		}
    }
    toOutput()
}
function runExptotrig() {
    setTitle("Exponential to Trig Tests 'mgExpToTrig()'")
    increment = 2;
    for (index=0;index<exptotrig.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgExpToTrig(exptotrig[index]).html;
			const xpectd = mgTranslate(exptotrig[index+1]).html;
			test("Exp2trig:"+exptotrig[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(exptotrig[index]).html,mgExpToTrig(exptotrig[index]).html,mgTranslate(exptotrig[index+1]).html)
		}
    }
    toOutput()
}
function runLimits() {
    setTitle("Limits Tests 'mgSimplify()'")
    increment = 2;
    for (index=0;index<limits.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgSimplify(limits[index]).html;
			const xpectd = mgTranslate(limits[index+1]).html;
			test("Limits:"+limits[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(limits[index]).html,mgSimplify(limits[index]).html,mgTranslate(limits[index+1]).html)
		}
    }
    toOutput()
}
function runDerivatives() {
    setTitle("Complex Domain Derivatives Tests 'mgSimplify()'")
    increment = 2;
    for (index=0;index<derivatives.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgSimplify(derivatives[index]).html;
			const xpectd = mgTranslate(derivatives[index+1]).html;
			test("Derivatives:"+derivatives[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(derivatives[index]).html,mgSimplify(derivatives[index]).html,mgTranslate(derivatives[index+1]).html)
		}
    }
    toOutput()
}
function runIntegrals() {
    setTitle("Complex Domain Integrals Tests 'mgSimplify()'")
    increment = 2;
    for (index=0;index<integrals.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgSimplify(integrals[index]).html;
			const xpectd = mgTranslate(integrals[index+1]).html;
			test("Integrals:"+integrals[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(integrals[index]).html,mgSimplify(integrals[index]).html,mgTranslate(integrals[index+1]).html)
		}
    }
    toOutput()
}
function runRealCalculus() {
    setTitle("Real Domain Calculus Tests 'mgSimplify()'")
    increment = 2;
    mgConfig.Domain = "Real";
    for (index=0;index<real_calculus.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgSimplify(real_calculus[index]).html;
			const xpectd = mgTranslate(real_calculus[index+1]).html;
			test("RealCalculus:"+real_calculus[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(real_calculus[index]).html,mgSimplify(real_calculus[index]).html,mgTranslate(real_calculus[index+1]).html)
		}
    }
    toOutput()
    mgConfig.Domain = "Complex";
}
function runSummation() {
    setTitle("Summation Tests 'mgSimplify()'")
    increment = 2;
    for (index=0;index<summation.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgSimplify(summation[index]).html;
			const xpectd = mgTranslate(summation[index+1]).html;
			test("Summation:"+summation[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(summation[index]).html,mgSimplify(summation[index]).html,mgTranslate(summation[index+1]).html)
		}
    }
    toOutput()
}
function runHTML() {
    setTitle("HTML Tests 'mgTranslate().html'")
    increment = 2;
    mgConfig.invFmt = "asin"
    mgConfig.fnFmt = "fn(x)";
    for (index=0;index<html.length;index+=increment) {
		if (nodejs) {
			const xpectd = mgTranslate(html[index]).html;
			const rceivd = html[index+1];
			test("html:"+html[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(html[index],mgTranslate(html[index]).html,html[index+1])
		}
    }
    mgConfig.invFmt = "sin<sup>-1</sup>"
    setTitle("HTML Tests 'mgTranslate().html sin<sup>-1</sup>'")
    for (index=0;index<htmlx.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgTranslate(htmlx[index]).html;
			const xpectd = htmlx[index+1];
			test("html:"+htmlx[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(htmlx[index],mgTranslate(htmlx[index]).html,htmlx[index+1])
		}
    }
    mgConfig.invFmt = "sin<sup>-1</sup>";
    mgConfig.fnFmt = "fn x";
    setTitle("HTML Tests 'mgTranslate().html fn x sin<sup>-1</sup>'")
    for (index=0;index<htmly.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgTranslate(htmly[index]).html;
			const xpectd = htmly[index+1];
			test("html:"+htmly[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(htmly[index],mgTranslate(htmly[index]).html,htmly[index+1])
		}
    }
    mgConfig.invFmt = "asin";
    mgConfig.fnFmt = "fn x";
    setTitle("HTML Tests 'mgTranslate().html fn x asin'")
    for (index=0;index<htmlz.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgTranslate(htmlz[index]).html;
			const xpectd = htmlz[index+1];
			test("html:"+htmlz[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(htmlz[index],mgTranslate(htmlz[index]).html,htmlz[index+1])
		}
    }
    mgConfig.fnFmt = "fn(x)";
    toOutput()
}
function runExport() {
    setTitle("Latex Export Tests 'mgTranslate().latex'")
    increment = 2;
	mgConfig.fnFmt = "fn(x)";
    for (index=0;index<xport.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgTranslate(xport[index]).latex.replace(/ /g,"");
			const xpectd = xport[index+1].replace(/ /g,"");
			test("Latex-xport:"+xport[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(xport[index]).html,mgTranslate(xport[index]).latex.replace(/ /g,""),xport[index+1].replace(/ /g,""))
		}
    }
    mgConfig.fnFmt = "fn x";
    setTitle("Latex Export Tests 'mgTranslate().latex fn x'")
    for (index=0;index<xportx.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgTranslate(xportx[index]).latex.replace(/ /g,"");
			const xpectd = xportx[index+1].replace(/ /g,"");
			test("Latex-xport:"+xportx[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(xportx[index]).html,mgTranslate(xportx[index]).latex.replace(/ /g,""),xportx[index+1].replace(/ /g,""))
		}
    }
    mgConfig.fnFmt = "fn x";
    mgConfig.invFmt = "sin<sup>-1</sup>";
    setTitle("Latex Export Tests 'mgTranslate().latex' 'fn x sin<sup>-1</sup>'")
    for (index=0;index<xporty.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgTranslate(xporty[index]).latex.replace(/ /g,"");
			const xpectd = xporty[index+1].replace(/ /g,"");
			test("Latex-xport:"+xporty[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(xporty[index]).html,mgTranslate(xporty[index]).latex.replace(/ /g,""),xporty[index+1].replace(/ /g,""))
		}
    }
    mgConfig.fnFmt = "fn(x)";
    mgConfig.invFmt = "sin<sup>-1</sup>";
    setTitle("Latex Export Tests 'mgTranslate().latex' 'fn(x) sin<sup>-1</sup>'")
    for (index=0;index<xportz.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgTranslate(xportz[index]).latex.replace(/ /g,"");
			const xpectd = xportz[index+1].replace(/ /g,"");
			test("Latex-xport:"+xportz[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mgTranslate(xportz[index]).html,mgTranslate(xportz[index]).latex.replace(/ /g,""),xportz[index+1].replace(/ /g,""))
		}
    }
    mgConfig.invFmt = "asin";
    
    toOutput()
}
function runImport() {
    setTitle("Latex Import Tests 'mgTranslate().mg'")
    increment = 2;
    mgConfig.fnFmt = "fn(x)";
    for (index=0;index<mport.length;index+=increment) {
		if (nodejs) {
			const rceivd = mgTranslate(mport[index]).html;		    
			const xpectd = mgTranslate(mport[index+1]).html;
			test("Latex-import:"+mport[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(mport[index],mgTranslate(mport[index]).html,mgTranslate(mport[index+1]).html)
		}
    }
    toOutput()
}
function runFinancial() {
    setTitle("Financial Function Tests")
    mgConfig.dPrecision = 2;
    increment = 2;
    for (index=0;index<financial.length;index+=increment) {
		if (nodejs) {
			const rceivd = eval(financial[index])+"";
			const xpectd = financial[index+1];
			test("Financial:"+financial[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(financial[index],eval(financial[index]),financial[index+1])
		}
    }
    mgConfig.dPrecision = 16;
    toOutput()
}
function runInternal() {
    setTitle("Internal Function Tests")
    mgConfig.dPrecision = 8;
    increment = 2;
    for (index=0;index<internal.length;index+=increment) {
		if (nodejs) {
			const rceivd = eval(internal[index])+"";		
			const xpectd = internal[index+1];
			test("Internal:"+internal[index], function() {return expect(xpectd).toBe(rceivd)})	
		}
		else {
			runTest(internal[index],eval(internal[index]),internal[index+1])
		}
    }
    mgConfig.dPrecision = 16;
    toOutput()
}

function runTest(tIn,tOut,tExpected) {
    testNum++;
    var background = "FFFFFF"
    var testStatus = "";
    if (tOut == tExpected) {testStatus = "<font color=green><b>Pass</b></font>";tPass++}
    else {
        testStatus = "<font color=red><b>Fail</b></font>";tFail++;background="FF9999";
    }
    htmlResults = htmlResults+"<table align='center' width='600' bgcolor='#"+background+"'><tr align='left' bgcolor='#DDDDDD'><td align='left' width='25%'><b>Test # </b></td><td align='left' width='75%'><b>"+testNum+"</b></td></tr><tr align='left'><td align='left' width='25%'>Test Input:</td><td align='left' width='75%'>"+tIn+"</td></tr><tr align='left'><td align='left' width='25%'>Test Output:</td><td align='left' width='75%'>"+tOut+"</td></tr><tr align='left'><td align='left' width='25%'>Expected:</td><td align='left' width='75%'>"+tExpected+"</td></tr><tr align='left'><td align='left' width='25%'>Status:</td><td align='left' width='75%'>"+testStatus+"</td></table><br>";
    
}
function toOutput() {
    testTime = Date.now()
    totalTime = (testTime-startTime)
    htmlResults = htmlResults+"<br><b><div align='center'>Tests passed: "+tPass+"</div><div align='center'>Tests failed: "+tFail+"</div></div><div align='center'>Total Time: "+totalTime+"ms</div></b><br>";
    if (!nodejs && document.getElementById('testDisplay')) {document.getElementById('testDisplay').innerHTML = htmlResults}
}

//Node.js branch
if (typeof module == "object") {
    var mgTr = module.require('./mg_translate.js')
    var mgCl = module.require('./mg_calculate.js')
    var mgTranslate = function(xpr,scale) {return mgTr.mgTranslate(xpr,scale)};
    var mgNumeric = function(xpr) {return mgCl.mgNumeric(xpr)};
	var mgCalculate = function(xpr) {return mgCl.mgCalculate(xpr)};
    var mgSimplify = function(xpr) {return mgCl.mgSimplify(xpr)};
	var mgSubstitute = function(x1,x2,x3) {return mgCl.mgSubstitute(x1,x2,x3)};
    var mgRange = function(xpr) {return mgCl.mgRange(xpr)};
    var mgDomain = function(xpr) {return mgCl.mgDomain(xpr)};
    var mgFactor = function(xpr) {return mgCl.mgFactor(xpr)};
    var mgExpand = function(xpr) {return mgCl.mgExpand(xpr)};
    var mgTrigToExp = function(xpr) {return mgCl.mgTrigToExp(xpr)};
    var mgExpToTrig = function(xpr) {return mgCl.mgExpToTrig(xpr)};
    var mgSolve = function(xpr,slvar) {return mgCl.mgSolve(xpr,slvar)};
    var mgSeries = function(xpr,svar,center,order) {return mgCl.mgSeries(xpr,svar,center,order)};
    var mgConfig = mgTr.mgConfig;
    var mgCalc = mgCl.mgCalc;
	var mgTrans = mgTr.mgTrans;
    var nodejs = true;
    for (var testcase in testList) {execTest(testcase)}
}
//